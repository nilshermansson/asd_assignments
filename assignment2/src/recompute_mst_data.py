from .graph import Graph

data = [dict() for _ in range(42)]
# Graph consisting of 2 nodes
data[0]["graph"] = Graph(is_directed=False)
data[0]["graph"].add_edge("a", "b", 1538)
data[0]["graph"].add_edge("a", "c", 1398)
data[0]["graph"].add_edge("b", "c", 1365)
data[0]["mst"] = Graph(is_directed=False)
data[0]["mst"].add_edge("a", "c", weight=1398)
data[0]["mst"].add_edge("b", "c", weight=1365)
data[0]["solutions"] = [
    { "edge": ("a", "b"), "weight": 1539, "expected": [('a', 'c'), ('b', 'c')] },
    { "edge": ("a", "b"), "weight": 1364, "expected": [('a', 'b'), ('b', 'c')] },
    { "edge": ("b", "c"), "weight": 1364, "expected": [('a', 'c'), ('b', 'c')] },
    { "edge": ("a", "c"), "weight": 1399, "expected": [('a', 'c'), ('b', 'c')] }
]
# Graph consisting of 3 nodes
data[1]["graph"] = Graph(is_directed=False)
data[1]["graph"].add_edge("a", "b", 1147)
data[1]["graph"].add_edge("a", "c", 1446)
data[1]["graph"].add_edge("a", "d", 474)
data[1]["graph"].add_edge("b", "c", 1461)
data[1]["graph"].add_edge("b", "d", 327)
data[1]["graph"].add_edge("c", "d", 665)
data[1]["mst"] = Graph(is_directed=False)
data[1]["mst"].add_edge("a", "d", weight=474)
data[1]["mst"].add_edge("b", "d", weight=327)
data[1]["mst"].add_edge("c", "d", weight=665)
data[1]["solutions"] = [
    { "edge": ("a", "c"), "weight": 1447, "expected": [('a', 'd'), ('b', 'd'), ('c', 'd')] },
    { "edge": ("a", "c"), "weight": 473, "expected": [('a', 'c'), ('a', 'd'), ('b', 'd')] },
    { "edge": ("a", "d"), "weight": 473, "expected": [('a', 'd'), ('b', 'd'), ('c', 'd')] },
    { "edge": ("b", "d"), "weight": 328, "expected": [('a', 'd'), ('b', 'd'), ('c', 'd')] }
]
# Graph consisting of 4 nodes
data[2]["graph"] = Graph(is_directed=False)
data[2]["graph"].add_edge("a", "b", 1372)
data[2]["graph"].add_edge("a", "d", 489)
data[2]["graph"].add_edge("a", "e", 1232)
data[2]["graph"].add_edge("b", "c", 560)
data[2]["graph"].add_edge("b", "e", 112)
data[2]["graph"].add_edge("d", "c", 570)
data[2]["graph"].add_edge("e", "c", 235)
data[2]["mst"] = Graph(is_directed=False)
data[2]["mst"].add_edge("a", "d", weight=489)
data[2]["mst"].add_edge("b", "e", weight=112)
data[2]["mst"].add_edge("d", "c", weight=570)
data[2]["mst"].add_edge("e", "c", weight=235)
data[2]["solutions"] = [
    { "edge": ("a", "b"), "weight": 1373, "expected": [('a', 'd'), ('b', 'e'), ('d', 'c'), ('e', 'c')] },
    { "edge": ("a", "e"), "weight": 569, "expected": [('a', 'd'), ('a', 'e'), ('b', 'e'), ('e', 'c')] },
    { "edge": ("a", "d"), "weight": 488, "expected": [('a', 'd'), ('b', 'e'), ('d', 'c'), ('e', 'c')] },
    { "edge": ("b", "e"), "weight": 113, "expected": [('a', 'd'), ('b', 'e'), ('d', 'c'), ('e', 'c')] }
]
# Graph consisting of 5 nodes
data[3]["graph"] = Graph(is_directed=False)
data[3]["graph"].add_edge("a", "c", 746)
data[3]["graph"].add_edge("a", "d", 744)
data[3]["graph"].add_edge("a", "f", 153)
data[3]["graph"].add_edge("c", "b", 285)
data[3]["graph"].add_edge("c", "e", 1310)
data[3]["graph"].add_edge("d", "b", 1316)
data[3]["graph"].add_edge("d", "f", 1651)
data[3]["graph"].add_edge("f", "b", 327)
data[3]["mst"] = Graph(is_directed=False)
data[3]["mst"].add_edge("a", "d", weight=744)
data[3]["mst"].add_edge("a", "f", weight=153)
data[3]["mst"].add_edge("c", "b", weight=285)
data[3]["mst"].add_edge("c", "e", weight=1310)
data[3]["mst"].add_edge("f", "b", weight=327)
data[3]["solutions"] = [
    { "edge": ("d", "b"), "weight": 1317, "expected": [('a', 'f'), ('a', 'd'), ('c', 'b'), ('c', 'e'), ('f', 'b')] },
    { "edge": ("d", "f"), "weight": 284, "expected": [('a', 'f'), ('c', 'b'), ('c', 'e'), ('d', 'f'), ('f', 'b')] },
    { "edge": ("a", "d"), "weight": 743, "expected": [('a', 'f'), ('a', 'd'), ('c', 'b'), ('c', 'e'), ('f', 'b')] },
    { "edge": ("a", "f"), "weight": 154, "expected": [('a', 'f'), ('a', 'd'), ('c', 'b'), ('c', 'e'), ('f', 'b')] }
]
# Graph consisting of 6 nodes
data[4]["graph"] = Graph(is_directed=False)
data[4]["graph"].add_edge("a", "b", 879)
data[4]["graph"].add_edge("a", "e", 1422)
data[4]["graph"].add_edge("a", "g", 654)
data[4]["graph"].add_edge("b", "c", 1555)
data[4]["graph"].add_edge("b", "g", 1540)
data[4]["graph"].add_edge("d", "f", 1487)
data[4]["graph"].add_edge("e", "c", 384)
data[4]["graph"].add_edge("e", "d", 1174)
data[4]["graph"].add_edge("g", "c", 1630)
data[4]["mst"] = Graph(is_directed=False)
data[4]["mst"].add_edge("a", "b", weight=879)
data[4]["mst"].add_edge("a", "e", weight=1422)
data[4]["mst"].add_edge("a", "g", weight=654)
data[4]["mst"].add_edge("d", "f", weight=1487)
data[4]["mst"].add_edge("e", "c", weight=384)
data[4]["mst"].add_edge("e", "d", weight=1174)
data[4]["solutions"] = [
    { "edge": ("b", "g"), "weight": 1541, "expected": [('a', 'g'), ('a', 'b'), ('a', 'e'), ('e', 'c'), ('e', 'd'), ('d', 'f')] },
    { "edge": ("b", "c"), "weight": 878, "expected": [('a', 'g'), ('a', 'b'), ('b', 'c'), ('e', 'c'), ('e', 'd'), ('d', 'f')] },
    { "edge": ("a", "b"), "weight": 878, "expected": [('a', 'g'), ('a', 'b'), ('a', 'e'), ('e', 'c'), ('e', 'd'), ('d', 'f')] },
    { "edge": ("a", "g"), "weight": 655, "expected": [('a', 'g'), ('a', 'b'), ('a', 'e'), ('e', 'c'), ('e', 'd'), ('d', 'f')] }
]
# Graph consisting of 7 nodes
data[5]["graph"] = Graph(is_directed=False)
data[5]["graph"].add_edge("a", "b", 1018)
data[5]["graph"].add_edge("a", "d", 1127)
data[5]["graph"].add_edge("a", "f", 1483)
data[5]["graph"].add_edge("b", "f", 1220)
data[5]["graph"].add_edge("b", "g", 1662)
data[5]["graph"].add_edge("c", "h", 789)
data[5]["graph"].add_edge("d", "c", 1394)
data[5]["graph"].add_edge("d", "h", 948)
data[5]["graph"].add_edge("f", "c", 885)
data[5]["graph"].add_edge("g", "e", 533)
data[5]["graph"].add_edge("h", "e", 1608)
data[5]["mst"] = Graph(is_directed=False)
data[5]["mst"].add_edge("a", "b", weight=1018)
data[5]["mst"].add_edge("a", "d", weight=1127)
data[5]["mst"].add_edge("c", "h", weight=789)
data[5]["mst"].add_edge("d", "h", weight=948)
data[5]["mst"].add_edge("f", "c", weight=885)
data[5]["mst"].add_edge("g", "e", weight=533)
data[5]["mst"].add_edge("h", "e", weight=1608)
data[5]["solutions"] = [
    { "edge": ("b", "f"), "weight": 1221, "expected": [('a', 'b'), ('a', 'd'), ('d', 'h'), ('f', 'c'), ('g', 'e'), ('c', 'h'), ('h', 'e')] },
    { "edge": ("b", "g"), "weight": 884, "expected": [('a', 'b'), ('a', 'd'), ('b', 'g'), ('d', 'h'), ('f', 'c'), ('g', 'e'), ('c', 'h')] },
    { "edge": ("a", "d"), "weight": 1126, "expected": [('a', 'b'), ('a', 'd'), ('d', 'h'), ('f', 'c'), ('g', 'e'), ('c', 'h'), ('h', 'e')] },
    { "edge": ("h", "e"), "weight": 1609, "expected": [('a', 'b'), ('a', 'd'), ('d', 'h'), ('f', 'c'), ('g', 'e'), ('c', 'h'), ('h', 'e')] }
]
# Graph consisting of 8 nodes
data[6]["graph"] = Graph(is_directed=False)
data[6]["graph"].add_edge("a", "c", 1553)
data[6]["graph"].add_edge("a", "e", 1365)
data[6]["graph"].add_edge("a", "f", 959)
data[6]["graph"].add_edge("b", "d", 493)
data[6]["graph"].add_edge("c", "b", 780)
data[6]["graph"].add_edge("c", "d", 56)
data[6]["graph"].add_edge("e", "b", 1672)
data[6]["graph"].add_edge("e", "d", 159)
data[6]["graph"].add_edge("f", "g", 167)
data[6]["graph"].add_edge("f", "h", 843)
data[6]["graph"].add_edge("g", "h", 466)
data[6]["graph"].add_edge("g", "i", 1452)
data[6]["graph"].add_edge("h", "i", 94)
data[6]["mst"] = Graph(is_directed=False)
data[6]["mst"].add_edge("a", "e", weight=1365)
data[6]["mst"].add_edge("a", "f", weight=959)
data[6]["mst"].add_edge("b", "d", weight=493)
data[6]["mst"].add_edge("c", "d", weight=56)
data[6]["mst"].add_edge("e", "d", weight=159)
data[6]["mst"].add_edge("f", "g", weight=167)
data[6]["mst"].add_edge("g", "h", weight=466)
data[6]["mst"].add_edge("h", "i", weight=94)
data[6]["solutions"] = [
    { "edge": ("c", "b"), "weight": 781, "expected": [('a', 'f'), ('a', 'e'), ('c', 'd'), ('e', 'd'), ('f', 'g'), ('b', 'd'), ('g', 'h'), ('h', 'i')] },
    { "edge": ("e", "b"), "weight": 958, "expected": [('a', 'f'), ('a', 'e'), ('c', 'd'), ('e', 'd'), ('f', 'g'), ('b', 'd'), ('g', 'h'), ('h', 'i')] },
    { "edge": ("b", "d"), "weight": 492, "expected": [('a', 'f'), ('a', 'e'), ('c', 'd'), ('e', 'd'), ('f', 'g'), ('b', 'd'), ('g', 'h'), ('h', 'i')] },
    { "edge": ("e", "d"), "weight": 160, "expected": [('a', 'f'), ('a', 'e'), ('c', 'd'), ('e', 'd'), ('f', 'g'), ('b', 'd'), ('g', 'h'), ('h', 'i')] }
]
# Graph consisting of 9 nodes
data[7]["graph"] = Graph(is_directed=False)
data[7]["graph"].add_edge("a", "c", 650)
data[7]["graph"].add_edge("a", "f", 1024)
data[7]["graph"].add_edge("a", "i", 1272)
data[7]["graph"].add_edge("b", "h", 212)
data[7]["graph"].add_edge("c", "b", 671)
data[7]["graph"].add_edge("c", "f", 251)
data[7]["graph"].add_edge("d", "e", 1402)
data[7]["graph"].add_edge("d", "g", 1003)
data[7]["graph"].add_edge("e", "g", 960)
data[7]["graph"].add_edge("f", "b", 390)
data[7]["graph"].add_edge("h", "d", 1666)
data[7]["graph"].add_edge("h", "g", 620)
data[7]["graph"].add_edge("i", "e", 983)
data[7]["graph"].add_edge("i", "j", 407)
data[7]["mst"] = Graph(is_directed=False)
data[7]["mst"].add_edge("a", "c", weight=650)
data[7]["mst"].add_edge("b", "h", weight=212)
data[7]["mst"].add_edge("c", "f", weight=251)
data[7]["mst"].add_edge("d", "g", weight=1003)
data[7]["mst"].add_edge("e", "g", weight=960)
data[7]["mst"].add_edge("f", "b", weight=390)
data[7]["mst"].add_edge("h", "g", weight=620)
data[7]["mst"].add_edge("i", "e", weight=983)
data[7]["mst"].add_edge("i", "j", weight=407)
data[7]["solutions"] = [
    { "edge": ("d", "e"), "weight": 1403, "expected": [('a', 'c'), ('i', 'j'), ('i', 'e'), ('c', 'f'), ('f', 'b'), ('b', 'h'), ('h', 'g'), ('d', 'g'), ('e', 'g')] },
    { "edge": ("a", "i"), "weight": 211, "expected": [('a', 'i'), ('a', 'c'), ('i', 'j'), ('c', 'f'), ('f', 'b'), ('b', 'h'), ('h', 'g'), ('d', 'g'), ('e', 'g')] },
    { "edge": ("i", "j"), "weight": 406, "expected": [('a', 'c'), ('i', 'j'), ('i', 'e'), ('c', 'f'), ('f', 'b'), ('b', 'h'), ('h', 'g'), ('d', 'g'), ('e', 'g')] },
    { "edge": ("h", "g"), "weight": 621, "expected": [('a', 'c'), ('i', 'j'), ('i', 'e'), ('c', 'f'), ('f', 'b'), ('b', 'h'), ('h', 'g'), ('d', 'g'), ('e', 'g')] }
]
# Graph consisting of 10 nodes
data[8]["graph"] = Graph(is_directed=False)
data[8]["graph"].add_edge("a", "g", 664)
data[8]["graph"].add_edge("a", "i", 874)
data[8]["graph"].add_edge("a", "j", 803)
data[8]["graph"].add_edge("b", "c", 1368)
data[8]["graph"].add_edge("b", "d", 1286)
data[8]["graph"].add_edge("b", "e", 96)
data[8]["graph"].add_edge("c", "d", 604)
data[8]["graph"].add_edge("d", "e", 830)
data[8]["graph"].add_edge("f", "h", 1206)
data[8]["graph"].add_edge("f", "k", 751)
data[8]["graph"].add_edge("g", "c", 1670)
data[8]["graph"].add_edge("i", "e", 1012)
data[8]["graph"].add_edge("i", "h", 1204)
data[8]["graph"].add_edge("j", "f", 637)
data[8]["graph"].add_edge("j", "g", 149)
data[8]["graph"].add_edge("k", "h", 812)
data[8]["mst"] = Graph(is_directed=False)
data[8]["mst"].add_edge("a", "g", weight=664)
data[8]["mst"].add_edge("a", "i", weight=874)
data[8]["mst"].add_edge("b", "e", weight=96)
data[8]["mst"].add_edge("c", "d", weight=604)
data[8]["mst"].add_edge("d", "e", weight=830)
data[8]["mst"].add_edge("f", "k", weight=751)
data[8]["mst"].add_edge("i", "e", weight=1012)
data[8]["mst"].add_edge("j", "f", weight=637)
data[8]["mst"].add_edge("j", "g", weight=149)
data[8]["mst"].add_edge("k", "h", weight=812)
data[8]["solutions"] = [
    { "edge": ("f", "h"), "weight": 1207, "expected": [('a', 'g'), ('a', 'i'), ('i', 'e'), ('j', 'g'), ('j', 'f'), ('b', 'e'), ('c', 'd'), ('d', 'e'), ('f', 'k'), ('k', 'h')] },
    { "edge": ("g", "c"), "weight": 148, "expected": [('a', 'g'), ('a', 'i'), ('j', 'g'), ('j', 'f'), ('g', 'c'), ('b', 'e'), ('c', 'd'), ('d', 'e'), ('f', 'k'), ('k', 'h')] },
    { "edge": ("i", "e"), "weight": 1011, "expected": [('a', 'g'), ('a', 'i'), ('i', 'e'), ('j', 'g'), ('j', 'f'), ('b', 'e'), ('c', 'd'), ('d', 'e'), ('f', 'k'), ('k', 'h')] },
    { "edge": ("f", "k"), "weight": 752, "expected": [('a', 'g'), ('a', 'i'), ('i', 'e'), ('j', 'g'), ('j', 'f'), ('b', 'e'), ('c', 'd'), ('d', 'e'), ('f', 'k'), ('k', 'h')] }
]
# Graph consisting of 11 nodes
data[9]["graph"] = Graph(is_directed=False)
data[9]["graph"].add_edge("a", "c", 40)
data[9]["graph"].add_edge("a", "d", 218)
data[9]["graph"].add_edge("a", "l", 1089)
data[9]["graph"].add_edge("b", "f", 1450)
data[9]["graph"].add_edge("c", "b", 1221)
data[9]["graph"].add_edge("d", "f", 138)
data[9]["graph"].add_edge("d", "i", 1387)
data[9]["graph"].add_edge("e", "g", 478)
data[9]["graph"].add_edge("e", "h", 103)
data[9]["graph"].add_edge("f", "e", 1009)
data[9]["graph"].add_edge("g", "j", 840)
data[9]["graph"].add_edge("g", "k", 489)
data[9]["graph"].add_edge("h", "k", 1384)
data[9]["graph"].add_edge("i", "h", 541)
data[9]["graph"].add_edge("i", "k", 200)
data[9]["graph"].add_edge("l", "b", 1242)
data[9]["graph"].add_edge("l", "c", 1147)
data[9]["mst"] = Graph(is_directed=False)
data[9]["mst"].add_edge("a", "c", weight=40)
data[9]["mst"].add_edge("a", "d", weight=218)
data[9]["mst"].add_edge("a", "l", weight=1089)
data[9]["mst"].add_edge("c", "b", weight=1221)
data[9]["mst"].add_edge("d", "f", weight=138)
data[9]["mst"].add_edge("e", "g", weight=478)
data[9]["mst"].add_edge("e", "h", weight=103)
data[9]["mst"].add_edge("f", "e", weight=1009)
data[9]["mst"].add_edge("g", "j", weight=840)
data[9]["mst"].add_edge("g", "k", weight=489)
data[9]["mst"].add_edge("i", "k", weight=200)
data[9]["solutions"] = [
    { "edge": ("d", "i"), "weight": 1388, "expected": [('a', 'c'), ('a', 'd'), ('a', 'l'), ('c', 'b'), ('d', 'f'), ('f', 'e'), ('i', 'k'), ('e', 'h'), ('e', 'g'), ('g', 'k'), ('g', 'j')] },
    { "edge": ("d", "i"), "weight": 488, "expected": [('a', 'c'), ('a', 'd'), ('a', 'l'), ('c', 'b'), ('d', 'f'), ('d', 'i'), ('i', 'k'), ('e', 'h'), ('e', 'g'), ('g', 'k'), ('g', 'j')] },
    { "edge": ("f", "e"), "weight": 1008, "expected": [('a', 'c'), ('a', 'd'), ('a', 'l'), ('c', 'b'), ('d', 'f'), ('f', 'e'), ('i', 'k'), ('e', 'h'), ('e', 'g'), ('g', 'k'), ('g', 'j')] },
    { "edge": ("c", "b"), "weight": 1222, "expected": [('a', 'c'), ('a', 'd'), ('a', 'l'), ('c', 'b'), ('d', 'f'), ('f', 'e'), ('i', 'k'), ('e', 'h'), ('e', 'g'), ('g', 'k'), ('g', 'j')] }
]
# Graph consisting of 12 nodes
data[10]["graph"] = Graph(is_directed=False)
data[10]["graph"].add_edge("a", "f", 1372)
data[10]["graph"].add_edge("a", "h", 39)
data[10]["graph"].add_edge("a", "j", 296)
data[10]["graph"].add_edge("b", "d", 1621)
data[10]["graph"].add_edge("b", "l", 1402)
data[10]["graph"].add_edge("c", "g", 1457)
data[10]["graph"].add_edge("c", "i", 1454)
data[10]["graph"].add_edge("d", "i", 818)
data[10]["graph"].add_edge("e", "k", 58)
data[10]["graph"].add_edge("f", "d", 1500)
data[10]["graph"].add_edge("f", "h", 1517)
data[10]["graph"].add_edge("g", "e", 65)
data[10]["graph"].add_edge("h", "l", 640)
data[10]["graph"].add_edge("i", "e", 1459)
data[10]["graph"].add_edge("j", "b", 87)
data[10]["graph"].add_edge("j", "g", 345)
data[10]["graph"].add_edge("k", "m", 1232)
data[10]["graph"].add_edge("l", "c", 1152)
data[10]["mst"] = Graph(is_directed=False)
data[10]["mst"].add_edge("a", "f", weight=1372)
data[10]["mst"].add_edge("a", "h", weight=39)
data[10]["mst"].add_edge("a", "j", weight=296)
data[10]["mst"].add_edge("c", "i", weight=1454)
data[10]["mst"].add_edge("d", "i", weight=818)
data[10]["mst"].add_edge("e", "k", weight=58)
data[10]["mst"].add_edge("g", "e", weight=65)
data[10]["mst"].add_edge("h", "l", weight=640)
data[10]["mst"].add_edge("j", "b", weight=87)
data[10]["mst"].add_edge("j", "g", weight=345)
data[10]["mst"].add_edge("k", "m", weight=1232)
data[10]["mst"].add_edge("l", "c", weight=1152)
data[10]["solutions"] = [
    { "edge": ("f", "h"), "weight": 1518, "expected": [('a', 'h'), ('a', 'j'), ('a', 'f'), ('j', 'b'), ('j', 'g'), ('h', 'l'), ('l', 'c'), ('d', 'i'), ('c', 'i'), ('g', 'e'), ('e', 'k'), ('k', 'm')] },
    { "edge": ("f", "h"), "weight": 295, "expected": [('a', 'h'), ('a', 'j'), ('j', 'b'), ('j', 'g'), ('f', 'h'), ('h', 'l'), ('l', 'c'), ('d', 'i'), ('c', 'i'), ('g', 'e'), ('e', 'k'), ('k', 'm')] },
    { "edge": ("e", "k"), "weight": 57, "expected": [('a', 'h'), ('a', 'j'), ('a', 'f'), ('j', 'b'), ('j', 'g'), ('h', 'l'), ('l', 'c'), ('d', 'i'), ('c', 'i'), ('g', 'e'), ('e', 'k'), ('k', 'm')] },
    { "edge": ("j", "b"), "weight": 88, "expected": [('a', 'h'), ('a', 'j'), ('a', 'f'), ('j', 'b'), ('j', 'g'), ('h', 'l'), ('l', 'c'), ('d', 'i'), ('c', 'i'), ('g', 'e'), ('e', 'k'), ('k', 'm')] }
]
# Graph consisting of 13 nodes
data[11]["graph"] = Graph(is_directed=False)
data[11]["graph"].add_edge("a", "b", 877)
data[11]["graph"].add_edge("a", "d", 43)
data[11]["graph"].add_edge("a", "e", 1301)
data[11]["graph"].add_edge("b", "c", 177)
data[11]["graph"].add_edge("b", "g", 1360)
data[11]["graph"].add_edge("c", "g", 540)
data[11]["graph"].add_edge("c", "j", 401)
data[11]["graph"].add_edge("d", "e", 427)
data[11]["graph"].add_edge("d", "g", 497)
data[11]["graph"].add_edge("e", "j", 258)
data[11]["graph"].add_edge("f", "i", 1481)
data[11]["graph"].add_edge("f", "k", 790)
data[11]["graph"].add_edge("f", "n", 765)
data[11]["graph"].add_edge("h", "m", 894)
data[11]["graph"].add_edge("i", "h", 924)
data[11]["graph"].add_edge("i", "m", 874)
data[11]["graph"].add_edge("j", "l", 316)
data[11]["graph"].add_edge("k", "h", 1298)
data[11]["graph"].add_edge("k", "n", 523)
data[11]["graph"].add_edge("m", "l", 1277)
data[11]["graph"].add_edge("n", "l", 1119)
data[11]["mst"] = Graph(is_directed=False)
data[11]["mst"].add_edge("a", "d", weight=43)
data[11]["mst"].add_edge("b", "c", weight=177)
data[11]["mst"].add_edge("c", "j", weight=401)
data[11]["mst"].add_edge("d", "e", weight=427)
data[11]["mst"].add_edge("d", "g", weight=497)
data[11]["mst"].add_edge("e", "j", weight=258)
data[11]["mst"].add_edge("f", "n", weight=765)
data[11]["mst"].add_edge("h", "m", weight=894)
data[11]["mst"].add_edge("i", "m", weight=874)
data[11]["mst"].add_edge("j", "l", weight=316)
data[11]["mst"].add_edge("k", "n", weight=523)
data[11]["mst"].add_edge("m", "l", weight=1277)
data[11]["mst"].add_edge("n", "l", weight=1119)
data[11]["solutions"] = [
    { "edge": ("k", "h"), "weight": 1299, "expected": [('a', 'd'), ('b', 'c'), ('d', 'e'), ('d', 'g'), ('e', 'j'), ('c', 'j'), ('j', 'l'), ('f', 'n'), ('i', 'm'), ('k', 'n'), ('n', 'l'), ('h', 'm'), ('m', 'l')] },
    { "edge": ("b", "g"), "weight": 1118, "expected": [('a', 'd'), ('b', 'c'), ('d', 'e'), ('d', 'g'), ('e', 'j'), ('c', 'j'), ('j', 'l'), ('f', 'n'), ('i', 'm'), ('k', 'n'), ('n', 'l'), ('h', 'm'), ('m', 'l')] },
    { "edge": ("h", "m"), "weight": 893, "expected": [('a', 'd'), ('b', 'c'), ('d', 'e'), ('d', 'g'), ('e', 'j'), ('c', 'j'), ('j', 'l'), ('f', 'n'), ('i', 'm'), ('k', 'n'), ('n', 'l'), ('h', 'm'), ('m', 'l')] },
    { "edge": ("e", "j"), "weight": 259, "expected": [('a', 'd'), ('b', 'c'), ('d', 'e'), ('d', 'g'), ('e', 'j'), ('c', 'j'), ('j', 'l'), ('f', 'n'), ('i', 'm'), ('k', 'n'), ('n', 'l'), ('h', 'm'), ('m', 'l')] }
]
# Graph consisting of 14 nodes
data[12]["graph"] = Graph(is_directed=False)
data[12]["graph"].add_edge("a", "f", 507)
data[12]["graph"].add_edge("a", "i", 978)
data[12]["graph"].add_edge("a", "o", 1350)
data[12]["graph"].add_edge("b", "k", 127)
data[12]["graph"].add_edge("b", "m", 437)
data[12]["graph"].add_edge("c", "l", 217)
data[12]["graph"].add_edge("d", "e", 519)
data[12]["graph"].add_edge("d", "g", 503)
data[12]["graph"].add_edge("e", "h", 19)
data[12]["graph"].add_edge("f", "b", 845)
data[12]["graph"].add_edge("f", "n", 458)
data[12]["graph"].add_edge("h", "j", 445)
data[12]["graph"].add_edge("i", "j", 853)
data[12]["graph"].add_edge("i", "l", 380)
data[12]["graph"].add_edge("k", "e", 1167)
data[12]["graph"].add_edge("k", "g", 23)
data[12]["graph"].add_edge("l", "g", 393)
data[12]["graph"].add_edge("m", "c", 766)
data[12]["graph"].add_edge("m", "d", 279)
data[12]["graph"].add_edge("n", "j", 1465)
data[12]["graph"].add_edge("o", "c", 717)
data[12]["graph"].add_edge("o", "h", 275)
data[12]["mst"] = Graph(is_directed=False)
data[12]["mst"].add_edge("a", "f", weight=507)
data[12]["mst"].add_edge("b", "k", weight=127)
data[12]["mst"].add_edge("b", "m", weight=437)
data[12]["mst"].add_edge("c", "l", weight=217)
data[12]["mst"].add_edge("d", "e", weight=519)
data[12]["mst"].add_edge("e", "h", weight=19)
data[12]["mst"].add_edge("f", "b", weight=845)
data[12]["mst"].add_edge("f", "n", weight=458)
data[12]["mst"].add_edge("h", "j", weight=445)
data[12]["mst"].add_edge("i", "l", weight=380)
data[12]["mst"].add_edge("k", "g", weight=23)
data[12]["mst"].add_edge("l", "g", weight=393)
data[12]["mst"].add_edge("m", "d", weight=279)
data[12]["mst"].add_edge("o", "h", weight=275)
data[12]["solutions"] = [
    { "edge": ("n", "j"), "weight": 1466, "expected": [('a', 'f'), ('i', 'l'), ('f', 'n'), ('f', 'b'), ('o', 'h'), ('b', 'k'), ('b', 'm'), ('k', 'g'), ('m', 'd'), ('c', 'l'), ('l', 'g'), ('d', 'e'), ('e', 'h'), ('h', 'j')] },
    { "edge": ("a", "o"), "weight": 379, "expected": [('a', 'o'), ('a', 'f'), ('i', 'l'), ('f', 'n'), ('o', 'h'), ('b', 'k'), ('b', 'm'), ('k', 'g'), ('m', 'd'), ('c', 'l'), ('l', 'g'), ('d', 'e'), ('e', 'h'), ('h', 'j')] },
    { "edge": ("b", "m"), "weight": 436, "expected": [('a', 'f'), ('i', 'l'), ('f', 'n'), ('f', 'b'), ('o', 'h'), ('b', 'k'), ('b', 'm'), ('k', 'g'), ('m', 'd'), ('c', 'l'), ('l', 'g'), ('d', 'e'), ('e', 'h'), ('h', 'j')] },
    { "edge": ("m", "d"), "weight": 280, "expected": [('a', 'f'), ('i', 'l'), ('f', 'n'), ('f', 'b'), ('o', 'h'), ('b', 'k'), ('b', 'm'), ('k', 'g'), ('m', 'd'), ('c', 'l'), ('l', 'g'), ('d', 'e'), ('e', 'h'), ('h', 'j')] }
]
# Graph consisting of 15 nodes
data[13]["graph"] = Graph(is_directed=False)
data[13]["graph"].add_edge("a", "e", 642)
data[13]["graph"].add_edge("a", "g", 618)
data[13]["graph"].add_edge("a", "n", 1382)
data[13]["graph"].add_edge("b", "k", 815)
data[13]["graph"].add_edge("b", "m", 1196)
data[13]["graph"].add_edge("c", "f", 1352)
data[13]["graph"].add_edge("c", "p", 712)
data[13]["graph"].add_edge("d", "o", 730)
data[13]["graph"].add_edge("e", "d", 693)
data[13]["graph"].add_edge("e", "j", 245)
data[13]["graph"].add_edge("f", "o", 425)
data[13]["graph"].add_edge("g", "b", 1374)
data[13]["graph"].add_edge("g", "o", 1387)
data[13]["graph"].add_edge("i", "l", 283)
data[13]["graph"].add_edge("j", "i", 1272)
data[13]["graph"].add_edge("j", "l", 478)
data[13]["graph"].add_edge("k", "f", 144)
data[13]["graph"].add_edge("k", "h", 1441)
data[13]["graph"].add_edge("m", "c", 768)
data[13]["graph"].add_edge("m", "h", 15)
data[13]["graph"].add_edge("n", "d", 803)
data[13]["graph"].add_edge("n", "l", 950)
data[13]["graph"].add_edge("p", "h", 1440)
data[13]["graph"].add_edge("p", "i", 453)
data[13]["mst"] = Graph(is_directed=False)
data[13]["mst"].add_edge("a", "e", weight=642)
data[13]["mst"].add_edge("a", "g", weight=618)
data[13]["mst"].add_edge("b", "k", weight=815)
data[13]["mst"].add_edge("c", "p", weight=712)
data[13]["mst"].add_edge("d", "o", weight=730)
data[13]["mst"].add_edge("e", "d", weight=693)
data[13]["mst"].add_edge("e", "j", weight=245)
data[13]["mst"].add_edge("f", "o", weight=425)
data[13]["mst"].add_edge("i", "l", weight=283)
data[13]["mst"].add_edge("j", "l", weight=478)
data[13]["mst"].add_edge("k", "f", weight=144)
data[13]["mst"].add_edge("m", "c", weight=768)
data[13]["mst"].add_edge("m", "h", weight=15)
data[13]["mst"].add_edge("n", "d", weight=803)
data[13]["mst"].add_edge("p", "i", weight=453)
data[13]["solutions"] = [
    { "edge": ("p", "h"), "weight": 1442, "expected": [('a', 'g'), ('a', 'e'), ('e', 'j'), ('e', 'd'), ('n', 'd'), ('b', 'k'), ('k', 'f'), ('m', 'h'), ('m', 'c'), ('c', 'p'), ('f', 'o'), ('p', 'i'), ('d', 'o'), ('j', 'l'), ('i', 'l')] },
    { "edge": ("k", "h"), "weight": 641, "expected": [('a', 'g'), ('a', 'e'), ('e', 'j'), ('e', 'd'), ('n', 'd'), ('b', 'k'), ('k', 'f'), ('k', 'h'), ('m', 'h'), ('c', 'p'), ('f', 'o'), ('p', 'i'), ('d', 'o'), ('j', 'l'), ('i', 'l')] },
    { "edge": ("e", "d"), "weight": 692, "expected": [('a', 'g'), ('a', 'e'), ('e', 'j'), ('e', 'd'), ('n', 'd'), ('b', 'k'), ('k', 'f'), ('m', 'h'), ('m', 'c'), ('c', 'p'), ('f', 'o'), ('p', 'i'), ('d', 'o'), ('j', 'l'), ('i', 'l')] },
    { "edge": ("a", "e"), "weight": 643, "expected": [('a', 'g'), ('a', 'e'), ('e', 'j'), ('e', 'd'), ('n', 'd'), ('b', 'k'), ('k', 'f'), ('m', 'h'), ('m', 'c'), ('c', 'p'), ('f', 'o'), ('p', 'i'), ('d', 'o'), ('j', 'l'), ('i', 'l')] }
]
# Graph consisting of 15 nodes
data[14]["graph"] = Graph(is_directed=False)
data[14]["graph"].add_edge("a", "f", 211)
data[14]["graph"].add_edge("a", "i", 168)
data[14]["graph"].add_edge("a", "l", 176)
data[14]["graph"].add_edge("b", "n", 249)
data[14]["graph"].add_edge("b", "p", 209)
data[14]["graph"].add_edge("c", "e", 26)
data[14]["graph"].add_edge("c", "j", 105)
data[14]["graph"].add_edge("d", "g", 245)
data[14]["graph"].add_edge("d", "k", 194)
data[14]["graph"].add_edge("f", "b", 256)
data[14]["graph"].add_edge("f", "h", 58)
data[14]["graph"].add_edge("g", "m", 82)
data[14]["graph"].add_edge("h", "o", 81)
data[14]["graph"].add_edge("i", "g", 148)
data[14]["graph"].add_edge("i", "p", 55)
data[14]["graph"].add_edge("j", "e", 177)
data[14]["graph"].add_edge("j", "m", 167)
data[14]["graph"].add_edge("k", "m", 170)
data[14]["graph"].add_edge("k", "o", 174)
data[14]["graph"].add_edge("l", "c", 46)
data[14]["graph"].add_edge("l", "d", 42)
data[14]["graph"].add_edge("n", "e", 108)
data[14]["graph"].add_edge("n", "h", 30)
data[14]["graph"].add_edge("p", "o", 6)
data[14]["mst"] = Graph(is_directed=False)
data[14]["mst"].add_edge("a", "i", weight=168)
data[14]["mst"].add_edge("b", "p", weight=209)
data[14]["mst"].add_edge("c", "e", weight=26)
data[14]["mst"].add_edge("c", "j", weight=105)
data[14]["mst"].add_edge("f", "h", weight=58)
data[14]["mst"].add_edge("g", "m", weight=82)
data[14]["mst"].add_edge("h", "o", weight=81)
data[14]["mst"].add_edge("i", "g", weight=148)
data[14]["mst"].add_edge("i", "p", weight=55)
data[14]["mst"].add_edge("k", "m", weight=170)
data[14]["mst"].add_edge("l", "c", weight=46)
data[14]["mst"].add_edge("l", "d", weight=42)
data[14]["mst"].add_edge("n", "e", weight=108)
data[14]["mst"].add_edge("n", "h", weight=30)
data[14]["mst"].add_edge("p", "o", weight=6)
data[14]["solutions"] = [
    { "edge": ("d", "g"), "weight": 246, "expected": [('a', 'i'), ('i', 'p'), ('i', 'g'), ('l', 'd'), ('l', 'c'), ('f', 'h'), ('b', 'p'), ('n', 'h'), ('n', 'e'), ('p', 'o'), ('c', 'e'), ('c', 'j'), ('k', 'm'), ('g', 'm'), ('h', 'o')] },
    { "edge": ("b", "n"), "weight": 107, "expected": [('a', 'i'), ('i', 'p'), ('i', 'g'), ('l', 'd'), ('l', 'c'), ('f', 'h'), ('b', 'n'), ('n', 'h'), ('n', 'e'), ('p', 'o'), ('c', 'e'), ('c', 'j'), ('k', 'm'), ('g', 'm'), ('h', 'o')] },
    { "edge": ("c", "e"), "weight": 25, "expected": [('a', 'i'), ('i', 'p'), ('i', 'g'), ('l', 'd'), ('l', 'c'), ('f', 'h'), ('b', 'p'), ('n', 'h'), ('n', 'e'), ('p', 'o'), ('c', 'e'), ('c', 'j'), ('k', 'm'), ('g', 'm'), ('h', 'o')] },
    { "edge": ("c", "j"), "weight": 106, "expected": [('a', 'i'), ('i', 'p'), ('i', 'g'), ('l', 'd'), ('l', 'c'), ('f', 'h'), ('b', 'p'), ('n', 'h'), ('n', 'e'), ('p', 'o'), ('c', 'e'), ('c', 'j'), ('k', 'm'), ('g', 'm'), ('h', 'o')] }
]
# Graph consisting of 16 nodes
data[15]["graph"] = Graph(is_directed=False)
data[15]["graph"].add_edge("a", "e", 816)
data[15]["graph"].add_edge("a", "i", 1408)
data[15]["graph"].add_edge("a", "k", 726)
data[15]["graph"].add_edge("b", "j", 262)
data[15]["graph"].add_edge("b", "q", 1665)
data[15]["graph"].add_edge("c", "f", 765)
data[15]["graph"].add_edge("c", "p", 1581)
data[15]["graph"].add_edge("e", "d", 1478)
data[15]["graph"].add_edge("e", "j", 58)
data[15]["graph"].add_edge("f", "o", 1383)
data[15]["graph"].add_edge("g", "n", 213)
data[15]["graph"].add_edge("h", "m", 861)
data[15]["graph"].add_edge("i", "c", 183)
data[15]["graph"].add_edge("i", "g", 794)
data[15]["graph"].add_edge("j", "h", 1228)
data[15]["graph"].add_edge("k", "b", 1651)
data[15]["graph"].add_edge("k", "f", 163)
data[15]["graph"].add_edge("m", "l", 1081)
data[15]["graph"].add_edge("n", "h", 548)
data[15]["graph"].add_edge("n", "l", 1497)
data[15]["graph"].add_edge("o", "g", 614)
data[15]["graph"].add_edge("p", "d", 323)
data[15]["graph"].add_edge("p", "l", 1236)
data[15]["graph"].add_edge("q", "d", 1583)
data[15]["graph"].add_edge("q", "m", 617)
data[15]["mst"] = Graph(is_directed=False)
data[15]["mst"].add_edge("a", "e", weight=816)
data[15]["mst"].add_edge("a", "k", weight=726)
data[15]["mst"].add_edge("b", "j", weight=262)
data[15]["mst"].add_edge("c", "f", weight=765)
data[15]["mst"].add_edge("e", "j", weight=58)
data[15]["mst"].add_edge("g", "n", weight=213)
data[15]["mst"].add_edge("h", "m", weight=861)
data[15]["mst"].add_edge("i", "c", weight=183)
data[15]["mst"].add_edge("i", "g", weight=794)
data[15]["mst"].add_edge("k", "f", weight=163)
data[15]["mst"].add_edge("m", "l", weight=1081)
data[15]["mst"].add_edge("n", "h", weight=548)
data[15]["mst"].add_edge("o", "g", weight=614)
data[15]["mst"].add_edge("p", "d", weight=323)
data[15]["mst"].add_edge("p", "l", weight=1236)
data[15]["mst"].add_edge("q", "m", weight=617)
data[15]["solutions"] = [
    { "edge": ("n", "l"), "weight": 1498, "expected": [('a', 'k'), ('a', 'e'), ('i', 'c'), ('i', 'g'), ('k', 'f'), ('e', 'j'), ('b', 'j'), ('q', 'm'), ('c', 'f'), ('p', 'd'), ('p', 'l'), ('o', 'g'), ('g', 'n'), ('n', 'h'), ('h', 'm'), ('m', 'l')] },
    { "edge": ("c", "p"), "weight": 57, "expected": [('a', 'k'), ('a', 'e'), ('i', 'c'), ('i', 'g'), ('k', 'f'), ('e', 'j'), ('b', 'j'), ('q', 'm'), ('c', 'p'), ('c', 'f'), ('p', 'd'), ('o', 'g'), ('g', 'n'), ('n', 'h'), ('h', 'm'), ('m', 'l')] },
    { "edge": ("g", "n"), "weight": 212, "expected": [('a', 'k'), ('a', 'e'), ('i', 'c'), ('i', 'g'), ('k', 'f'), ('e', 'j'), ('b', 'j'), ('q', 'm'), ('c', 'f'), ('p', 'd'), ('p', 'l'), ('o', 'g'), ('g', 'n'), ('n', 'h'), ('h', 'm'), ('m', 'l')] },
    { "edge": ("i", "g"), "weight": 795, "expected": [('a', 'k'), ('a', 'e'), ('i', 'c'), ('i', 'g'), ('k', 'f'), ('e', 'j'), ('b', 'j'), ('q', 'm'), ('c', 'f'), ('p', 'd'), ('p', 'l'), ('o', 'g'), ('g', 'n'), ('n', 'h'), ('h', 'm'), ('m', 'l')] }
]
# Graph consisting of 17 nodes
data[16]["graph"] = Graph(is_directed=False)
data[16]["graph"].add_edge("a", "b", 1437)
data[16]["graph"].add_edge("a", "g", 1269)
data[16]["graph"].add_edge("a", "o", 795)
data[16]["graph"].add_edge("b", "p", 488)
data[16]["graph"].add_edge("b", "r", 47)
data[16]["graph"].add_edge("c", "e", 776)
data[16]["graph"].add_edge("c", "f", 985)
data[16]["graph"].add_edge("d", "h", 1091)
data[16]["graph"].add_edge("d", "m", 253)
data[16]["graph"].add_edge("e", "d", 1083)
data[16]["graph"].add_edge("f", "n", 618)
data[16]["graph"].add_edge("g", "j", 457)
data[16]["graph"].add_edge("g", "n", 372)
data[16]["graph"].add_edge("h", "n", 1423)
data[16]["graph"].add_edge("i", "k", 1503)
data[16]["graph"].add_edge("j", "i", 543)
data[16]["graph"].add_edge("j", "l", 1311)
data[16]["graph"].add_edge("k", "l", 827)
data[16]["graph"].add_edge("l", "q", 1142)
data[16]["graph"].add_edge("m", "h", 901)
data[16]["graph"].add_edge("m", "i", 414)
data[16]["graph"].add_edge("o", "q", 23)
data[16]["graph"].add_edge("p", "f", 784)
data[16]["graph"].add_edge("p", "k", 1561)
data[16]["graph"].add_edge("r", "c", 875)
data[16]["graph"].add_edge("r", "e", 680)
data[16]["mst"] = Graph(is_directed=False)
data[16]["mst"].add_edge("a", "g", weight=1269)
data[16]["mst"].add_edge("a", "o", weight=795)
data[16]["mst"].add_edge("b", "p", weight=488)
data[16]["mst"].add_edge("b", "r", weight=47)
data[16]["mst"].add_edge("c", "e", weight=776)
data[16]["mst"].add_edge("d", "m", weight=253)
data[16]["mst"].add_edge("f", "n", weight=618)
data[16]["mst"].add_edge("g", "j", weight=457)
data[16]["mst"].add_edge("g", "n", weight=372)
data[16]["mst"].add_edge("j", "i", weight=543)
data[16]["mst"].add_edge("k", "l", weight=827)
data[16]["mst"].add_edge("l", "q", weight=1142)
data[16]["mst"].add_edge("m", "h", weight=901)
data[16]["mst"].add_edge("m", "i", weight=414)
data[16]["mst"].add_edge("o", "q", weight=23)
data[16]["mst"].add_edge("p", "f", weight=784)
data[16]["mst"].add_edge("r", "e", weight=680)
data[16]["solutions"] = [
    { "edge": ("a", "b"), "weight": 1438, "expected": [('a', 'o'), ('a', 'g'), ('b', 'r'), ('b', 'p'), ('g', 'n'), ('g', 'j'), ('o', 'q'), ('r', 'e'), ('p', 'f'), ('c', 'e'), ('f', 'n'), ('d', 'm'), ('m', 'i'), ('m', 'h'), ('j', 'i'), ('k', 'l'), ('l', 'q')] },
    { "edge": ("a", "b"), "weight": 1141, "expected": [('a', 'o'), ('a', 'b'), ('b', 'r'), ('b', 'p'), ('g', 'n'), ('g', 'j'), ('o', 'q'), ('r', 'e'), ('p', 'f'), ('c', 'e'), ('f', 'n'), ('d', 'm'), ('m', 'i'), ('m', 'h'), ('j', 'i'), ('k', 'l'), ('l', 'q')] },
    { "edge": ("g", "n"), "weight": 371, "expected": [('a', 'o'), ('a', 'g'), ('b', 'r'), ('b', 'p'), ('g', 'n'), ('g', 'j'), ('o', 'q'), ('r', 'e'), ('p', 'f'), ('c', 'e'), ('f', 'n'), ('d', 'm'), ('m', 'i'), ('m', 'h'), ('j', 'i'), ('k', 'l'), ('l', 'q')] },
    { "edge": ("d", "m"), "weight": 254, "expected": [('a', 'o'), ('a', 'g'), ('b', 'r'), ('b', 'p'), ('g', 'n'), ('g', 'j'), ('o', 'q'), ('r', 'e'), ('p', 'f'), ('c', 'e'), ('f', 'n'), ('d', 'm'), ('m', 'i'), ('m', 'h'), ('j', 'i'), ('k', 'l'), ('l', 'q')] }
]
# Graph consisting of 18 nodes
data[17]["graph"] = Graph(is_directed=False)
data[17]["graph"].add_edge("a", "e", 21)
data[17]["graph"].add_edge("a", "h", 368)
data[17]["graph"].add_edge("a", "i", 1063)
data[17]["graph"].add_edge("b", "m", 937)
data[17]["graph"].add_edge("b", "p", 348)
data[17]["graph"].add_edge("b", "q", 454)
data[17]["graph"].add_edge("c", "o", 1322)
data[17]["graph"].add_edge("d", "g", 996)
data[17]["graph"].add_edge("e", "j", 1043)
data[17]["graph"].add_edge("e", "o", 1013)
data[17]["graph"].add_edge("f", "l", 1235)
data[17]["graph"].add_edge("f", "r", 1129)
data[17]["graph"].add_edge("f", "s", 615)
data[17]["graph"].add_edge("g", "n", 713)
data[17]["graph"].add_edge("g", "s", 303)
data[17]["graph"].add_edge("h", "l", 1350)
data[17]["graph"].add_edge("h", "n", 725)
data[17]["graph"].add_edge("i", "n", 757)
data[17]["graph"].add_edge("i", "p", 1577)
data[17]["graph"].add_edge("j", "l", 434)
data[17]["graph"].add_edge("m", "c", 1489)
data[17]["graph"].add_edge("m", "j", 693)
data[17]["graph"].add_edge("o", "d", 1641)
data[17]["graph"].add_edge("p", "d", 887)
data[17]["graph"].add_edge("q", "c", 798)
data[17]["graph"].add_edge("q", "k", 221)
data[17]["graph"].add_edge("r", "k", 1560)
data[17]["graph"].add_edge("s", "k", 1485)
data[17]["mst"] = Graph(is_directed=False)
data[17]["mst"].add_edge("a", "e", weight=21)
data[17]["mst"].add_edge("a", "h", weight=368)
data[17]["mst"].add_edge("b", "m", weight=937)
data[17]["mst"].add_edge("b", "p", weight=348)
data[17]["mst"].add_edge("b", "q", weight=454)
data[17]["mst"].add_edge("d", "g", weight=996)
data[17]["mst"].add_edge("e", "o", weight=1013)
data[17]["mst"].add_edge("f", "r", weight=1129)
data[17]["mst"].add_edge("f", "s", weight=615)
data[17]["mst"].add_edge("g", "n", weight=713)
data[17]["mst"].add_edge("g", "s", weight=303)
data[17]["mst"].add_edge("h", "n", weight=725)
data[17]["mst"].add_edge("i", "n", weight=757)
data[17]["mst"].add_edge("j", "l", weight=434)
data[17]["mst"].add_edge("m", "j", weight=693)
data[17]["mst"].add_edge("p", "d", weight=887)
data[17]["mst"].add_edge("q", "c", weight=798)
data[17]["mst"].add_edge("q", "k", weight=221)
data[17]["solutions"] = [
    { "edge": ("f", "l"), "weight": 1236, "expected": [('a', 'e'), ('a', 'h'), ('i', 'n'), ('e', 'o'), ('h', 'n'), ('b', 'p'), ('b', 'q'), ('b', 'm'), ('q', 'k'), ('q', 'c'), ('m', 'j'), ('p', 'd'), ('d', 'g'), ('g', 's'), ('g', 'n'), ('j', 'l'), ('f', 's'), ('f', 'r')] },
    { "edge": ("r", "k"), "weight": 220, "expected": [('a', 'e'), ('a', 'h'), ('i', 'n'), ('e', 'o'), ('h', 'n'), ('b', 'p'), ('b', 'q'), ('b', 'm'), ('q', 'k'), ('q', 'c'), ('m', 'j'), ('p', 'd'), ('d', 'g'), ('g', 's'), ('g', 'n'), ('j', 'l'), ('f', 's'), ('r', 'k')] },
    { "edge": ("e", "o"), "weight": 1012, "expected": [('a', 'e'), ('a', 'h'), ('i', 'n'), ('e', 'o'), ('h', 'n'), ('b', 'p'), ('b', 'q'), ('b', 'm'), ('q', 'k'), ('q', 'c'), ('m', 'j'), ('p', 'd'), ('d', 'g'), ('g', 's'), ('g', 'n'), ('j', 'l'), ('f', 's'), ('f', 'r')] },
    { "edge": ("h", "n"), "weight": 726, "expected": [('a', 'e'), ('a', 'h'), ('i', 'n'), ('e', 'o'), ('h', 'n'), ('b', 'p'), ('b', 'q'), ('b', 'm'), ('q', 'k'), ('q', 'c'), ('m', 'j'), ('p', 'd'), ('d', 'g'), ('g', 's'), ('g', 'n'), ('j', 'l'), ('f', 's'), ('f', 'r')] }
]
# Graph consisting of 18 nodes
data[18]["graph"] = Graph(is_directed=False)
data[18]["graph"].add_edge("a", "e", 320)
data[18]["graph"].add_edge("a", "k", 234)
data[18]["graph"].add_edge("a", "p", 11)
data[18]["graph"].add_edge("b", "d", 104)
data[18]["graph"].add_edge("b", "i", 352)
data[18]["graph"].add_edge("b", "n", 331)
data[18]["graph"].add_edge("c", "g", 236)
data[18]["graph"].add_edge("c", "r", 334)
data[18]["graph"].add_edge("d", "s", 204)
data[18]["graph"].add_edge("e", "c", 257)
data[18]["graph"].add_edge("f", "q", 243)
data[18]["graph"].add_edge("h", "m", 55)
data[18]["graph"].add_edge("i", "f", 95)
data[18]["graph"].add_edge("i", "s", 228)
data[18]["graph"].add_edge("j", "l", 93)
data[18]["graph"].add_edge("j", "o", 150)
data[18]["graph"].add_edge("k", "e", 126)
data[18]["graph"].add_edge("k", "m", 285)
data[18]["graph"].add_edge("l", "o", 120)
data[18]["graph"].add_edge("m", "o", 332)
data[18]["graph"].add_edge("n", "g", 241)
data[18]["graph"].add_edge("p", "d", 157)
data[18]["graph"].add_edge("p", "l", 49)
data[18]["graph"].add_edge("q", "h", 339)
data[18]["graph"].add_edge("q", "j", 117)
data[18]["graph"].add_edge("r", "g", 250)
data[18]["graph"].add_edge("r", "h", 290)
data[18]["graph"].add_edge("s", "f", 295)
data[18]["mst"] = Graph(is_directed=False)
data[18]["mst"].add_edge("a", "k", weight=234)
data[18]["mst"].add_edge("a", "p", weight=11)
data[18]["mst"].add_edge("b", "d", weight=104)
data[18]["mst"].add_edge("c", "g", weight=236)
data[18]["mst"].add_edge("d", "s", weight=204)
data[18]["mst"].add_edge("e", "c", weight=257)
data[18]["mst"].add_edge("h", "m", weight=55)
data[18]["mst"].add_edge("i", "f", weight=95)
data[18]["mst"].add_edge("i", "s", weight=228)
data[18]["mst"].add_edge("j", "l", weight=93)
data[18]["mst"].add_edge("k", "e", weight=126)
data[18]["mst"].add_edge("k", "m", weight=285)
data[18]["mst"].add_edge("l", "o", weight=120)
data[18]["mst"].add_edge("n", "g", weight=241)
data[18]["mst"].add_edge("p", "d", weight=157)
data[18]["mst"].add_edge("p", "l", weight=49)
data[18]["mst"].add_edge("q", "j", weight=117)
data[18]["mst"].add_edge("r", "g", weight=250)
data[18]["solutions"] = [
    { "edge": ("r", "h"), "weight": 291, "expected": [('a', 'p'), ('a', 'k'), ('k', 'e'), ('k', 'm'), ('e', 'c'), ('p', 'l'), ('p', 'd'), ('b', 'd'), ('i', 'f'), ('i', 's'), ('d', 's'), ('n', 'g'), ('c', 'g'), ('r', 'g'), ('q', 'j'), ('h', 'm'), ('j', 'l'), ('l', 'o')] },
    { "edge": ("b", "n"), "weight": 227, "expected": [('a', 'p'), ('a', 'k'), ('k', 'e'), ('k', 'm'), ('p', 'l'), ('p', 'd'), ('b', 'd'), ('b', 'n'), ('i', 'f'), ('i', 's'), ('d', 's'), ('n', 'g'), ('c', 'g'), ('r', 'g'), ('q', 'j'), ('h', 'm'), ('j', 'l'), ('l', 'o')] },
    { "edge": ("q", "j"), "weight": 116, "expected": [('a', 'p'), ('a', 'k'), ('k', 'e'), ('k', 'm'), ('e', 'c'), ('p', 'l'), ('p', 'd'), ('b', 'd'), ('i', 'f'), ('i', 's'), ('d', 's'), ('n', 'g'), ('c', 'g'), ('r', 'g'), ('q', 'j'), ('h', 'm'), ('j', 'l'), ('l', 'o')] },
    { "edge": ("d", "s"), "weight": 205, "expected": [('a', 'p'), ('a', 'k'), ('k', 'e'), ('k', 'm'), ('e', 'c'), ('p', 'l'), ('p', 'd'), ('b', 'd'), ('i', 'f'), ('i', 's'), ('d', 's'), ('n', 'g'), ('c', 'g'), ('r', 'g'), ('q', 'j'), ('h', 'm'), ('j', 'l'), ('l', 'o')] }
]
# Graph consisting of 19 nodes
data[19]["graph"] = Graph(is_directed=False)
data[19]["graph"].add_edge("a", "h", 1273)
data[19]["graph"].add_edge("a", "m", 35)
data[19]["graph"].add_edge("a", "s", 1067)
data[19]["graph"].add_edge("b", "k", 1562)
data[19]["graph"].add_edge("b", "t", 363)
data[19]["graph"].add_edge("c", "d", 1174)
data[19]["graph"].add_edge("c", "n", 306)
data[19]["graph"].add_edge("c", "o", 442)
data[19]["graph"].add_edge("d", "q", 1006)
data[19]["graph"].add_edge("d", "r", 1022)
data[19]["graph"].add_edge("e", "j", 222)
data[19]["graph"].add_edge("e", "p", 258)
data[19]["graph"].add_edge("f", "i", 991)
data[19]["graph"].add_edge("j", "i", 1364)
data[19]["graph"].add_edge("k", "j", 815)
data[19]["graph"].add_edge("k", "p", 913)
data[19]["graph"].add_edge("m", "g", 1363)
data[19]["graph"].add_edge("m", "h", 148)
data[19]["graph"].add_edge("n", "e", 1012)
data[19]["graph"].add_edge("n", "f", 633)
data[19]["graph"].add_edge("o", "l", 335)
data[19]["graph"].add_edge("o", "q", 329)
data[19]["graph"].add_edge("p", "g", 217)
data[19]["graph"].add_edge("q", "f", 422)
data[19]["graph"].add_edge("r", "i", 447)
data[19]["graph"].add_edge("r", "l", 1074)
data[19]["graph"].add_edge("s", "b", 679)
data[19]["graph"].add_edge("s", "h", 1188)
data[19]["graph"].add_edge("t", "g", 358)
data[19]["graph"].add_edge("t", "l", 812)
data[19]["mst"] = Graph(is_directed=False)
data[19]["mst"].add_edge("a", "m", weight=35)
data[19]["mst"].add_edge("a", "s", weight=1067)
data[19]["mst"].add_edge("b", "t", weight=363)
data[19]["mst"].add_edge("c", "n", weight=306)
data[19]["mst"].add_edge("c", "o", weight=442)
data[19]["mst"].add_edge("d", "q", weight=1006)
data[19]["mst"].add_edge("e", "j", weight=222)
data[19]["mst"].add_edge("e", "p", weight=258)
data[19]["mst"].add_edge("f", "i", weight=991)
data[19]["mst"].add_edge("k", "j", weight=815)
data[19]["mst"].add_edge("m", "h", weight=148)
data[19]["mst"].add_edge("o", "l", weight=335)
data[19]["mst"].add_edge("o", "q", weight=329)
data[19]["mst"].add_edge("p", "g", weight=217)
data[19]["mst"].add_edge("q", "f", weight=422)
data[19]["mst"].add_edge("r", "i", weight=447)
data[19]["mst"].add_edge("s", "b", weight=679)
data[19]["mst"].add_edge("t", "g", weight=358)
data[19]["mst"].add_edge("t", "l", weight=812)
data[19]["solutions"] = [
    { "edge": ("d", "r"), "weight": 1023, "expected": [('a', 'm'), ('a', 's'), ('s', 'b'), ('m', 'h'), ('b', 't'), ('t', 'g'), ('t', 'l'), ('k', 'j'), ('c', 'n'), ('c', 'o'), ('d', 'q'), ('o', 'q'), ('o', 'l'), ('q', 'f'), ('r', 'i'), ('e', 'j'), ('e', 'p'), ('p', 'g'), ('f', 'i')] },
    { "edge": ("a", "h"), "weight": 147, "expected": [('a', 'm'), ('a', 'h'), ('a', 's'), ('s', 'b'), ('b', 't'), ('t', 'g'), ('t', 'l'), ('k', 'j'), ('c', 'n'), ('c', 'o'), ('d', 'q'), ('o', 'q'), ('o', 'l'), ('q', 'f'), ('r', 'i'), ('e', 'j'), ('e', 'p'), ('p', 'g'), ('f', 'i')] },
    { "edge": ("b", "t"), "weight": 362, "expected": [('a', 'm'), ('a', 's'), ('s', 'b'), ('m', 'h'), ('b', 't'), ('t', 'g'), ('t', 'l'), ('k', 'j'), ('c', 'n'), ('c', 'o'), ('d', 'q'), ('o', 'q'), ('o', 'l'), ('q', 'f'), ('r', 'i'), ('e', 'j'), ('e', 'p'), ('p', 'g'), ('f', 'i')] },
    { "edge": ("f", "i"), "weight": 992, "expected": [('a', 'm'), ('a', 's'), ('s', 'b'), ('m', 'h'), ('b', 't'), ('t', 'g'), ('t', 'l'), ('k', 'j'), ('c', 'n'), ('c', 'o'), ('d', 'q'), ('o', 'q'), ('o', 'l'), ('q', 'f'), ('r', 'i'), ('e', 'j'), ('e', 'p'), ('p', 'g'), ('f', 'i')] }
]
# Graph consisting of 20 nodes
data[20]["graph"] = Graph(is_directed=False)
data[20]["graph"].add_edge("a", "b", 1473)
data[20]["graph"].add_edge("a", "m", 847)
data[20]["graph"].add_edge("a", "q", 1220)
data[20]["graph"].add_edge("b", "j", 955)
data[20]["graph"].add_edge("b", "o", 1429)
data[20]["graph"].add_edge("d", "f", 91)
data[20]["graph"].add_edge("d", "h", 511)
data[20]["graph"].add_edge("d", "u", 1)
data[20]["graph"].add_edge("e", "g", 1368)
data[20]["graph"].add_edge("e", "s", 588)
data[20]["graph"].add_edge("e", "t", 217)
data[20]["graph"].add_edge("f", "g", 1583)
data[20]["graph"].add_edge("f", "t", 637)
data[20]["graph"].add_edge("g", "k", 384)
data[20]["graph"].add_edge("h", "k", 1229)
data[20]["graph"].add_edge("h", "t", 808)
data[20]["graph"].add_edge("j", "c", 169)
data[20]["graph"].add_edge("j", "l", 1056)
data[20]["graph"].add_edge("k", "i", 153)
data[20]["graph"].add_edge("l", "p", 151)
data[20]["graph"].add_edge("l", "r", 1672)
data[20]["graph"].add_edge("m", "c", 899)
data[20]["graph"].add_edge("m", "n", 756)
data[20]["graph"].add_edge("o", "n", 1138)
data[20]["graph"].add_edge("o", "u", 476)
data[20]["graph"].add_edge("q", "c", 163)
data[20]["graph"].add_edge("q", "i", 370)
data[20]["graph"].add_edge("r", "n", 1333)
data[20]["graph"].add_edge("s", "i", 1352)
data[20]["graph"].add_edge("s", "p", 1024)
data[20]["graph"].add_edge("u", "p", 526)
data[20]["mst"] = Graph(is_directed=False)
data[20]["mst"].add_edge("a", "m", weight=847)
data[20]["mst"].add_edge("b", "j", weight=955)
data[20]["mst"].add_edge("d", "f", weight=91)
data[20]["mst"].add_edge("d", "h", weight=511)
data[20]["mst"].add_edge("d", "u", weight=1)
data[20]["mst"].add_edge("e", "s", weight=588)
data[20]["mst"].add_edge("e", "t", weight=217)
data[20]["mst"].add_edge("f", "t", weight=637)
data[20]["mst"].add_edge("g", "k", weight=384)
data[20]["mst"].add_edge("j", "c", weight=169)
data[20]["mst"].add_edge("j", "l", weight=1056)
data[20]["mst"].add_edge("k", "i", weight=153)
data[20]["mst"].add_edge("l", "p", weight=151)
data[20]["mst"].add_edge("m", "c", weight=899)
data[20]["mst"].add_edge("m", "n", weight=756)
data[20]["mst"].add_edge("o", "u", weight=476)
data[20]["mst"].add_edge("q", "c", weight=163)
data[20]["mst"].add_edge("q", "i", weight=370)
data[20]["mst"].add_edge("r", "n", weight=1333)
data[20]["mst"].add_edge("u", "p", weight=526)
data[20]["solutions"] = [
    { "edge": ("s", "p"), "weight": 1025, "expected": [('a', 'm'), ('q', 'c'), ('q', 'i'), ('b', 'j'), ('m', 'n'), ('m', 'c'), ('j', 'c'), ('j', 'l'), ('o', 'u'), ('d', 'u'), ('d', 'f'), ('d', 'h'), ('u', 'p'), ('f', 't'), ('e', 't'), ('e', 's'), ('g', 'k'), ('k', 'i'), ('l', 'p'), ('r', 'n')] },
    { "edge": ("f", "g"), "weight": 587, "expected": [('a', 'm'), ('q', 'c'), ('q', 'i'), ('b', 'j'), ('m', 'n'), ('m', 'c'), ('j', 'c'), ('o', 'u'), ('d', 'u'), ('d', 'f'), ('d', 'h'), ('u', 'p'), ('f', 'g'), ('f', 't'), ('e', 't'), ('e', 's'), ('g', 'k'), ('k', 'i'), ('l', 'p'), ('r', 'n')] },
    { "edge": ("q", "c"), "weight": 162, "expected": [('a', 'm'), ('q', 'c'), ('q', 'i'), ('b', 'j'), ('m', 'n'), ('m', 'c'), ('j', 'c'), ('j', 'l'), ('o', 'u'), ('d', 'u'), ('d', 'f'), ('d', 'h'), ('u', 'p'), ('f', 't'), ('e', 't'), ('e', 's'), ('g', 'k'), ('k', 'i'), ('l', 'p'), ('r', 'n')] },
    { "edge": ("r", "n"), "weight": 1334, "expected": [('a', 'm'), ('q', 'c'), ('q', 'i'), ('b', 'j'), ('m', 'n'), ('m', 'c'), ('j', 'c'), ('j', 'l'), ('o', 'u'), ('d', 'u'), ('d', 'f'), ('d', 'h'), ('u', 'p'), ('f', 't'), ('e', 't'), ('e', 's'), ('g', 'k'), ('k', 'i'), ('l', 'p'), ('r', 'n')] }
]
# Graph consisting of 20 nodes
data[21]["graph"] = Graph(is_directed=False)
data[21]["graph"].add_edge("a", "h", 67)
data[21]["graph"].add_edge("a", "n", 31)
data[21]["graph"].add_edge("a", "p", 21)
data[21]["graph"].add_edge("b", "c", 70)
data[21]["graph"].add_edge("b", "k", 337)
data[21]["graph"].add_edge("b", "q", 264)
data[21]["graph"].add_edge("c", "s", 92)
data[21]["graph"].add_edge("d", "m", 112)
data[21]["graph"].add_edge("d", "t", 160)
data[21]["graph"].add_edge("e", "f", 44)
data[21]["graph"].add_edge("e", "j", 189)
data[21]["graph"].add_edge("f", "i", 381)
data[21]["graph"].add_edge("h", "k", 150)
data[21]["graph"].add_edge("h", "s", 226)
data[21]["graph"].add_edge("j", "i", 308)
data[21]["graph"].add_edge("j", "u", 303)
data[21]["graph"].add_edge("k", "g", 107)
data[21]["graph"].add_edge("l", "o", 138)
data[21]["graph"].add_edge("m", "f", 166)
data[21]["graph"].add_edge("m", "g", 333)
data[21]["graph"].add_edge("n", "c", 388)
data[21]["graph"].add_edge("n", "i", 230)
data[21]["graph"].add_edge("o", "r", 239)
data[21]["graph"].add_edge("p", "d", 232)
data[21]["graph"].add_edge("p", "e", 260)
data[21]["graph"].add_edge("q", "l", 284)
data[21]["graph"].add_edge("q", "o", 94)
data[21]["graph"].add_edge("s", "r", 280)
data[21]["graph"].add_edge("t", "g", 59)
data[21]["graph"].add_edge("t", "l", 104)
data[21]["graph"].add_edge("u", "r", 419)
data[21]["mst"] = Graph(is_directed=False)
data[21]["mst"].add_edge("a", "h", weight=67)
data[21]["mst"].add_edge("a", "n", weight=31)
data[21]["mst"].add_edge("a", "p", weight=21)
data[21]["mst"].add_edge("b", "c", weight=70)
data[21]["mst"].add_edge("c", "s", weight=92)
data[21]["mst"].add_edge("d", "m", weight=112)
data[21]["mst"].add_edge("d", "t", weight=160)
data[21]["mst"].add_edge("e", "f", weight=44)
data[21]["mst"].add_edge("e", "j", weight=189)
data[21]["mst"].add_edge("h", "k", weight=150)
data[21]["mst"].add_edge("h", "s", weight=226)
data[21]["mst"].add_edge("j", "u", weight=303)
data[21]["mst"].add_edge("k", "g", weight=107)
data[21]["mst"].add_edge("l", "o", weight=138)
data[21]["mst"].add_edge("m", "f", weight=166)
data[21]["mst"].add_edge("n", "i", weight=230)
data[21]["mst"].add_edge("o", "r", weight=239)
data[21]["mst"].add_edge("q", "o", weight=94)
data[21]["mst"].add_edge("t", "g", weight=59)
data[21]["mst"].add_edge("t", "l", weight=104)
data[21]["solutions"] = [
    { "edge": ("u", "r"), "weight": 420, "expected": [('a', 'p'), ('a', 'n'), ('a', 'h'), ('n', 'i'), ('h', 'k'), ('h', 's'), ('b', 'c'), ('q', 'o'), ('c', 's'), ('k', 'g'), ('d', 'm'), ('d', 't'), ('t', 'g'), ('t', 'l'), ('m', 'f'), ('e', 'f'), ('e', 'j'), ('j', 'u'), ('l', 'o'), ('o', 'r')] },
    { "edge": ("u", "r"), "weight": 43, "expected": [('a', 'p'), ('a', 'n'), ('a', 'h'), ('n', 'i'), ('h', 'k'), ('h', 's'), ('b', 'c'), ('q', 'o'), ('c', 's'), ('k', 'g'), ('d', 'm'), ('d', 't'), ('t', 'g'), ('t', 'l'), ('m', 'f'), ('e', 'f'), ('e', 'j'), ('u', 'r'), ('l', 'o'), ('o', 'r')] },
    { "edge": ("l", "o"), "weight": 137, "expected": [('a', 'p'), ('a', 'n'), ('a', 'h'), ('n', 'i'), ('h', 'k'), ('h', 's'), ('b', 'c'), ('q', 'o'), ('c', 's'), ('k', 'g'), ('d', 'm'), ('d', 't'), ('t', 'g'), ('t', 'l'), ('m', 'f'), ('e', 'f'), ('e', 'j'), ('j', 'u'), ('l', 'o'), ('o', 'r')] },
    { "edge": ("l", "o"), "weight": 139, "expected": [('a', 'p'), ('a', 'n'), ('a', 'h'), ('n', 'i'), ('h', 'k'), ('h', 's'), ('b', 'c'), ('q', 'o'), ('c', 's'), ('k', 'g'), ('d', 'm'), ('d', 't'), ('t', 'g'), ('t', 'l'), ('m', 'f'), ('e', 'f'), ('e', 'j'), ('j', 'u'), ('l', 'o'), ('o', 'r')] }
]
# Graph consisting of 21 nodes
data[22]["graph"] = Graph(is_directed=False)
data[22]["graph"].add_edge("a", "m", 1287)
data[22]["graph"].add_edge("a", "s", 1123)
data[22]["graph"].add_edge("a", "v", 1472)
data[22]["graph"].add_edge("b", "f", 373)
data[22]["graph"].add_edge("b", "j", 471)
data[22]["graph"].add_edge("c", "k", 1665)
data[22]["graph"].add_edge("c", "o", 1576)
data[22]["graph"].add_edge("c", "q", 616)
data[22]["graph"].add_edge("d", "l", 1072)
data[22]["graph"].add_edge("e", "r", 987)
data[22]["graph"].add_edge("f", "h", 168)
data[22]["graph"].add_edge("f", "k", 598)
data[22]["graph"].add_edge("h", "i", 738)
data[22]["graph"].add_edge("i", "p", 615)
data[22]["graph"].add_edge("j", "g", 902)
data[22]["graph"].add_edge("j", "r", 1090)
data[22]["graph"].add_edge("k", "d", 819)
data[22]["graph"].add_edge("l", "g", 911)
data[22]["graph"].add_edge("l", "u", 1410)
data[22]["graph"].add_edge("m", "e", 1083)
data[22]["graph"].add_edge("m", "t", 892)
data[22]["graph"].add_edge("o", "i", 1583)
data[22]["graph"].add_edge("o", "n", 427)
data[22]["graph"].add_edge("p", "n", 1188)
data[22]["graph"].add_edge("p", "u", 1048)
data[22]["graph"].add_edge("q", "h", 752)
data[22]["graph"].add_edge("q", "u", 436)
data[22]["graph"].add_edge("r", "g", 529)
data[22]["graph"].add_edge("s", "b", 1441)
data[22]["graph"].add_edge("s", "n", 663)
data[22]["graph"].add_edge("v", "d", 524)
data[22]["graph"].add_edge("v", "e", 991)
data[22]["mst"] = Graph(is_directed=False)
data[22]["mst"].add_edge("a", "s", weight=1123)
data[22]["mst"].add_edge("b", "f", weight=373)
data[22]["mst"].add_edge("b", "j", weight=471)
data[22]["mst"].add_edge("c", "q", weight=616)
data[22]["mst"].add_edge("e", "r", weight=987)
data[22]["mst"].add_edge("f", "h", weight=168)
data[22]["mst"].add_edge("f", "k", weight=598)
data[22]["mst"].add_edge("h", "i", weight=738)
data[22]["mst"].add_edge("i", "p", weight=615)
data[22]["mst"].add_edge("j", "g", weight=902)
data[22]["mst"].add_edge("k", "d", weight=819)
data[22]["mst"].add_edge("l", "g", weight=911)
data[22]["mst"].add_edge("m", "e", weight=1083)
data[22]["mst"].add_edge("m", "t", weight=892)
data[22]["mst"].add_edge("o", "n", weight=427)
data[22]["mst"].add_edge("p", "n", weight=1188)
data[22]["mst"].add_edge("q", "h", weight=752)
data[22]["mst"].add_edge("q", "u", weight=436)
data[22]["mst"].add_edge("r", "g", weight=529)
data[22]["mst"].add_edge("s", "n", weight=663)
data[22]["mst"].add_edge("v", "d", weight=524)
data[22]["solutions"] = [
    { "edge": ("c", "o"), "weight": 1577, "expected": [('a', 's'), ('s', 'n'), ('m', 't'), ('m', 'e'), ('v', 'd'), ('b', 'f'), ('b', 'j'), ('j', 'g'), ('f', 'h'), ('f', 'k'), ('c', 'q'), ('q', 'u'), ('q', 'h'), ('k', 'd'), ('o', 'n'), ('l', 'g'), ('e', 'r'), ('r', 'g'), ('h', 'i'), ('i', 'p'), ('p', 'n')] },
    { "edge": ("c", "o"), "weight": 662, "expected": [('a', 's'), ('s', 'n'), ('m', 't'), ('m', 'e'), ('v', 'd'), ('b', 'f'), ('b', 'j'), ('j', 'g'), ('f', 'h'), ('f', 'k'), ('c', 'q'), ('c', 'o'), ('q', 'u'), ('q', 'h'), ('k', 'd'), ('o', 'n'), ('l', 'g'), ('e', 'r'), ('r', 'g'), ('h', 'i'), ('i', 'p')] },
    { "edge": ("f", "k"), "weight": 597, "expected": [('a', 's'), ('s', 'n'), ('m', 't'), ('m', 'e'), ('v', 'd'), ('b', 'f'), ('b', 'j'), ('j', 'g'), ('f', 'h'), ('f', 'k'), ('c', 'q'), ('q', 'u'), ('q', 'h'), ('k', 'd'), ('o', 'n'), ('l', 'g'), ('e', 'r'), ('r', 'g'), ('h', 'i'), ('i', 'p'), ('p', 'n')] },
    { "edge": ("i", "p"), "weight": 617, "expected": [('a', 's'), ('s', 'n'), ('m', 't'), ('m', 'e'), ('v', 'd'), ('b', 'f'), ('b', 'j'), ('j', 'g'), ('f', 'h'), ('f', 'k'), ('c', 'q'), ('q', 'u'), ('q', 'h'), ('k', 'd'), ('o', 'n'), ('l', 'g'), ('e', 'r'), ('r', 'g'), ('h', 'i'), ('i', 'p'), ('p', 'n')] }
]
# Graph consisting of 22 nodes
data[23]["graph"] = Graph(is_directed=False)
data[23]["graph"].add_edge("a", "g", 217)
data[23]["graph"].add_edge("a", "o", 397)
data[23]["graph"].add_edge("a", "p", 1022)
data[23]["graph"].add_edge("b", "i", 1659)
data[23]["graph"].add_edge("b", "s", 159)
data[23]["graph"].add_edge("b", "v", 203)
data[23]["graph"].add_edge("d", "f", 859)
data[23]["graph"].add_edge("d", "k", 794)
data[23]["graph"].add_edge("d", "q", 106)
data[23]["graph"].add_edge("e", "n", 1637)
data[23]["graph"].add_edge("e", "r", 1665)
data[23]["graph"].add_edge("f", "u", 418)
data[23]["graph"].add_edge("g", "c", 77)
data[23]["graph"].add_edge("g", "m", 787)
data[23]["graph"].add_edge("h", "w", 1660)
data[23]["graph"].add_edge("i", "k", 1574)
data[23]["graph"].add_edge("i", "v", 1456)
data[23]["graph"].add_edge("k", "w", 1620)
data[23]["graph"].add_edge("m", "l", 1275)
data[23]["graph"].add_edge("m", "w", 344)
data[23]["graph"].add_edge("n", "h", 1282)
data[23]["graph"].add_edge("n", "j", 210)
data[23]["graph"].add_edge("o", "c", 71)
data[23]["graph"].add_edge("o", "e", 115)
data[23]["graph"].add_edge("p", "c", 1075)
data[23]["graph"].add_edge("p", "f", 1391)
data[23]["graph"].add_edge("q", "l", 1358)
data[23]["graph"].add_edge("r", "l", 958)
data[23]["graph"].add_edge("s", "q", 332)
data[23]["graph"].add_edge("s", "r", 1553)
data[23]["graph"].add_edge("u", "h", 812)
data[23]["graph"].add_edge("u", "j", 1277)
data[23]["graph"].add_edge("v", "j", 1483)
data[23]["mst"] = Graph(is_directed=False)
data[23]["mst"].add_edge("a", "g", weight=217)
data[23]["mst"].add_edge("a", "p", weight=1022)
data[23]["mst"].add_edge("b", "s", weight=159)
data[23]["mst"].add_edge("b", "v", weight=203)
data[23]["mst"].add_edge("d", "f", weight=859)
data[23]["mst"].add_edge("d", "k", weight=794)
data[23]["mst"].add_edge("d", "q", weight=106)
data[23]["mst"].add_edge("f", "u", weight=418)
data[23]["mst"].add_edge("g", "c", weight=77)
data[23]["mst"].add_edge("g", "m", weight=787)
data[23]["mst"].add_edge("i", "v", weight=1456)
data[23]["mst"].add_edge("m", "l", weight=1275)
data[23]["mst"].add_edge("m", "w", weight=344)
data[23]["mst"].add_edge("n", "j", weight=210)
data[23]["mst"].add_edge("o", "c", weight=71)
data[23]["mst"].add_edge("o", "e", weight=115)
data[23]["mst"].add_edge("q", "l", weight=1358)
data[23]["mst"].add_edge("r", "l", weight=958)
data[23]["mst"].add_edge("s", "q", weight=332)
data[23]["mst"].add_edge("u", "h", weight=812)
data[23]["mst"].add_edge("u", "j", weight=1277)
data[23]["solutions"] = [
    { "edge": ("e", "n"), "weight": 1638, "expected": [('a', 'g'), ('a', 'p'), ('g', 'c'), ('g', 'm'), ('o', 'c'), ('o', 'e'), ('b', 's'), ('b', 'v'), ('i', 'v'), ('s', 'q'), ('d', 'q'), ('d', 'k'), ('d', 'f'), ('q', 'l'), ('f', 'u'), ('r', 'l'), ('n', 'j'), ('u', 'h'), ('u', 'j'), ('m', 'w'), ('m', 'l')] },
    { "edge": ("b", "i"), "weight": 1276, "expected": [('a', 'g'), ('a', 'p'), ('g', 'c'), ('g', 'm'), ('o', 'c'), ('o', 'e'), ('b', 's'), ('b', 'v'), ('b', 'i'), ('s', 'q'), ('d', 'q'), ('d', 'k'), ('d', 'f'), ('q', 'l'), ('f', 'u'), ('r', 'l'), ('n', 'j'), ('u', 'h'), ('u', 'j'), ('m', 'w'), ('m', 'l')] },
    { "edge": ("u", "h"), "weight": 811, "expected": [('a', 'g'), ('a', 'p'), ('g', 'c'), ('g', 'm'), ('o', 'c'), ('o', 'e'), ('b', 's'), ('b', 'v'), ('i', 'v'), ('s', 'q'), ('d', 'q'), ('d', 'k'), ('d', 'f'), ('q', 'l'), ('f', 'u'), ('r', 'l'), ('n', 'j'), ('u', 'h'), ('u', 'j'), ('m', 'w'), ('m', 'l')] },
    { "edge": ("d", "q"), "weight": 107, "expected": [('a', 'g'), ('a', 'p'), ('g', 'c'), ('g', 'm'), ('o', 'c'), ('o', 'e'), ('b', 's'), ('b', 'v'), ('i', 'v'), ('s', 'q'), ('d', 'q'), ('d', 'k'), ('d', 'f'), ('q', 'l'), ('f', 'u'), ('r', 'l'), ('n', 'j'), ('u', 'h'), ('u', 'j'), ('m', 'w'), ('m', 'l')] }
]
# Graph consisting of 23 nodes
data[24]["graph"] = Graph(is_directed=False)
data[24]["graph"].add_edge("a", "i", 1434)
data[24]["graph"].add_edge("a", "l", 739)
data[24]["graph"].add_edge("a", "r", 64)
data[24]["graph"].add_edge("b", "d", 860)
data[24]["graph"].add_edge("b", "h", 120)
data[24]["graph"].add_edge("b", "n", 162)
data[24]["graph"].add_edge("c", "j", 696)
data[24]["graph"].add_edge("c", "p", 611)
data[24]["graph"].add_edge("c", "x", 1037)
data[24]["graph"].add_edge("d", "m", 1430)
data[24]["graph"].add_edge("d", "s", 332)
data[24]["graph"].add_edge("e", "f", 1485)
data[24]["graph"].add_edge("e", "t", 1293)
data[24]["graph"].add_edge("g", "w", 1448)
data[24]["graph"].add_edge("h", "f", 932)
data[24]["graph"].add_edge("i", "q", 1043)
data[24]["graph"].add_edge("i", "r", 1576)
data[24]["graph"].add_edge("j", "m", 155)
data[24]["graph"].add_edge("j", "o", 736)
data[24]["graph"].add_edge("k", "v", 251)
data[24]["graph"].add_edge("l", "h", 14)
data[24]["graph"].add_edge("l", "v", 857)
data[24]["graph"].add_edge("m", "w", 604)
data[24]["graph"].add_edge("n", "g", 940)
data[24]["graph"].add_edge("n", "o", 516)
data[24]["graph"].add_edge("o", "u", 1149)
data[24]["graph"].add_edge("p", "f", 1338)
data[24]["graph"].add_edge("p", "s", 1494)
data[24]["graph"].add_edge("q", "u", 1089)
data[24]["graph"].add_edge("r", "e", 1400)
data[24]["graph"].add_edge("s", "k", 778)
data[24]["graph"].add_edge("t", "u", 353)
data[24]["graph"].add_edge("t", "v", 777)
data[24]["graph"].add_edge("w", "k", 359)
data[24]["graph"].add_edge("x", "g", 550)
data[24]["graph"].add_edge("x", "q", 682)
data[24]["mst"] = Graph(is_directed=False)
data[24]["mst"].add_edge("a", "l", weight=739)
data[24]["mst"].add_edge("a", "r", weight=64)
data[24]["mst"].add_edge("b", "h", weight=120)
data[24]["mst"].add_edge("b", "n", weight=162)
data[24]["mst"].add_edge("c", "j", weight=696)
data[24]["mst"].add_edge("c", "p", weight=611)
data[24]["mst"].add_edge("d", "s", weight=332)
data[24]["mst"].add_edge("e", "t", weight=1293)
data[24]["mst"].add_edge("h", "f", weight=932)
data[24]["mst"].add_edge("i", "q", weight=1043)
data[24]["mst"].add_edge("j", "m", weight=155)
data[24]["mst"].add_edge("j", "o", weight=736)
data[24]["mst"].add_edge("k", "v", weight=251)
data[24]["mst"].add_edge("l", "h", weight=14)
data[24]["mst"].add_edge("m", "w", weight=604)
data[24]["mst"].add_edge("n", "g", weight=940)
data[24]["mst"].add_edge("n", "o", weight=516)
data[24]["mst"].add_edge("s", "k", weight=778)
data[24]["mst"].add_edge("t", "u", weight=353)
data[24]["mst"].add_edge("t", "v", weight=777)
data[24]["mst"].add_edge("w", "k", weight=359)
data[24]["mst"].add_edge("x", "g", weight=550)
data[24]["mst"].add_edge("x", "q", weight=682)
data[24]["solutions"] = [
    { "edge": ("d", "m"), "weight": 1431, "expected": [('a', 'r'), ('a', 'l'), ('i', 'q'), ('l', 'h'), ('b', 'h'), ('b', 'n'), ('d', 's'), ('n', 'o'), ('n', 'g'), ('h', 'f'), ('c', 'p'), ('c', 'j'), ('j', 'm'), ('j', 'o'), ('x', 'g'), ('x', 'q'), ('s', 'k'), ('m', 'w'), ('e', 't'), ('t', 'u'), ('t', 'v'), ('w', 'k'), ('k', 'v')] },
    { "edge": ("d", "m"), "weight": 515, "expected": [('a', 'r'), ('a', 'l'), ('i', 'q'), ('l', 'h'), ('b', 'h'), ('b', 'n'), ('d', 's'), ('d', 'm'), ('n', 'o'), ('n', 'g'), ('h', 'f'), ('c', 'p'), ('c', 'j'), ('j', 'm'), ('j', 'o'), ('x', 'g'), ('x', 'q'), ('m', 'w'), ('e', 't'), ('t', 'u'), ('t', 'v'), ('w', 'k'), ('k', 'v')] },
    { "edge": ("c", "j"), "weight": 695, "expected": [('a', 'r'), ('a', 'l'), ('i', 'q'), ('l', 'h'), ('b', 'h'), ('b', 'n'), ('d', 's'), ('n', 'o'), ('n', 'g'), ('h', 'f'), ('c', 'p'), ('c', 'j'), ('j', 'm'), ('j', 'o'), ('x', 'g'), ('x', 'q'), ('s', 'k'), ('m', 'w'), ('e', 't'), ('t', 'u'), ('t', 'v'), ('w', 'k'), ('k', 'v')] },
    { "edge": ("i", "q"), "weight": 1044, "expected": [('a', 'r'), ('a', 'l'), ('i', 'q'), ('l', 'h'), ('b', 'h'), ('b', 'n'), ('d', 's'), ('n', 'o'), ('n', 'g'), ('h', 'f'), ('c', 'p'), ('c', 'j'), ('j', 'm'), ('j', 'o'), ('x', 'g'), ('x', 'q'), ('s', 'k'), ('m', 'w'), ('e', 't'), ('t', 'u'), ('t', 'v'), ('w', 'k'), ('k', 'v')] }
]
# Graph consisting of 24 nodes
data[25]["graph"] = Graph(is_directed=False)
data[25]["graph"].add_edge("a", "i", 1199)
data[25]["graph"].add_edge("a", "m", 1018)
data[25]["graph"].add_edge("a", "q", 1249)
data[25]["graph"].add_edge("b", "j", 382)
data[25]["graph"].add_edge("b", "r", 1653)
data[25]["graph"].add_edge("b", "u", 873)
data[25]["graph"].add_edge("c", "n", 280)
data[25]["graph"].add_edge("c", "p", 1244)
data[25]["graph"].add_edge("d", "l", 1300)
data[25]["graph"].add_edge("e", "g", 647)
data[25]["graph"].add_edge("e", "x", 1660)
data[25]["graph"].add_edge("f", "o", 645)
data[25]["graph"].add_edge("f", "v", 162)
data[25]["graph"].add_edge("g", "w", 491)
data[25]["graph"].add_edge("h", "k", 202)
data[25]["graph"].add_edge("i", "d", 489)
data[25]["graph"].add_edge("i", "f", 840)
data[25]["graph"].add_edge("j", "r", 860)
data[25]["graph"].add_edge("k", "y", 1174)
data[25]["graph"].add_edge("m", "e", 180)
data[25]["graph"].add_edge("m", "j", 320)
data[25]["graph"].add_edge("n", "g", 523)
data[25]["graph"].add_edge("n", "l", 1019)
data[25]["graph"].add_edge("o", "h", 160)
data[25]["graph"].add_edge("p", "l", 669)
data[25]["graph"].add_edge("p", "t", 78)
data[25]["graph"].add_edge("q", "h", 157)
data[25]["graph"].add_edge("q", "y", 456)
data[25]["graph"].add_edge("r", "c", 1528)
data[25]["graph"].add_edge("u", "d", 642)
data[25]["graph"].add_edge("u", "k", 187)
data[25]["graph"].add_edge("v", "s", 684)
data[25]["graph"].add_edge("v", "t", 1096)
data[25]["graph"].add_edge("w", "t", 834)
data[25]["graph"].add_edge("x", "o", 1307)
data[25]["graph"].add_edge("x", "s", 811)
data[25]["graph"].add_edge("y", "s", 1342)
data[25]["mst"] = Graph(is_directed=False)
data[25]["mst"].add_edge("a", "m", weight=1018)
data[25]["mst"].add_edge("b", "j", weight=382)
data[25]["mst"].add_edge("b", "u", weight=873)
data[25]["mst"].add_edge("c", "n", weight=280)
data[25]["mst"].add_edge("e", "g", weight=647)
data[25]["mst"].add_edge("f", "o", weight=645)
data[25]["mst"].add_edge("f", "v", weight=162)
data[25]["mst"].add_edge("g", "w", weight=491)
data[25]["mst"].add_edge("h", "k", weight=202)
data[25]["mst"].add_edge("i", "d", weight=489)
data[25]["mst"].add_edge("j", "r", weight=860)
data[25]["mst"].add_edge("m", "e", weight=180)
data[25]["mst"].add_edge("m", "j", weight=320)
data[25]["mst"].add_edge("n", "g", weight=523)
data[25]["mst"].add_edge("o", "h", weight=160)
data[25]["mst"].add_edge("p", "l", weight=669)
data[25]["mst"].add_edge("p", "t", weight=78)
data[25]["mst"].add_edge("q", "h", weight=157)
data[25]["mst"].add_edge("q", "y", weight=456)
data[25]["mst"].add_edge("u", "d", weight=642)
data[25]["mst"].add_edge("u", "k", weight=187)
data[25]["mst"].add_edge("v", "s", weight=684)
data[25]["mst"].add_edge("w", "t", weight=834)
data[25]["mst"].add_edge("x", "s", weight=811)
data[25]["solutions"] = [
    { "edge": ("a", "q"), "weight": 1250, "expected": [('a', 'm'), ('i', 'd'), ('q', 'h'), ('q', 'y'), ('m', 'e'), ('m', 'j'), ('b', 'j'), ('b', 'u'), ('j', 'r'), ('u', 'k'), ('u', 'd'), ('c', 'n'), ('n', 'g'), ('p', 't'), ('p', 'l'), ('e', 'g'), ('g', 'w'), ('x', 's'), ('f', 'v'), ('f', 'o'), ('v', 's'), ('o', 'h'), ('w', 't'), ('h', 'k')] },
    { "edge": ("r", "c"), "weight": 161, "expected": [('a', 'm'), ('i', 'd'), ('q', 'h'), ('q', 'y'), ('m', 'e'), ('m', 'j'), ('b', 'j'), ('b', 'u'), ('u', 'k'), ('u', 'd'), ('r', 'c'), ('c', 'n'), ('n', 'g'), ('p', 't'), ('p', 'l'), ('e', 'g'), ('g', 'w'), ('x', 's'), ('f', 'v'), ('f', 'o'), ('v', 's'), ('o', 'h'), ('w', 't'), ('h', 'k')] },
    { "edge": ("b", "u"), "weight": 872, "expected": [('a', 'm'), ('i', 'd'), ('q', 'h'), ('q', 'y'), ('m', 'e'), ('m', 'j'), ('b', 'j'), ('b', 'u'), ('j', 'r'), ('u', 'k'), ('u', 'd'), ('c', 'n'), ('n', 'g'), ('p', 't'), ('p', 'l'), ('e', 'g'), ('g', 'w'), ('x', 's'), ('f', 'v'), ('f', 'o'), ('v', 's'), ('o', 'h'), ('w', 't'), ('h', 'k')] },
    { "edge": ("o", "h"), "weight": 161, "expected": [('a', 'm'), ('i', 'd'), ('q', 'h'), ('q', 'y'), ('m', 'e'), ('m', 'j'), ('b', 'j'), ('b', 'u'), ('j', 'r'), ('u', 'k'), ('u', 'd'), ('c', 'n'), ('n', 'g'), ('p', 't'), ('p', 'l'), ('e', 'g'), ('g', 'w'), ('x', 's'), ('f', 'v'), ('f', 'o'), ('v', 's'), ('o', 'h'), ('w', 't'), ('h', 'k')] }
]
# Graph consisting of 25 nodes
data[26]["graph"] = Graph(is_directed=False)
data[26]["graph"].add_edge("a", "n", 1567)
data[26]["graph"].add_edge("a", "q", 18)
data[26]["graph"].add_edge("a", "x", 1210)
data[26]["graph"].add_edge("b", "g", 695)
data[26]["graph"].add_edge("b", "o", 529)
data[26]["graph"].add_edge("b", "p", 364)
data[26]["graph"].add_edge("c", "t", 1519)
data[26]["graph"].add_edge("c", "z", 1324)
data[26]["graph"].add_edge("d", "l", 1245)
data[26]["graph"].add_edge("d", "m", 1454)
data[26]["graph"].add_edge("e", "k", 1205)
data[26]["graph"].add_edge("e", "s", 3)
data[26]["graph"].add_edge("f", "w", 1444)
data[26]["graph"].add_edge("g", "c", 533)
data[26]["graph"].add_edge("g", "i", 1081)
data[26]["graph"].add_edge("i", "v", 1421)
data[26]["graph"].add_edge("k", "j", 98)
data[26]["graph"].add_edge("l", "e", 1000)
data[26]["graph"].add_edge("l", "h", 963)
data[26]["graph"].add_edge("m", "h", 1540)
data[26]["graph"].add_edge("n", "t", 1343)
data[26]["graph"].add_edge("n", "y", 1511)
data[26]["graph"].add_edge("o", "d", 263)
data[26]["graph"].add_edge("o", "y", 1354)
data[26]["graph"].add_edge("p", "f", 258)
data[26]["graph"].add_edge("p", "v", 897)
data[26]["graph"].add_edge("q", "m", 537)
data[26]["graph"].add_edge("q", "u", 776)
data[26]["graph"].add_edge("s", "f", 1074)
data[26]["graph"].add_edge("s", "k", 171)
data[26]["graph"].add_edge("v", "j", 1384)
data[26]["graph"].add_edge("w", "h", 1556)
data[26]["graph"].add_edge("w", "r", 473)
data[26]["graph"].add_edge("x", "i", 316)
data[26]["graph"].add_edge("x", "j", 916)
data[26]["graph"].add_edge("y", "r", 647)
data[26]["graph"].add_edge("z", "r", 1608)
data[26]["graph"].add_edge("z", "t", 336)
data[26]["mst"] = Graph(is_directed=False)
data[26]["mst"].add_edge("a", "q", weight=18)
data[26]["mst"].add_edge("a", "x", weight=1210)
data[26]["mst"].add_edge("b", "g", weight=695)
data[26]["mst"].add_edge("b", "o", weight=529)
data[26]["mst"].add_edge("b", "p", weight=364)
data[26]["mst"].add_edge("c", "z", weight=1324)
data[26]["mst"].add_edge("e", "s", weight=3)
data[26]["mst"].add_edge("g", "c", weight=533)
data[26]["mst"].add_edge("k", "j", weight=98)
data[26]["mst"].add_edge("l", "e", weight=1000)
data[26]["mst"].add_edge("l", "h", weight=963)
data[26]["mst"].add_edge("n", "t", weight=1343)
data[26]["mst"].add_edge("o", "d", weight=263)
data[26]["mst"].add_edge("o", "y", weight=1354)
data[26]["mst"].add_edge("p", "f", weight=258)
data[26]["mst"].add_edge("p", "v", weight=897)
data[26]["mst"].add_edge("q", "m", weight=537)
data[26]["mst"].add_edge("q", "u", weight=776)
data[26]["mst"].add_edge("s", "f", weight=1074)
data[26]["mst"].add_edge("s", "k", weight=171)
data[26]["mst"].add_edge("w", "r", weight=473)
data[26]["mst"].add_edge("x", "i", weight=316)
data[26]["mst"].add_edge("x", "j", weight=916)
data[26]["mst"].add_edge("y", "r", weight=647)
data[26]["mst"].add_edge("z", "t", weight=336)
data[26]["solutions"] = [
    { "edge": ("c", "t"), "weight": 1520, "expected": [('a', 'q'), ('a', 'x'), ('q', 'm'), ('q', 'u'), ('n', 't'), ('x', 'i'), ('x', 'j'), ('b', 'p'), ('b', 'o'), ('b', 'g'), ('p', 'f'), ('p', 'v'), ('g', 'c'), ('o', 'd'), ('o', 'y'), ('c', 'z'), ('z', 't'), ('l', 'h'), ('l', 'e'), ('e', 's'), ('s', 'k'), ('s', 'f'), ('k', 'j'), ('w', 'r'), ('y', 'r')] },
    { "edge": ("i", "v"), "weight": 1209, "expected": [('a', 'q'), ('a', 'x'), ('q', 'm'), ('q', 'u'), ('n', 't'), ('x', 'i'), ('x', 'j'), ('b', 'p'), ('b', 'o'), ('b', 'g'), ('p', 'f'), ('p', 'v'), ('g', 'c'), ('o', 'd'), ('o', 'y'), ('c', 'z'), ('z', 't'), ('l', 'h'), ('l', 'e'), ('e', 's'), ('s', 'k'), ('s', 'f'), ('k', 'j'), ('w', 'r'), ('y', 'r')] },
    { "edge": ("a", "q"), "weight": 17, "expected": [('a', 'q'), ('a', 'x'), ('q', 'm'), ('q', 'u'), ('n', 't'), ('x', 'i'), ('x', 'j'), ('b', 'p'), ('b', 'o'), ('b', 'g'), ('p', 'f'), ('p', 'v'), ('g', 'c'), ('o', 'd'), ('o', 'y'), ('c', 'z'), ('z', 't'), ('l', 'h'), ('l', 'e'), ('e', 's'), ('s', 'k'), ('s', 'f'), ('k', 'j'), ('w', 'r'), ('y', 'r')] },
    { "edge": ("s", "k"), "weight": 172, "expected": [('a', 'q'), ('a', 'x'), ('q', 'm'), ('q', 'u'), ('n', 't'), ('x', 'i'), ('x', 'j'), ('b', 'p'), ('b', 'o'), ('b', 'g'), ('p', 'f'), ('p', 'v'), ('g', 'c'), ('o', 'd'), ('o', 'y'), ('c', 'z'), ('z', 't'), ('l', 'h'), ('l', 'e'), ('e', 's'), ('s', 'k'), ('s', 'f'), ('k', 'j'), ('w', 'r'), ('y', 'r')] }
]
# Graph consisting of 26 nodes
data[27]["graph"] = Graph(is_directed=False)
data[27]["graph"].add_edge("A", "k", 593)
data[27]["graph"].add_edge("A", "z", 407)
data[27]["graph"].add_edge("a", "b", 117)
data[27]["graph"].add_edge("a", "q", 541)
data[27]["graph"].add_edge("a", "r", 100)
data[27]["graph"].add_edge("b", "c", 1011)
data[27]["graph"].add_edge("b", "x", 643)
data[27]["graph"].add_edge("c", "m", 342)
data[27]["graph"].add_edge("c", "t", 1118)
data[27]["graph"].add_edge("d", "h", 238)
data[27]["graph"].add_edge("d", "u", 1619)
data[27]["graph"].add_edge("e", "A", 1090)
data[27]["graph"].add_edge("f", "n", 1291)
data[27]["graph"].add_edge("f", "v", 381)
data[27]["graph"].add_edge("g", "s", 310)
data[27]["graph"].add_edge("h", "e", 768)
data[27]["graph"].add_edge("h", "l", 1321)
data[27]["graph"].add_edge("i", "y", 1055)
data[27]["graph"].add_edge("j", "p", 791)
data[27]["graph"].add_edge("k", "w", 137)
data[27]["graph"].add_edge("l", "i", 14)
data[27]["graph"].add_edge("m", "f", 1424)
data[27]["graph"].add_edge("m", "l", 588)
data[27]["graph"].add_edge("n", "i", 1261)
data[27]["graph"].add_edge("n", "j", 1426)
data[27]["graph"].add_edge("o", "z", 615)
data[27]["graph"].add_edge("p", "k", 1422)
data[27]["graph"].add_edge("q", "g", 793)
data[27]["graph"].add_edge("q", "w", 542)
data[27]["graph"].add_edge("r", "d", 647)
data[27]["graph"].add_edge("r", "w", 601)
data[27]["graph"].add_edge("s", "y", 1168)
data[27]["graph"].add_edge("t", "o", 421)
data[27]["graph"].add_edge("t", "p", 1454)
data[27]["graph"].add_edge("u", "o", 1615)
data[27]["graph"].add_edge("u", "s", 218)
data[27]["graph"].add_edge("v", "g", 1668)
data[27]["graph"].add_edge("x", "e", 1196)
data[27]["graph"].add_edge("x", "v", 369)
data[27]["graph"].add_edge("y", "j", 20)
data[27]["mst"] = Graph(is_directed=False)
data[27]["mst"].add_edge("A", "k", weight=593)
data[27]["mst"].add_edge("A", "z", weight=407)
data[27]["mst"].add_edge("a", "b", weight=117)
data[27]["mst"].add_edge("a", "q", weight=541)
data[27]["mst"].add_edge("a", "r", weight=100)
data[27]["mst"].add_edge("b", "c", weight=1011)
data[27]["mst"].add_edge("b", "x", weight=643)
data[27]["mst"].add_edge("c", "m", weight=342)
data[27]["mst"].add_edge("d", "h", weight=238)
data[27]["mst"].add_edge("f", "v", weight=381)
data[27]["mst"].add_edge("g", "s", weight=310)
data[27]["mst"].add_edge("h", "e", weight=768)
data[27]["mst"].add_edge("i", "y", weight=1055)
data[27]["mst"].add_edge("j", "p", weight=791)
data[27]["mst"].add_edge("k", "w", weight=137)
data[27]["mst"].add_edge("l", "i", weight=14)
data[27]["mst"].add_edge("m", "l", weight=588)
data[27]["mst"].add_edge("n", "i", weight=1261)
data[27]["mst"].add_edge("o", "z", weight=615)
data[27]["mst"].add_edge("q", "g", weight=793)
data[27]["mst"].add_edge("q", "w", weight=542)
data[27]["mst"].add_edge("r", "d", weight=647)
data[27]["mst"].add_edge("t", "o", weight=421)
data[27]["mst"].add_edge("u", "s", weight=218)
data[27]["mst"].add_edge("x", "v", weight=369)
data[27]["mst"].add_edge("y", "j", weight=20)
data[27]["solutions"] = [
    { "edge": ("r", "w"), "weight": 602, "expected": [('a', 'r'), ('a', 'b'), ('a', 'q'), ('q', 'w'), ('q', 'g'), ('b', 'x'), ('b', 'c'), ('r', 'd'), ('c', 'm'), ('x', 'v'), ('t', 'o'), ('m', 'l'), ('d', 'h'), ('u', 's'), ('h', 'e'), ('A', 'z'), ('A', 'k'), ('f', 'v'), ('n', 'i'), ('g', 's'), ('l', 'i'), ('i', 'y'), ('y', 'j'), ('j', 'p'), ('k', 'w'), ('o', 'z')] },
    { "edge": ("u", "o"), "weight": 406, "expected": [('a', 'r'), ('a', 'b'), ('a', 'q'), ('q', 'w'), ('b', 'x'), ('b', 'c'), ('r', 'd'), ('c', 'm'), ('x', 'v'), ('t', 'o'), ('m', 'l'), ('d', 'h'), ('u', 's'), ('u', 'o'), ('h', 'e'), ('A', 'z'), ('A', 'k'), ('f', 'v'), ('n', 'i'), ('g', 's'), ('l', 'i'), ('i', 'y'), ('y', 'j'), ('j', 'p'), ('k', 'w'), ('o', 'z')] },
    { "edge": ("g", "s"), "weight": 309, "expected": [('a', 'r'), ('a', 'b'), ('a', 'q'), ('q', 'w'), ('q', 'g'), ('b', 'x'), ('b', 'c'), ('r', 'd'), ('c', 'm'), ('x', 'v'), ('t', 'o'), ('m', 'l'), ('d', 'h'), ('u', 's'), ('h', 'e'), ('A', 'z'), ('A', 'k'), ('f', 'v'), ('n', 'i'), ('g', 's'), ('l', 'i'), ('i', 'y'), ('y', 'j'), ('j', 'p'), ('k', 'w'), ('o', 'z')] },
    { "edge": ("d", "h"), "weight": 239, "expected": [('a', 'r'), ('a', 'b'), ('a', 'q'), ('q', 'w'), ('q', 'g'), ('b', 'x'), ('b', 'c'), ('r', 'd'), ('c', 'm'), ('x', 'v'), ('t', 'o'), ('m', 'l'), ('d', 'h'), ('u', 's'), ('h', 'e'), ('A', 'z'), ('A', 'k'), ('f', 'v'), ('n', 'i'), ('g', 's'), ('l', 'i'), ('i', 'y'), ('y', 'j'), ('j', 'p'), ('k', 'w'), ('o', 'z')] }
]
# Graph consisting of 27 nodes
data[28]["graph"] = Graph(is_directed=False)
data[28]["graph"].add_edge("B", "p", 768)
data[28]["graph"].add_edge("B", "w", 209)
data[28]["graph"].add_edge("a", "e", 1519)
data[28]["graph"].add_edge("a", "h", 593)
data[28]["graph"].add_edge("a", "m", 1184)
data[28]["graph"].add_edge("b", "n", 1296)
data[28]["graph"].add_edge("b", "v", 1583)
data[28]["graph"].add_edge("b", "y", 907)
data[28]["graph"].add_edge("c", "g", 1588)
data[28]["graph"].add_edge("c", "k", 1677)
data[28]["graph"].add_edge("c", "o", 51)
data[28]["graph"].add_edge("d", "f", 1517)
data[28]["graph"].add_edge("e", "d", 1315)
data[28]["graph"].add_edge("e", "r", 351)
data[28]["graph"].add_edge("f", "u", 1025)
data[28]["graph"].add_edge("g", "f", 1106)
data[28]["graph"].add_edge("g", "i", 506)
data[28]["graph"].add_edge("h", "k", 1298)
data[28]["graph"].add_edge("h", "n", 268)
data[28]["graph"].add_edge("i", "q", 1152)
data[28]["graph"].add_edge("i", "t", 1481)
data[28]["graph"].add_edge("j", "B", 1628)
data[28]["graph"].add_edge("j", "l", 144)
data[28]["graph"].add_edge("j", "p", 652)
data[28]["graph"].add_edge("k", "s", 236)
data[28]["graph"].add_edge("l", "p", 726)
data[28]["graph"].add_edge("m", "l", 685)
data[28]["graph"].add_edge("m", "x", 1340)
data[28]["graph"].add_edge("n", "o", 1121)
data[28]["graph"].add_edge("q", "t", 952)
data[28]["graph"].add_edge("r", "A", 530)
data[28]["graph"].add_edge("r", "s", 1586)
data[28]["graph"].add_edge("s", "z", 196)
data[28]["graph"].add_edge("u", "w", 410)
data[28]["graph"].add_edge("u", "z", 450)
data[28]["graph"].add_edge("v", "o", 329)
data[28]["graph"].add_edge("v", "q", 1182)
data[28]["graph"].add_edge("x", "A", 764)
data[28]["graph"].add_edge("y", "d", 175)
data[28]["graph"].add_edge("y", "t", 78)
data[28]["graph"].add_edge("z", "w", 1011)
data[28]["mst"] = Graph(is_directed=False)
data[28]["mst"].add_edge("B", "p", weight=768)
data[28]["mst"].add_edge("B", "w", weight=209)
data[28]["mst"].add_edge("a", "h", weight=593)
data[28]["mst"].add_edge("b", "y", weight=907)
data[28]["mst"].add_edge("c", "o", weight=51)
data[28]["mst"].add_edge("e", "d", weight=1315)
data[28]["mst"].add_edge("e", "r", weight=351)
data[28]["mst"].add_edge("f", "u", weight=1025)
data[28]["mst"].add_edge("g", "f", weight=1106)
data[28]["mst"].add_edge("g", "i", weight=506)
data[28]["mst"].add_edge("h", "n", weight=268)
data[28]["mst"].add_edge("i", "q", weight=1152)
data[28]["mst"].add_edge("j", "l", weight=144)
data[28]["mst"].add_edge("j", "p", weight=652)
data[28]["mst"].add_edge("k", "s", weight=236)
data[28]["mst"].add_edge("m", "l", weight=685)
data[28]["mst"].add_edge("n", "o", weight=1121)
data[28]["mst"].add_edge("q", "t", weight=952)
data[28]["mst"].add_edge("r", "A", weight=530)
data[28]["mst"].add_edge("s", "z", weight=196)
data[28]["mst"].add_edge("u", "w", weight=410)
data[28]["mst"].add_edge("u", "z", weight=450)
data[28]["mst"].add_edge("v", "o", weight=329)
data[28]["mst"].add_edge("v", "q", weight=1182)
data[28]["mst"].add_edge("x", "A", weight=764)
data[28]["mst"].add_edge("y", "d", weight=175)
data[28]["mst"].add_edge("y", "t", weight=78)
data[28]["solutions"] = [
    { "edge": ("c", "g"), "weight": 1589, "expected": [('a', 'h'), ('e', 'r'), ('e', 'd'), ('m', 'l'), ('h', 'n'), ('b', 'y'), ('y', 't'), ('y', 'd'), ('v', 'o'), ('v', 'q'), ('n', 'o'), ('c', 'o'), ('k', 's'), ('g', 'i'), ('g', 'f'), ('f', 'u'), ('r', 'A'), ('u', 'w'), ('u', 'z'), ('i', 'q'), ('q', 't'), ('j', 'l'), ('j', 'p'), ('B', 'w'), ('B', 'p'), ('s', 'z'), ('x', 'A')] },
    { "edge": ("r", "s"), "weight": 195, "expected": [('a', 'h'), ('e', 'r'), ('m', 'l'), ('h', 'n'), ('b', 'y'), ('y', 't'), ('y', 'd'), ('v', 'o'), ('v', 'q'), ('n', 'o'), ('c', 'o'), ('k', 's'), ('g', 'i'), ('g', 'f'), ('f', 'u'), ('r', 's'), ('r', 'A'), ('u', 'w'), ('u', 'z'), ('i', 'q'), ('q', 't'), ('j', 'l'), ('j', 'p'), ('B', 'w'), ('B', 'p'), ('s', 'z'), ('x', 'A')] },
    { "edge": ("x", "A"), "weight": 763, "expected": [('a', 'h'), ('e', 'r'), ('e', 'd'), ('m', 'l'), ('h', 'n'), ('b', 'y'), ('y', 't'), ('y', 'd'), ('v', 'o'), ('v', 'q'), ('n', 'o'), ('c', 'o'), ('k', 's'), ('g', 'i'), ('g', 'f'), ('f', 'u'), ('r', 'A'), ('u', 'w'), ('u', 'z'), ('i', 'q'), ('q', 't'), ('j', 'l'), ('j', 'p'), ('B', 'w'), ('B', 'p'), ('s', 'z'), ('x', 'A')] },
    { "edge": ("u", "w"), "weight": 411, "expected": [('a', 'h'), ('e', 'r'), ('e', 'd'), ('m', 'l'), ('h', 'n'), ('b', 'y'), ('y', 't'), ('y', 'd'), ('v', 'o'), ('v', 'q'), ('n', 'o'), ('c', 'o'), ('k', 's'), ('g', 'i'), ('g', 'f'), ('f', 'u'), ('r', 'A'), ('u', 'w'), ('u', 'z'), ('i', 'q'), ('q', 't'), ('j', 'l'), ('j', 'p'), ('B', 'w'), ('B', 'p'), ('s', 'z'), ('x', 'A')] }
]
# Graph consisting of 28 nodes
data[29]["graph"] = Graph(is_directed=False)
data[29]["graph"].add_edge("A", "v", 289)
data[29]["graph"].add_edge("a", "g", 406)
data[29]["graph"].add_edge("a", "k", 227)
data[29]["graph"].add_edge("a", "l", 1141)
data[29]["graph"].add_edge("b", "C", 715)
data[29]["graph"].add_edge("b", "c", 816)
data[29]["graph"].add_edge("b", "j", 1465)
data[29]["graph"].add_edge("c", "C", 408)
data[29]["graph"].add_edge("c", "t", 517)
data[29]["graph"].add_edge("d", "x", 148)
data[29]["graph"].add_edge("e", "B", 1273)
data[29]["graph"].add_edge("e", "p", 656)
data[29]["graph"].add_edge("e", "z", 366)
data[29]["graph"].add_edge("f", "u", 151)
data[29]["graph"].add_edge("f", "y", 38)
data[29]["graph"].add_edge("g", "d", 1021)
data[29]["graph"].add_edge("g", "o", 11)
data[29]["graph"].add_edge("h", "m", 856)
data[29]["graph"].add_edge("h", "n", 835)
data[29]["graph"].add_edge("i", "r", 333)
data[29]["graph"].add_edge("j", "B", 1497)
data[29]["graph"].add_edge("j", "x", 874)
data[29]["graph"].add_edge("k", "C", 1234)
data[29]["graph"].add_edge("k", "q", 1306)
data[29]["graph"].add_edge("l", "d", 1089)
data[29]["graph"].add_edge("l", "y", 592)
data[29]["graph"].add_edge("m", "A", 78)
data[29]["graph"].add_edge("m", "w", 284)
data[29]["graph"].add_edge("n", "i", 49)
data[29]["graph"].add_edge("o", "n", 1486)
data[29]["graph"].add_edge("p", "f", 1274)
data[29]["graph"].add_edge("p", "o", 314)
data[29]["graph"].add_edge("q", "v", 958)
data[29]["graph"].add_edge("r", "s", 1469)
data[29]["graph"].add_edge("t", "s", 168)
data[29]["graph"].add_edge("t", "x", 1004)
data[29]["graph"].add_edge("u", "h", 45)
data[29]["graph"].add_edge("u", "r", 677)
data[29]["graph"].add_edge("w", "s", 1495)
data[29]["graph"].add_edge("w", "v", 1516)
data[29]["graph"].add_edge("y", "i", 968)
data[29]["graph"].add_edge("z", "A", 1459)
data[29]["graph"].add_edge("z", "q", 1515)
data[29]["mst"] = Graph(is_directed=False)
data[29]["mst"].add_edge("A", "v", weight=289)
data[29]["mst"].add_edge("a", "g", weight=406)
data[29]["mst"].add_edge("a", "k", weight=227)
data[29]["mst"].add_edge("b", "C", weight=715)
data[29]["mst"].add_edge("c", "C", weight=408)
data[29]["mst"].add_edge("c", "t", weight=517)
data[29]["mst"].add_edge("d", "x", weight=148)
data[29]["mst"].add_edge("e", "B", weight=1273)
data[29]["mst"].add_edge("e", "p", weight=656)
data[29]["mst"].add_edge("e", "z", weight=366)
data[29]["mst"].add_edge("f", "u", weight=151)
data[29]["mst"].add_edge("f", "y", weight=38)
data[29]["mst"].add_edge("g", "d", weight=1021)
data[29]["mst"].add_edge("g", "o", weight=11)
data[29]["mst"].add_edge("h", "m", weight=856)
data[29]["mst"].add_edge("i", "r", weight=333)
data[29]["mst"].add_edge("j", "x", weight=874)
data[29]["mst"].add_edge("l", "d", weight=1089)
data[29]["mst"].add_edge("l", "y", weight=592)
data[29]["mst"].add_edge("m", "A", weight=78)
data[29]["mst"].add_edge("m", "w", weight=284)
data[29]["mst"].add_edge("n", "i", weight=49)
data[29]["mst"].add_edge("p", "o", weight=314)
data[29]["mst"].add_edge("q", "v", weight=958)
data[29]["mst"].add_edge("t", "s", weight=168)
data[29]["mst"].add_edge("t", "x", weight=1004)
data[29]["mst"].add_edge("u", "h", weight=45)
data[29]["mst"].add_edge("u", "r", weight=677)
data[29]["solutions"] = [
    { "edge": ("y", "i"), "weight": 969, "expected": [('a', 'k'), ('a', 'g'), ('l', 'y'), ('l', 'd'), ('g', 'o'), ('g', 'd'), ('b', 'C'), ('j', 'x'), ('c', 'C'), ('c', 't'), ('t', 's'), ('t', 'x'), ('d', 'x'), ('e', 'z'), ('e', 'p'), ('e', 'B'), ('p', 'o'), ('f', 'y'), ('f', 'u'), ('u', 'h'), ('u', 'r'), ('h', 'm'), ('m', 'A'), ('m', 'w'), ('n', 'i'), ('i', 'r'), ('q', 'v'), ('A', 'v')] },
    { "edge": ("j", "B"), "weight": 855, "expected": [('a', 'k'), ('a', 'g'), ('l', 'y'), ('l', 'd'), ('g', 'o'), ('g', 'd'), ('b', 'C'), ('j', 'B'), ('j', 'x'), ('c', 'C'), ('c', 't'), ('t', 's'), ('t', 'x'), ('d', 'x'), ('e', 'z'), ('e', 'p'), ('p', 'o'), ('f', 'y'), ('f', 'u'), ('u', 'h'), ('u', 'r'), ('h', 'm'), ('m', 'A'), ('m', 'w'), ('n', 'i'), ('i', 'r'), ('q', 'v'), ('A', 'v')] },
    { "edge": ("p", "o"), "weight": 313, "expected": [('a', 'k'), ('a', 'g'), ('l', 'y'), ('l', 'd'), ('g', 'o'), ('g', 'd'), ('b', 'C'), ('j', 'x'), ('c', 'C'), ('c', 't'), ('t', 's'), ('t', 'x'), ('d', 'x'), ('e', 'z'), ('e', 'p'), ('e', 'B'), ('p', 'o'), ('f', 'y'), ('f', 'u'), ('u', 'h'), ('u', 'r'), ('h', 'm'), ('m', 'A'), ('m', 'w'), ('n', 'i'), ('i', 'r'), ('q', 'v'), ('A', 'v')] },
    { "edge": ("u", "h"), "weight": 46, "expected": [('a', 'k'), ('a', 'g'), ('l', 'y'), ('l', 'd'), ('g', 'o'), ('g', 'd'), ('b', 'C'), ('j', 'x'), ('c', 'C'), ('c', 't'), ('t', 's'), ('t', 'x'), ('d', 'x'), ('e', 'z'), ('e', 'p'), ('e', 'B'), ('p', 'o'), ('f', 'y'), ('f', 'u'), ('u', 'h'), ('u', 'r'), ('h', 'm'), ('m', 'A'), ('m', 'w'), ('n', 'i'), ('i', 'r'), ('q', 'v'), ('A', 'v')] }
]
# Graph consisting of 29 nodes
data[30]["graph"] = Graph(is_directed=False)
data[30]["graph"].add_edge("A", "C", 1139)
data[30]["graph"].add_edge("B", "n", 383)
data[30]["graph"].add_edge("B", "o", 1415)
data[30]["graph"].add_edge("C", "k", 1448)
data[30]["graph"].add_edge("D", "l", 591)
data[30]["graph"].add_edge("D", "p", 1210)
data[30]["graph"].add_edge("a", "B", 564)
data[30]["graph"].add_edge("a", "c", 1673)
data[30]["graph"].add_edge("a", "t", 200)
data[30]["graph"].add_edge("b", "A", 261)
data[30]["graph"].add_edge("b", "C", 1479)
data[30]["graph"].add_edge("b", "r", 1179)
data[30]["graph"].add_edge("c", "m", 705)
data[30]["graph"].add_edge("c", "n", 1570)
data[30]["graph"].add_edge("d", "D", 285)
data[30]["graph"].add_edge("d", "f", 1395)
data[30]["graph"].add_edge("d", "x", 534)
data[30]["graph"].add_edge("e", "u", 37)
data[30]["graph"].add_edge("e", "y", 323)
data[30]["graph"].add_edge("f", "p", 1016)
data[30]["graph"].add_edge("f", "v", 46)
data[30]["graph"].add_edge("g", "h", 365)
data[30]["graph"].add_edge("g", "z", 147)
data[30]["graph"].add_edge("h", "k", 861)
data[30]["graph"].add_edge("i", "o", 453)
data[30]["graph"].add_edge("i", "s", 450)
data[30]["graph"].add_edge("j", "w", 1250)
data[30]["graph"].add_edge("k", "q", 430)
data[30]["graph"].add_edge("m", "e", 1112)
data[30]["graph"].add_edge("m", "h", 1429)
data[30]["graph"].add_edge("p", "w", 1446)
data[30]["graph"].add_edge("r", "l", 1538)
data[30]["graph"].add_edge("r", "n", 699)
data[30]["graph"].add_edge("s", "j", 1542)
data[30]["graph"].add_edge("s", "l", 1384)
data[30]["graph"].add_edge("t", "A", 1017)
data[30]["graph"].add_edge("t", "x", 1059)
data[30]["graph"].add_edge("u", "g", 1350)
data[30]["graph"].add_edge("u", "q", 1428)
data[30]["graph"].add_edge("v", "o", 1371)
data[30]["graph"].add_edge("v", "w", 867)
data[30]["graph"].add_edge("x", "q", 173)
data[30]["graph"].add_edge("y", "i", 421)
data[30]["graph"].add_edge("y", "z", 393)
data[30]["graph"].add_edge("z", "j", 788)
data[30]["mst"] = Graph(is_directed=False)
data[30]["mst"].add_edge("A", "C", weight=1139)
data[30]["mst"].add_edge("B", "n", weight=383)
data[30]["mst"].add_edge("D", "l", weight=591)
data[30]["mst"].add_edge("D", "p", weight=1210)
data[30]["mst"].add_edge("a", "B", weight=564)
data[30]["mst"].add_edge("a", "t", weight=200)
data[30]["mst"].add_edge("b", "A", weight=261)
data[30]["mst"].add_edge("c", "m", weight=705)
data[30]["mst"].add_edge("d", "D", weight=285)
data[30]["mst"].add_edge("d", "x", weight=534)
data[30]["mst"].add_edge("e", "u", weight=37)
data[30]["mst"].add_edge("e", "y", weight=323)
data[30]["mst"].add_edge("f", "p", weight=1016)
data[30]["mst"].add_edge("f", "v", weight=46)
data[30]["mst"].add_edge("g", "h", weight=365)
data[30]["mst"].add_edge("g", "z", weight=147)
data[30]["mst"].add_edge("h", "k", weight=861)
data[30]["mst"].add_edge("i", "o", weight=453)
data[30]["mst"].add_edge("i", "s", weight=450)
data[30]["mst"].add_edge("k", "q", weight=430)
data[30]["mst"].add_edge("m", "e", weight=1112)
data[30]["mst"].add_edge("r", "n", weight=699)
data[30]["mst"].add_edge("t", "A", weight=1017)
data[30]["mst"].add_edge("t", "x", weight=1059)
data[30]["mst"].add_edge("v", "w", weight=867)
data[30]["mst"].add_edge("x", "q", weight=173)
data[30]["mst"].add_edge("y", "i", weight=421)
data[30]["mst"].add_edge("y", "z", weight=393)
data[30]["mst"].add_edge("z", "j", weight=788)
data[30]["solutions"] = [
    { "edge": ("C", "k"), "weight": 1449, "expected": [('a', 't'), ('a', 'B'), ('B', 'n'), ('c', 'm'), ('t', 'A'), ('t', 'x'), ('b', 'A'), ('r', 'n'), ('A', 'C'), ('m', 'e'), ('d', 'D'), ('d', 'x'), ('D', 'l'), ('D', 'p'), ('f', 'v'), ('f', 'p'), ('x', 'q'), ('e', 'u'), ('e', 'y'), ('y', 'z'), ('y', 'i'), ('v', 'w'), ('g', 'z'), ('g', 'h'), ('z', 'j'), ('h', 'k'), ('k', 'q'), ('i', 's'), ('i', 'o')] },
    { "edge": ("C", "k"), "weight": 36, "expected": [('a', 't'), ('a', 'B'), ('B', 'n'), ('c', 'm'), ('t', 'A'), ('t', 'x'), ('b', 'A'), ('r', 'n'), ('C', 'k'), ('m', 'e'), ('d', 'D'), ('d', 'x'), ('D', 'l'), ('D', 'p'), ('f', 'v'), ('f', 'p'), ('x', 'q'), ('e', 'u'), ('e', 'y'), ('y', 'z'), ('y', 'i'), ('v', 'w'), ('g', 'z'), ('g', 'h'), ('z', 'j'), ('h', 'k'), ('k', 'q'), ('i', 's'), ('i', 'o')] },
    { "edge": ("r", "n"), "weight": 698, "expected": [('a', 't'), ('a', 'B'), ('B', 'n'), ('c', 'm'), ('t', 'A'), ('t', 'x'), ('b', 'A'), ('r', 'n'), ('A', 'C'), ('m', 'e'), ('d', 'D'), ('d', 'x'), ('D', 'l'), ('D', 'p'), ('f', 'v'), ('f', 'p'), ('x', 'q'), ('e', 'u'), ('e', 'y'), ('y', 'z'), ('y', 'i'), ('v', 'w'), ('g', 'z'), ('g', 'h'), ('z', 'j'), ('h', 'k'), ('k', 'q'), ('i', 's'), ('i', 'o')] },
    { "edge": ("e", "y"), "weight": 324, "expected": [('a', 't'), ('a', 'B'), ('B', 'n'), ('c', 'm'), ('t', 'A'), ('t', 'x'), ('b', 'A'), ('r', 'n'), ('A', 'C'), ('m', 'e'), ('d', 'D'), ('d', 'x'), ('D', 'l'), ('D', 'p'), ('f', 'v'), ('f', 'p'), ('x', 'q'), ('e', 'u'), ('e', 'y'), ('y', 'z'), ('y', 'i'), ('v', 'w'), ('g', 'z'), ('g', 'h'), ('z', 'j'), ('h', 'k'), ('k', 'q'), ('i', 's'), ('i', 'o')] }
]
# Graph consisting of 30 nodes
data[31]["graph"] = Graph(is_directed=False)
data[31]["graph"].add_edge("C", "i", 63)
data[31]["graph"].add_edge("C", "l", 336)
data[31]["graph"].add_edge("D", "A", 44)
data[31]["graph"].add_edge("E", "m", 1008)
data[31]["graph"].add_edge("a", "s", 1470)
data[31]["graph"].add_edge("a", "y", 1176)
data[31]["graph"].add_edge("a", "z", 1250)
data[31]["graph"].add_edge("b", "d", 1111)
data[31]["graph"].add_edge("b", "e", 350)
data[31]["graph"].add_edge("b", "t", 402)
data[31]["graph"].add_edge("c", "p", 1271)
data[31]["graph"].add_edge("d", "k", 1360)
data[31]["graph"].add_edge("d", "q", 1321)
data[31]["graph"].add_edge("e", "o", 1344)
data[31]["graph"].add_edge("e", "p", 1311)
data[31]["graph"].add_edge("f", "C", 1431)
data[31]["graph"].add_edge("f", "g", 148)
data[31]["graph"].add_edge("g", "i", 584)
data[31]["graph"].add_edge("h", "r", 1525)
data[31]["graph"].add_edge("i", "E", 194)
data[31]["graph"].add_edge("j", "D", 587)
data[31]["graph"].add_edge("j", "m", 630)
data[31]["graph"].add_edge("k", "h", 923)
data[31]["graph"].add_edge("k", "n", 25)
data[31]["graph"].add_edge("l", "v", 1109)
data[31]["graph"].add_edge("m", "D", 1082)
data[31]["graph"].add_edge("n", "B", 315)
data[31]["graph"].add_edge("o", "B", 1089)
data[31]["graph"].add_edge("o", "E", 1471)
data[31]["graph"].add_edge("p", "f", 686)
data[31]["graph"].add_edge("q", "B", 1479)
data[31]["graph"].add_edge("r", "l", 1541)
data[31]["graph"].add_edge("r", "n", 1603)
data[31]["graph"].add_edge("s", "c", 1401)
data[31]["graph"].add_edge("s", "j", 682)
data[31]["graph"].add_edge("t", "g", 248)
data[31]["graph"].add_edge("t", "h", 672)
data[31]["graph"].add_edge("u", "w", 1256)
data[31]["graph"].add_edge("u", "x", 104)
data[31]["graph"].add_edge("v", "w", 162)
data[31]["graph"].add_edge("w", "x", 639)
data[31]["graph"].add_edge("x", "A", 1626)
data[31]["graph"].add_edge("y", "c", 1114)
data[31]["graph"].add_edge("y", "v", 435)
data[31]["graph"].add_edge("z", "q", 585)
data[31]["graph"].add_edge("z", "u", 1155)
data[31]["mst"] = Graph(is_directed=False)
data[31]["mst"].add_edge("C", "i", weight=63)
data[31]["mst"].add_edge("C", "l", weight=336)
data[31]["mst"].add_edge("D", "A", weight=44)
data[31]["mst"].add_edge("E", "m", weight=1008)
data[31]["mst"].add_edge("a", "y", weight=1176)
data[31]["mst"].add_edge("b", "d", weight=1111)
data[31]["mst"].add_edge("b", "e", weight=350)
data[31]["mst"].add_edge("b", "t", weight=402)
data[31]["mst"].add_edge("f", "g", weight=148)
data[31]["mst"].add_edge("g", "i", weight=584)
data[31]["mst"].add_edge("h", "r", weight=1525)
data[31]["mst"].add_edge("i", "E", weight=194)
data[31]["mst"].add_edge("j", "D", weight=587)
data[31]["mst"].add_edge("j", "m", weight=630)
data[31]["mst"].add_edge("k", "h", weight=923)
data[31]["mst"].add_edge("k", "n", weight=25)
data[31]["mst"].add_edge("l", "v", weight=1109)
data[31]["mst"].add_edge("n", "B", weight=315)
data[31]["mst"].add_edge("o", "B", weight=1089)
data[31]["mst"].add_edge("p", "f", weight=686)
data[31]["mst"].add_edge("s", "j", weight=682)
data[31]["mst"].add_edge("t", "g", weight=248)
data[31]["mst"].add_edge("t", "h", weight=672)
data[31]["mst"].add_edge("u", "x", weight=104)
data[31]["mst"].add_edge("v", "w", weight=162)
data[31]["mst"].add_edge("w", "x", weight=639)
data[31]["mst"].add_edge("y", "c", weight=1114)
data[31]["mst"].add_edge("y", "v", weight=435)
data[31]["mst"].add_edge("z", "q", weight=585)
data[31]["mst"].add_edge("z", "u", weight=1155)
data[31]["solutions"] = [
    { "edge": ("a", "s"), "weight": 1472, "expected": [('a', 'y'), ('y', 'v'), ('y', 'c'), ('z', 'q'), ('z', 'u'), ('s', 'j'), ('b', 'e'), ('b', 't'), ('b', 'd'), ('t', 'g'), ('t', 'h'), ('p', 'f'), ('k', 'n'), ('k', 'h'), ('o', 'B'), ('f', 'g'), ('C', 'i'), ('C', 'l'), ('g', 'i'), ('i', 'E'), ('h', 'r'), ('E', 'm'), ('j', 'D'), ('j', 'm'), ('D', 'A'), ('n', 'B'), ('l', 'v'), ('v', 'w'), ('u', 'x'), ('w', 'x')] },
    { "edge": ("x", "A"), "weight": 335, "expected": [('a', 'y'), ('y', 'v'), ('y', 'c'), ('z', 'q'), ('z', 'u'), ('s', 'j'), ('b', 'e'), ('b', 't'), ('b', 'd'), ('t', 'g'), ('t', 'h'), ('p', 'f'), ('k', 'n'), ('k', 'h'), ('o', 'B'), ('f', 'g'), ('C', 'i'), ('C', 'l'), ('g', 'i'), ('i', 'E'), ('h', 'r'), ('E', 'm'), ('j', 'D'), ('j', 'm'), ('D', 'A'), ('n', 'B'), ('v', 'w'), ('u', 'x'), ('w', 'x'), ('x', 'A')] },
    { "edge": ("t", "g"), "weight": 247, "expected": [('a', 'y'), ('y', 'v'), ('y', 'c'), ('z', 'q'), ('z', 'u'), ('s', 'j'), ('b', 'e'), ('b', 't'), ('b', 'd'), ('t', 'g'), ('t', 'h'), ('p', 'f'), ('k', 'n'), ('k', 'h'), ('o', 'B'), ('f', 'g'), ('C', 'i'), ('C', 'l'), ('g', 'i'), ('i', 'E'), ('h', 'r'), ('E', 'm'), ('j', 'D'), ('j', 'm'), ('D', 'A'), ('n', 'B'), ('l', 'v'), ('v', 'w'), ('u', 'x'), ('w', 'x')] },
    { "edge": ("v", "w"), "weight": 163, "expected": [('a', 'y'), ('y', 'v'), ('y', 'c'), ('z', 'q'), ('z', 'u'), ('s', 'j'), ('b', 'e'), ('b', 't'), ('b', 'd'), ('t', 'g'), ('t', 'h'), ('p', 'f'), ('k', 'n'), ('k', 'h'), ('o', 'B'), ('f', 'g'), ('C', 'i'), ('C', 'l'), ('g', 'i'), ('i', 'E'), ('h', 'r'), ('E', 'm'), ('j', 'D'), ('j', 'm'), ('D', 'A'), ('n', 'B'), ('l', 'v'), ('v', 'w'), ('u', 'x'), ('w', 'x')] }
]
# Graph consisting of 31 nodes
data[32]["graph"] = Graph(is_directed=False)
data[32]["graph"].add_edge("A", "m", 318)
data[32]["graph"].add_edge("A", "s", 286)
data[32]["graph"].add_edge("B", "e", 1647)
data[32]["graph"].add_edge("B", "f", 272)
data[32]["graph"].add_edge("C", "n", 1637)
data[32]["graph"].add_edge("C", "o", 181)
data[32]["graph"].add_edge("D", "d", 536)
data[32]["graph"].add_edge("D", "n", 1574)
data[32]["graph"].add_edge("E", "F", 1058)
data[32]["graph"].add_edge("E", "z", 897)
data[32]["graph"].add_edge("F", "z", 1315)
data[32]["graph"].add_edge("a", "A", 492)
data[32]["graph"].add_edge("a", "v", 1062)
data[32]["graph"].add_edge("a", "y", 1603)
data[32]["graph"].add_edge("b", "B", 1381)
data[32]["graph"].add_edge("b", "g", 1364)
data[32]["graph"].add_edge("c", "D", 698)
data[32]["graph"].add_edge("c", "i", 810)
data[32]["graph"].add_edge("d", "C", 261)
data[32]["graph"].add_edge("d", "l", 120)
data[32]["graph"].add_edge("e", "x", 1660)
data[32]["graph"].add_edge("f", "u", 764)
data[32]["graph"].add_edge("g", "c", 1201)
data[32]["graph"].add_edge("g", "j", 933)
data[32]["graph"].add_edge("h", "s", 1046)
data[32]["graph"].add_edge("i", "f", 178)
data[32]["graph"].add_edge("i", "k", 1351)
data[32]["graph"].add_edge("j", "h", 675)
data[32]["graph"].add_edge("j", "q", 262)
data[32]["graph"].add_edge("k", "o", 1332)
data[32]["graph"].add_edge("l", "E", 639)
data[32]["graph"].add_edge("l", "m", 1640)
data[32]["graph"].add_edge("m", "p", 880)
data[32]["graph"].add_edge("p", "t", 705)
data[32]["graph"].add_edge("r", "F", 572)
data[32]["graph"].add_edge("r", "w", 26)
data[32]["graph"].add_edge("s", "o", 353)
data[32]["graph"].add_edge("t", "r", 241)
data[32]["graph"].add_edge("t", "w", 1452)
data[32]["graph"].add_edge("u", "h", 796)
data[32]["graph"].add_edge("u", "n", 1003)
data[32]["graph"].add_edge("v", "b", 738)
data[32]["graph"].add_edge("v", "e", 1545)
data[32]["graph"].add_edge("w", "z", 12)
data[32]["graph"].add_edge("x", "k", 1304)
data[32]["graph"].add_edge("x", "q", 1092)
data[32]["graph"].add_edge("y", "p", 804)
data[32]["graph"].add_edge("y", "q", 250)
data[32]["mst"] = Graph(is_directed=False)
data[32]["mst"].add_edge("A", "m", weight=318)
data[32]["mst"].add_edge("A", "s", weight=286)
data[32]["mst"].add_edge("B", "f", weight=272)
data[32]["mst"].add_edge("C", "o", weight=181)
data[32]["mst"].add_edge("D", "d", weight=536)
data[32]["mst"].add_edge("a", "A", weight=492)
data[32]["mst"].add_edge("a", "v", weight=1062)
data[32]["mst"].add_edge("c", "D", weight=698)
data[32]["mst"].add_edge("c", "i", weight=810)
data[32]["mst"].add_edge("d", "C", weight=261)
data[32]["mst"].add_edge("d", "l", weight=120)
data[32]["mst"].add_edge("f", "u", weight=764)
data[32]["mst"].add_edge("g", "j", weight=933)
data[32]["mst"].add_edge("i", "f", weight=178)
data[32]["mst"].add_edge("j", "h", weight=675)
data[32]["mst"].add_edge("j", "q", weight=262)
data[32]["mst"].add_edge("l", "E", weight=639)
data[32]["mst"].add_edge("p", "t", weight=705)
data[32]["mst"].add_edge("r", "F", weight=572)
data[32]["mst"].add_edge("r", "w", weight=26)
data[32]["mst"].add_edge("s", "o", weight=353)
data[32]["mst"].add_edge("t", "r", weight=241)
data[32]["mst"].add_edge("u", "h", weight=796)
data[32]["mst"].add_edge("u", "n", weight=1003)
data[32]["mst"].add_edge("v", "b", weight=738)
data[32]["mst"].add_edge("v", "e", weight=1545)
data[32]["mst"].add_edge("w", "z", weight=12)
data[32]["mst"].add_edge("x", "k", weight=1304)
data[32]["mst"].add_edge("x", "q", weight=1092)
data[32]["mst"].add_edge("y", "p", weight=804)
data[32]["mst"].add_edge("y", "q", weight=250)
data[32]["solutions"] = [
    { "edge": ("e", "x"), "weight": 1661, "expected": [('a', 'A'), ('a', 'v'), ('y', 'q'), ('y', 'p'), ('A', 's'), ('A', 'm'), ('v', 'b'), ('v', 'e'), ('B', 'f'), ('g', 'j'), ('c', 'D'), ('c', 'i'), ('i', 'f'), ('D', 'd'), ('d', 'l'), ('d', 'C'), ('l', 'E'), ('C', 'o'), ('x', 'q'), ('x', 'k'), ('f', 'u'), ('u', 'h'), ('u', 'n'), ('j', 'q'), ('j', 'h'), ('s', 'o'), ('p', 't'), ('t', 'r'), ('r', 'w'), ('r', 'F'), ('w', 'z')] },
    { "edge": ("D", "n"), "weight": 240, "expected": [('a', 'A'), ('a', 'v'), ('y', 'q'), ('y', 'p'), ('A', 's'), ('A', 'm'), ('v', 'b'), ('v', 'e'), ('B', 'f'), ('g', 'j'), ('c', 'D'), ('c', 'i'), ('i', 'f'), ('D', 'n'), ('D', 'd'), ('d', 'l'), ('d', 'C'), ('l', 'E'), ('C', 'o'), ('x', 'q'), ('x', 'k'), ('f', 'u'), ('u', 'h'), ('j', 'q'), ('j', 'h'), ('s', 'o'), ('p', 't'), ('t', 'r'), ('r', 'w'), ('r', 'F'), ('w', 'z')] },
    { "edge": ("x", "q"), "weight": 1091, "expected": [('a', 'A'), ('a', 'v'), ('y', 'q'), ('y', 'p'), ('A', 's'), ('A', 'm'), ('v', 'b'), ('v', 'e'), ('B', 'f'), ('g', 'j'), ('c', 'D'), ('c', 'i'), ('i', 'f'), ('D', 'd'), ('d', 'l'), ('d', 'C'), ('l', 'E'), ('C', 'o'), ('x', 'q'), ('x', 'k'), ('f', 'u'), ('u', 'h'), ('u', 'n'), ('j', 'q'), ('j', 'h'), ('s', 'o'), ('p', 't'), ('t', 'r'), ('r', 'w'), ('r', 'F'), ('w', 'z')] },
    { "edge": ("B", "f"), "weight": 273, "expected": [('a', 'A'), ('a', 'v'), ('y', 'q'), ('y', 'p'), ('A', 's'), ('A', 'm'), ('v', 'b'), ('v', 'e'), ('B', 'f'), ('g', 'j'), ('c', 'D'), ('c', 'i'), ('i', 'f'), ('D', 'd'), ('d', 'l'), ('d', 'C'), ('l', 'E'), ('C', 'o'), ('x', 'q'), ('x', 'k'), ('f', 'u'), ('u', 'h'), ('u', 'n'), ('j', 'q'), ('j', 'h'), ('s', 'o'), ('p', 't'), ('t', 'r'), ('r', 'w'), ('r', 'F'), ('w', 'z')] }
]
# Graph consisting of 32 nodes
data[33]["graph"] = Graph(is_directed=False)
data[33]["graph"].add_edge("A", "E", 1247)
data[33]["graph"].add_edge("A", "o", 1119)
data[33]["graph"].add_edge("B", "h", 293)
data[33]["graph"].add_edge("B", "j", 709)
data[33]["graph"].add_edge("D", "t", 317)
data[33]["graph"].add_edge("D", "x", 27)
data[33]["graph"].add_edge("E", "p", 1374)
data[33]["graph"].add_edge("G", "t", 1562)
data[33]["graph"].add_edge("a", "d", 503)
data[33]["graph"].add_edge("a", "m", 618)
data[33]["graph"].add_edge("a", "w", 392)
data[33]["graph"].add_edge("b", "A", 464)
data[33]["graph"].add_edge("b", "i", 1225)
data[33]["graph"].add_edge("b", "y", 1094)
data[33]["graph"].add_edge("c", "D", 393)
data[33]["graph"].add_edge("c", "e", 1434)
data[33]["graph"].add_edge("c", "n", 497)
data[33]["graph"].add_edge("d", "s", 25)
data[33]["graph"].add_edge("d", "z", 603)
data[33]["graph"].add_edge("e", "B", 555)
data[33]["graph"].add_edge("e", "f", 867)
data[33]["graph"].add_edge("f", "v", 301)
data[33]["graph"].add_edge("g", "F", 1657)
data[33]["graph"].add_edge("g", "h", 642)
data[33]["graph"].add_edge("i", "j", 1233)
data[33]["graph"].add_edge("i", "x", 527)
data[33]["graph"].add_edge("k", "l", 615)
data[33]["graph"].add_edge("k", "u", 104)
data[33]["graph"].add_edge("l", "E", 57)
data[33]["graph"].add_edge("l", "o", 191)
data[33]["graph"].add_edge("m", "F", 678)
data[33]["graph"].add_edge("m", "u", 1250)
data[33]["graph"].add_edge("n", "g", 1055)
data[33]["graph"].add_edge("n", "j", 1164)
data[33]["graph"].add_edge("p", "q", 849)
data[33]["graph"].add_edge("r", "C", 1428)
data[33]["graph"].add_edge("r", "G", 680)
data[33]["graph"].add_edge("s", "F", 1669)
data[33]["graph"].add_edge("s", "f", 634)
data[33]["graph"].add_edge("u", "q", 269)
data[33]["graph"].add_edge("v", "C", 1663)
data[33]["graph"].add_edge("v", "t", 1207)
data[33]["graph"].add_edge("w", "k", 542)
data[33]["graph"].add_edge("w", "r", 945)
data[33]["graph"].add_edge("x", "C", 1189)
data[33]["graph"].add_edge("y", "o", 91)
data[33]["graph"].add_edge("y", "p", 677)
data[33]["graph"].add_edge("z", "h", 405)
data[33]["graph"].add_edge("z", "q", 1570)
data[33]["mst"] = Graph(is_directed=False)
data[33]["mst"].add_edge("B", "h", weight=293)
data[33]["mst"].add_edge("B", "j", weight=709)
data[33]["mst"].add_edge("D", "t", weight=317)
data[33]["mst"].add_edge("D", "x", weight=27)
data[33]["mst"].add_edge("a", "d", weight=503)
data[33]["mst"].add_edge("a", "m", weight=618)
data[33]["mst"].add_edge("a", "w", weight=392)
data[33]["mst"].add_edge("b", "A", weight=464)
data[33]["mst"].add_edge("b", "y", weight=1094)
data[33]["mst"].add_edge("c", "D", weight=393)
data[33]["mst"].add_edge("c", "n", weight=497)
data[33]["mst"].add_edge("d", "s", weight=25)
data[33]["mst"].add_edge("d", "z", weight=603)
data[33]["mst"].add_edge("e", "B", weight=555)
data[33]["mst"].add_edge("f", "v", weight=301)
data[33]["mst"].add_edge("g", "h", weight=642)
data[33]["mst"].add_edge("i", "x", weight=527)
data[33]["mst"].add_edge("k", "l", weight=615)
data[33]["mst"].add_edge("k", "u", weight=104)
data[33]["mst"].add_edge("l", "E", weight=57)
data[33]["mst"].add_edge("l", "o", weight=191)
data[33]["mst"].add_edge("m", "F", weight=678)
data[33]["mst"].add_edge("n", "g", weight=1055)
data[33]["mst"].add_edge("r", "G", weight=680)
data[33]["mst"].add_edge("s", "f", weight=634)
data[33]["mst"].add_edge("u", "q", weight=269)
data[33]["mst"].add_edge("w", "k", weight=542)
data[33]["mst"].add_edge("w", "r", weight=945)
data[33]["mst"].add_edge("x", "C", weight=1189)
data[33]["mst"].add_edge("y", "o", weight=91)
data[33]["mst"].add_edge("y", "p", weight=677)
data[33]["mst"].add_edge("z", "h", weight=405)
data[33]["solutions"] = [
    { "edge": ("A", "o"), "weight": 1120, "expected": [('a', 'w'), ('a', 'd'), ('a', 'm'), ('d', 's'), ('d', 'z'), ('m', 'F'), ('w', 'k'), ('w', 'r'), ('b', 'A'), ('b', 'y'), ('i', 'x'), ('y', 'o'), ('y', 'p'), ('c', 'D'), ('c', 'n'), ('D', 'x'), ('D', 't'), ('e', 'B'), ('n', 'g'), ('z', 'h'), ('s', 'f'), ('B', 'h'), ('B', 'j'), ('f', 'v'), ('g', 'h'), ('x', 'C'), ('k', 'u'), ('k', 'l'), ('l', 'E'), ('l', 'o'), ('u', 'q'), ('r', 'G')] },
    { "edge": ("A", "E"), "weight": 56, "expected": [('a', 'w'), ('a', 'd'), ('a', 'm'), ('d', 's'), ('d', 'z'), ('m', 'F'), ('w', 'k'), ('w', 'r'), ('b', 'A'), ('i', 'x'), ('y', 'o'), ('y', 'p'), ('A', 'E'), ('c', 'D'), ('c', 'n'), ('D', 'x'), ('D', 't'), ('e', 'B'), ('n', 'g'), ('z', 'h'), ('s', 'f'), ('B', 'h'), ('B', 'j'), ('f', 'v'), ('g', 'h'), ('x', 'C'), ('k', 'u'), ('k', 'l'), ('l', 'E'), ('l', 'o'), ('u', 'q'), ('r', 'G')] },
    { "edge": ("z", "h"), "weight": 404, "expected": [('a', 'w'), ('a', 'd'), ('a', 'm'), ('d', 's'), ('d', 'z'), ('m', 'F'), ('w', 'k'), ('w', 'r'), ('b', 'A'), ('b', 'y'), ('i', 'x'), ('y', 'o'), ('y', 'p'), ('c', 'D'), ('c', 'n'), ('D', 'x'), ('D', 't'), ('e', 'B'), ('n', 'g'), ('z', 'h'), ('s', 'f'), ('B', 'h'), ('B', 'j'), ('f', 'v'), ('g', 'h'), ('x', 'C'), ('k', 'u'), ('k', 'l'), ('l', 'E'), ('l', 'o'), ('u', 'q'), ('r', 'G')] },
    { "edge": ("s", "f"), "weight": 635, "expected": [('a', 'w'), ('a', 'd'), ('a', 'm'), ('d', 's'), ('d', 'z'), ('m', 'F'), ('w', 'k'), ('w', 'r'), ('b', 'A'), ('b', 'y'), ('i', 'x'), ('y', 'o'), ('y', 'p'), ('c', 'D'), ('c', 'n'), ('D', 'x'), ('D', 't'), ('e', 'B'), ('n', 'g'), ('z', 'h'), ('s', 'f'), ('B', 'h'), ('B', 'j'), ('f', 'v'), ('g', 'h'), ('x', 'C'), ('k', 'u'), ('k', 'l'), ('l', 'E'), ('l', 'o'), ('u', 'q'), ('r', 'G')] }
]
# Graph consisting of 33 nodes
data[34]["graph"] = Graph(is_directed=False)
data[34]["graph"].add_edge("A", "s", 1193)
data[34]["graph"].add_edge("B", "g", 804)
data[34]["graph"].add_edge("C", "x", 823)
data[34]["graph"].add_edge("E", "i", 1130)
data[34]["graph"].add_edge("E", "v", 1509)
data[34]["graph"].add_edge("G", "o", 16)
data[34]["graph"].add_edge("H", "D", 1140)
data[34]["graph"].add_edge("H", "w", 1601)
data[34]["graph"].add_edge("a", "b", 764)
data[34]["graph"].add_edge("a", "d", 650)
data[34]["graph"].add_edge("a", "m", 1084)
data[34]["graph"].add_edge("b", "h", 1638)
data[34]["graph"].add_edge("b", "r", 1257)
data[34]["graph"].add_edge("c", "B", 907)
data[34]["graph"].add_edge("c", "E", 1202)
data[34]["graph"].add_edge("c", "n", 112)
data[34]["graph"].add_edge("d", "B", 385)
data[34]["graph"].add_edge("d", "H", 262)
data[34]["graph"].add_edge("e", "q", 905)
data[34]["graph"].add_edge("e", "t", 1434)
data[34]["graph"].add_edge("f", "j", 636)
data[34]["graph"].add_edge("f", "p", 1466)
data[34]["graph"].add_edge("f", "u", 1643)
data[34]["graph"].add_edge("g", "A", 453)
data[34]["graph"].add_edge("h", "A", 1138)
data[34]["graph"].add_edge("h", "p", 1355)
data[34]["graph"].add_edge("j", "i", 539)
data[34]["graph"].add_edge("j", "u", 1408)
data[34]["graph"].add_edge("k", "G", 1404)
data[34]["graph"].add_edge("l", "w", 1615)
data[34]["graph"].add_edge("l", "y", 758)
data[34]["graph"].add_edge("l", "z", 1675)
data[34]["graph"].add_edge("m", "e", 1524)
data[34]["graph"].add_edge("m", "i", 1080)
data[34]["graph"].add_edge("n", "g", 730)
data[34]["graph"].add_edge("n", "k", 78)
data[34]["graph"].add_edge("p", "y", 281)
data[34]["graph"].add_edge("q", "G", 460)
data[34]["graph"].add_edge("r", "o", 967)
data[34]["graph"].add_edge("r", "q", 303)
data[34]["graph"].add_edge("s", "C", 1599)
data[34]["graph"].add_edge("t", "o", 853)
data[34]["graph"].add_edge("t", "s", 832)
data[34]["graph"].add_edge("u", "k", 913)
data[34]["graph"].add_edge("v", "F", 28)
data[34]["graph"].add_edge("v", "x", 1522)
data[34]["graph"].add_edge("w", "F", 1441)
data[34]["graph"].add_edge("x", "D", 142)
data[34]["graph"].add_edge("y", "F", 1352)
data[34]["graph"].add_edge("z", "C", 1351)
data[34]["graph"].add_edge("z", "D", 1179)
data[34]["mst"] = Graph(is_directed=False)
data[34]["mst"].add_edge("A", "s", weight=1193)
data[34]["mst"].add_edge("B", "g", weight=804)
data[34]["mst"].add_edge("C", "x", weight=823)
data[34]["mst"].add_edge("E", "i", weight=1130)
data[34]["mst"].add_edge("G", "o", weight=16)
data[34]["mst"].add_edge("H", "D", weight=1140)
data[34]["mst"].add_edge("a", "b", weight=764)
data[34]["mst"].add_edge("a", "d", weight=650)
data[34]["mst"].add_edge("a", "m", weight=1084)
data[34]["mst"].add_edge("c", "n", weight=112)
data[34]["mst"].add_edge("d", "B", weight=385)
data[34]["mst"].add_edge("d", "H", weight=262)
data[34]["mst"].add_edge("e", "q", weight=905)
data[34]["mst"].add_edge("f", "j", weight=636)
data[34]["mst"].add_edge("g", "A", weight=453)
data[34]["mst"].add_edge("h", "A", weight=1138)
data[34]["mst"].add_edge("h", "p", weight=1355)
data[34]["mst"].add_edge("j", "i", weight=539)
data[34]["mst"].add_edge("l", "y", weight=758)
data[34]["mst"].add_edge("m", "i", weight=1080)
data[34]["mst"].add_edge("n", "g", weight=730)
data[34]["mst"].add_edge("n", "k", weight=78)
data[34]["mst"].add_edge("p", "y", weight=281)
data[34]["mst"].add_edge("q", "G", weight=460)
data[34]["mst"].add_edge("r", "q", weight=303)
data[34]["mst"].add_edge("t", "o", weight=853)
data[34]["mst"].add_edge("t", "s", weight=832)
data[34]["mst"].add_edge("u", "k", weight=913)
data[34]["mst"].add_edge("v", "F", weight=28)
data[34]["mst"].add_edge("w", "F", weight=1441)
data[34]["mst"].add_edge("x", "D", weight=142)
data[34]["mst"].add_edge("y", "F", weight=1352)
data[34]["mst"].add_edge("z", "D", weight=1179)
data[34]["solutions"] = [
    { "edge": ("c", "B"), "weight": 908, "expected": [('a', 'd'), ('a', 'b'), ('a', 'm'), ('d', 'H'), ('d', 'B'), ('m', 'i'), ('r', 'q'), ('h', 'A'), ('h', 'p'), ('c', 'n'), ('B', 'g'), ('n', 'k'), ('n', 'g'), ('E', 'i'), ('H', 'D'), ('e', 'q'), ('q', 'G'), ('t', 's'), ('t', 'o'), ('f', 'j'), ('j', 'i'), ('u', 'k'), ('p', 'y'), ('g', 'A'), ('A', 's'), ('G', 'o'), ('l', 'y'), ('y', 'F'), ('z', 'D'), ('w', 'F'), ('C', 'x'), ('v', 'F'), ('x', 'D')] },
    { "edge": ("s", "C"), "weight": 912, "expected": [('a', 'd'), ('a', 'b'), ('a', 'm'), ('d', 'H'), ('d', 'B'), ('m', 'i'), ('r', 'q'), ('h', 'A'), ('h', 'p'), ('c', 'n'), ('B', 'g'), ('n', 'k'), ('n', 'g'), ('E', 'i'), ('H', 'D'), ('e', 'q'), ('q', 'G'), ('t', 's'), ('t', 'o'), ('f', 'j'), ('j', 'i'), ('u', 'k'), ('p', 'y'), ('g', 'A'), ('G', 'o'), ('l', 'y'), ('y', 'F'), ('z', 'D'), ('w', 'F'), ('s', 'C'), ('C', 'x'), ('v', 'F'), ('x', 'D')] },
    { "edge": ("v", "F"), "weight": 27, "expected": [('a', 'd'), ('a', 'b'), ('a', 'm'), ('d', 'H'), ('d', 'B'), ('m', 'i'), ('r', 'q'), ('h', 'A'), ('h', 'p'), ('c', 'n'), ('B', 'g'), ('n', 'k'), ('n', 'g'), ('E', 'i'), ('H', 'D'), ('e', 'q'), ('q', 'G'), ('t', 's'), ('t', 'o'), ('f', 'j'), ('j', 'i'), ('u', 'k'), ('p', 'y'), ('g', 'A'), ('A', 's'), ('G', 'o'), ('l', 'y'), ('y', 'F'), ('z', 'D'), ('w', 'F'), ('C', 'x'), ('v', 'F'), ('x', 'D')] },
    { "edge": ("a", "m"), "weight": 1085, "expected": [('a', 'd'), ('a', 'b'), ('a', 'm'), ('d', 'H'), ('d', 'B'), ('m', 'i'), ('r', 'q'), ('h', 'A'), ('h', 'p'), ('c', 'n'), ('B', 'g'), ('n', 'k'), ('n', 'g'), ('E', 'i'), ('H', 'D'), ('e', 'q'), ('q', 'G'), ('t', 's'), ('t', 'o'), ('f', 'j'), ('j', 'i'), ('u', 'k'), ('p', 'y'), ('g', 'A'), ('A', 's'), ('G', 'o'), ('l', 'y'), ('y', 'F'), ('z', 'D'), ('w', 'F'), ('C', 'x'), ('v', 'F'), ('x', 'D')] }
]
# Graph consisting of 34 nodes
data[35]["graph"] = Graph(is_directed=False)
data[35]["graph"].add_edge("A", "I", 1507)
data[35]["graph"].add_edge("B", "g", 1028)
data[35]["graph"].add_edge("B", "i", 1502)
data[35]["graph"].add_edge("C", "A", 997)
data[35]["graph"].add_edge("D", "q", 225)
data[35]["graph"].add_edge("D", "x", 671)
data[35]["graph"].add_edge("E", "x", 108)
data[35]["graph"].add_edge("F", "m", 1622)
data[35]["graph"].add_edge("F", "y", 1436)
data[35]["graph"].add_edge("G", "n", 829)
data[35]["graph"].add_edge("G", "o", 217)
data[35]["graph"].add_edge("I", "y", 1318)
data[35]["graph"].add_edge("a", "B", 229)
data[35]["graph"].add_edge("a", "e", 1461)
data[35]["graph"].add_edge("a", "l", 1493)
data[35]["graph"].add_edge("b", "C", 643)
data[35]["graph"].add_edge("b", "h", 817)
data[35]["graph"].add_edge("b", "v", 80)
data[35]["graph"].add_edge("c", "t", 901)
data[35]["graph"].add_edge("d", "D", 1089)
data[35]["graph"].add_edge("d", "g", 798)
data[35]["graph"].add_edge("d", "j", 992)
data[35]["graph"].add_edge("e", "F", 127)
data[35]["graph"].add_edge("e", "c", 234)
data[35]["graph"].add_edge("f", "G", 105)
data[35]["graph"].add_edge("f", "n", 558)
data[35]["graph"].add_edge("f", "u", 593)
data[35]["graph"].add_edge("g", "r", 883)
data[35]["graph"].add_edge("h", "E", 1602)
data[35]["graph"].add_edge("h", "n", 339)
data[35]["graph"].add_edge("i", "s", 322)
data[35]["graph"].add_edge("j", "w", 1607)
data[35]["graph"].add_edge("k", "o", 1416)
data[35]["graph"].add_edge("k", "p", 950)
data[35]["graph"].add_edge("k", "x", 1078)
data[35]["graph"].add_edge("l", "H", 594)
data[35]["graph"].add_edge("l", "t", 1297)
data[35]["graph"].add_edge("m", "z", 175)
data[35]["graph"].add_edge("o", "H", 1449)
data[35]["graph"].add_edge("p", "H", 1099)
data[35]["graph"].add_edge("q", "A", 1636)
data[35]["graph"].add_edge("r", "E", 866)
data[35]["graph"].add_edge("r", "i", 1234)
data[35]["graph"].add_edge("s", "w", 281)
data[35]["graph"].add_edge("t", "m", 345)
data[35]["graph"].add_edge("u", "I", 494)
data[35]["graph"].add_edge("u", "s", 763)
data[35]["graph"].add_edge("v", "c", 716)
data[35]["graph"].add_edge("v", "j", 449)
data[35]["graph"].add_edge("w", "p", 1232)
data[35]["graph"].add_edge("z", "q", 1640)
data[35]["graph"].add_edge("z", "y", 1307)
data[35]["mst"] = Graph(is_directed=False)
data[35]["mst"].add_edge("B", "g", weight=1028)
data[35]["mst"].add_edge("C", "A", weight=997)
data[35]["mst"].add_edge("D", "q", weight=225)
data[35]["mst"].add_edge("D", "x", weight=671)
data[35]["mst"].add_edge("E", "x", weight=108)
data[35]["mst"].add_edge("G", "o", weight=217)
data[35]["mst"].add_edge("a", "B", weight=229)
data[35]["mst"].add_edge("b", "C", weight=643)
data[35]["mst"].add_edge("b", "h", weight=817)
data[35]["mst"].add_edge("b", "v", weight=80)
data[35]["mst"].add_edge("c", "t", weight=901)
data[35]["mst"].add_edge("d", "g", weight=798)
data[35]["mst"].add_edge("d", "j", weight=992)
data[35]["mst"].add_edge("e", "F", weight=127)
data[35]["mst"].add_edge("e", "c", weight=234)
data[35]["mst"].add_edge("f", "G", weight=105)
data[35]["mst"].add_edge("f", "n", weight=558)
data[35]["mst"].add_edge("f", "u", weight=593)
data[35]["mst"].add_edge("g", "r", weight=883)
data[35]["mst"].add_edge("h", "n", weight=339)
data[35]["mst"].add_edge("i", "s", weight=322)
data[35]["mst"].add_edge("k", "p", weight=950)
data[35]["mst"].add_edge("k", "x", weight=1078)
data[35]["mst"].add_edge("l", "H", weight=594)
data[35]["mst"].add_edge("m", "z", weight=175)
data[35]["mst"].add_edge("p", "H", weight=1099)
data[35]["mst"].add_edge("r", "E", weight=866)
data[35]["mst"].add_edge("s", "w", weight=281)
data[35]["mst"].add_edge("t", "m", weight=345)
data[35]["mst"].add_edge("u", "I", weight=494)
data[35]["mst"].add_edge("u", "s", weight=763)
data[35]["mst"].add_edge("v", "c", weight=716)
data[35]["mst"].add_edge("v", "j", weight=449)
data[35]["mst"].add_edge("z", "y", weight=1307)
data[35]["solutions"] = [
    { "edge": ("h", "E"), "weight": 1603, "expected": [('a', 'B'), ('B', 'g'), ('l', 'H'), ('e', 'F'), ('e', 'c'), ('b', 'v'), ('b', 'C'), ('b', 'h'), ('C', 'A'), ('v', 'j'), ('v', 'c'), ('h', 'n'), ('c', 't'), ('t', 'm'), ('d', 'g'), ('d', 'j'), ('D', 'q'), ('D', 'x'), ('g', 'r'), ('f', 'G'), ('f', 'n'), ('f', 'u'), ('G', 'o'), ('u', 'I'), ('u', 's'), ('r', 'E'), ('E', 'x'), ('i', 's'), ('s', 'w'), ('k', 'p'), ('k', 'x'), ('p', 'H'), ('m', 'z'), ('z', 'y')] },
    { "edge": ("B", "i"), "weight": 216, "expected": [('a', 'B'), ('B', 'i'), ('l', 'H'), ('e', 'F'), ('e', 'c'), ('b', 'v'), ('b', 'C'), ('b', 'h'), ('C', 'A'), ('v', 'j'), ('v', 'c'), ('h', 'n'), ('c', 't'), ('t', 'm'), ('d', 'g'), ('d', 'j'), ('D', 'q'), ('D', 'x'), ('g', 'r'), ('f', 'G'), ('f', 'n'), ('f', 'u'), ('G', 'o'), ('u', 'I'), ('u', 's'), ('r', 'E'), ('E', 'x'), ('i', 's'), ('s', 'w'), ('k', 'p'), ('k', 'x'), ('p', 'H'), ('m', 'z'), ('z', 'y')] },
    { "edge": ("v", "c"), "weight": 715, "expected": [('a', 'B'), ('B', 'g'), ('l', 'H'), ('e', 'F'), ('e', 'c'), ('b', 'v'), ('b', 'C'), ('b', 'h'), ('C', 'A'), ('v', 'j'), ('v', 'c'), ('h', 'n'), ('c', 't'), ('t', 'm'), ('d', 'g'), ('d', 'j'), ('D', 'q'), ('D', 'x'), ('g', 'r'), ('f', 'G'), ('f', 'n'), ('f', 'u'), ('G', 'o'), ('u', 'I'), ('u', 's'), ('r', 'E'), ('E', 'x'), ('i', 's'), ('s', 'w'), ('k', 'p'), ('k', 'x'), ('p', 'H'), ('m', 'z'), ('z', 'y')] },
    { "edge": ("f", "u"), "weight": 595, "expected": [('a', 'B'), ('B', 'g'), ('l', 'H'), ('e', 'F'), ('e', 'c'), ('b', 'v'), ('b', 'C'), ('b', 'h'), ('C', 'A'), ('v', 'j'), ('v', 'c'), ('h', 'n'), ('c', 't'), ('t', 'm'), ('d', 'g'), ('d', 'j'), ('D', 'q'), ('D', 'x'), ('g', 'r'), ('f', 'G'), ('f', 'n'), ('f', 'u'), ('G', 'o'), ('u', 'I'), ('u', 's'), ('r', 'E'), ('E', 'x'), ('i', 's'), ('s', 'w'), ('k', 'p'), ('k', 'x'), ('p', 'H'), ('m', 'z'), ('z', 'y')] }
]
# Graph consisting of 35 nodes
data[36]["graph"] = Graph(is_directed=False)
data[36]["graph"].add_edge("A", "F", 1336)
data[36]["graph"].add_edge("A", "x", 788)
data[36]["graph"].add_edge("B", "D", 1469)
data[36]["graph"].add_edge("C", "B", 165)
data[36]["graph"].add_edge("E", "D", 1366)
data[36]["graph"].add_edge("E", "w", 312)
data[36]["graph"].add_edge("G", "F", 1271)
data[36]["graph"].add_edge("G", "o", 786)
data[36]["graph"].add_edge("H", "e", 339)
data[36]["graph"].add_edge("H", "p", 466)
data[36]["graph"].add_edge("I", "h", 713)
data[36]["graph"].add_edge("I", "l", 815)
data[36]["graph"].add_edge("J", "j", 1418)
data[36]["graph"].add_edge("a", "b", 538)
data[36]["graph"].add_edge("a", "i", 769)
data[36]["graph"].add_edge("a", "k", 1524)
data[36]["graph"].add_edge("b", "E", 84)
data[36]["graph"].add_edge("b", "I", 1302)
data[36]["graph"].add_edge("c", "H", 1246)
data[36]["graph"].add_edge("c", "r", 275)
data[36]["graph"].add_edge("c", "u", 65)
data[36]["graph"].add_edge("d", "p", 400)
data[36]["graph"].add_edge("d", "t", 781)
data[36]["graph"].add_edge("d", "v", 123)
data[36]["graph"].add_edge("e", "z", 1162)
data[36]["graph"].add_edge("f", "q", 342)
data[36]["graph"].add_edge("g", "A", 1086)
data[36]["graph"].add_edge("g", "G", 1498)
data[36]["graph"].add_edge("g", "s", 965)
data[36]["graph"].add_edge("h", "n", 1664)
data[36]["graph"].add_edge("i", "J", 888)
data[36]["graph"].add_edge("i", "x", 877)
data[36]["graph"].add_edge("k", "f", 529)
data[36]["graph"].add_edge("k", "h", 613)
data[36]["graph"].add_edge("l", "m", 461)
data[36]["graph"].add_edge("m", "y", 459)
data[36]["graph"].add_edge("n", "J", 525)
data[36]["graph"].add_edge("o", "C", 373)
data[36]["graph"].add_edge("p", "z", 799)
data[36]["graph"].add_edge("q", "j", 1495)
data[36]["graph"].add_edge("q", "n", 453)
data[36]["graph"].add_edge("r", "f", 1222)
data[36]["graph"].add_edge("r", "m", 767)
data[36]["graph"].add_edge("s", "w", 1262)
data[36]["graph"].add_edge("t", "l", 863)
data[36]["graph"].add_edge("t", "s", 1179)
data[36]["graph"].add_edge("u", "C", 541)
data[36]["graph"].add_edge("u", "e", 666)
data[36]["graph"].add_edge("v", "j", 1568)
data[36]["graph"].add_edge("v", "w", 374)
data[36]["graph"].add_edge("x", "B", 327)
data[36]["graph"].add_edge("y", "D", 1504)
data[36]["graph"].add_edge("y", "F", 586)
data[36]["graph"].add_edge("z", "o", 542)
data[36]["mst"] = Graph(is_directed=False)
data[36]["mst"].add_edge("A", "x", weight=788)
data[36]["mst"].add_edge("C", "B", weight=165)
data[36]["mst"].add_edge("E", "D", weight=1366)
data[36]["mst"].add_edge("E", "w", weight=312)
data[36]["mst"].add_edge("G", "o", weight=786)
data[36]["mst"].add_edge("H", "e", weight=339)
data[36]["mst"].add_edge("H", "p", weight=466)
data[36]["mst"].add_edge("I", "h", weight=713)
data[36]["mst"].add_edge("I", "l", weight=815)
data[36]["mst"].add_edge("J", "j", weight=1418)
data[36]["mst"].add_edge("a", "b", weight=538)
data[36]["mst"].add_edge("a", "i", weight=769)
data[36]["mst"].add_edge("b", "E", weight=84)
data[36]["mst"].add_edge("c", "r", weight=275)
data[36]["mst"].add_edge("c", "u", weight=65)
data[36]["mst"].add_edge("d", "p", weight=400)
data[36]["mst"].add_edge("d", "t", weight=781)
data[36]["mst"].add_edge("d", "v", weight=123)
data[36]["mst"].add_edge("f", "q", weight=342)
data[36]["mst"].add_edge("g", "A", weight=1086)
data[36]["mst"].add_edge("g", "s", weight=965)
data[36]["mst"].add_edge("k", "f", weight=529)
data[36]["mst"].add_edge("k", "h", weight=613)
data[36]["mst"].add_edge("l", "m", weight=461)
data[36]["mst"].add_edge("m", "y", weight=459)
data[36]["mst"].add_edge("n", "J", weight=525)
data[36]["mst"].add_edge("o", "C", weight=373)
data[36]["mst"].add_edge("q", "n", weight=453)
data[36]["mst"].add_edge("r", "m", weight=767)
data[36]["mst"].add_edge("u", "C", weight=541)
data[36]["mst"].add_edge("u", "e", weight=666)
data[36]["mst"].add_edge("v", "w", weight=374)
data[36]["mst"].add_edge("x", "B", weight=327)
data[36]["mst"].add_edge("y", "F", weight=586)
data[36]["mst"].add_edge("z", "o", weight=542)
data[36]["solutions"] = [
    { "edge": ("t", "l"), "weight": 864, "expected": [('a', 'b'), ('a', 'i'), ('b', 'E'), ('k', 'f'), ('k', 'h'), ('I', 'h'), ('I', 'l'), ('E', 'w'), ('E', 'D'), ('c', 'u'), ('c', 'r'), ('r', 'm'), ('u', 'C'), ('u', 'e'), ('H', 'e'), ('H', 'p'), ('d', 'v'), ('d', 'p'), ('d', 't'), ('v', 'w'), ('z', 'o'), ('f', 'q'), ('q', 'n'), ('g', 's'), ('g', 'A'), ('G', 'o'), ('A', 'x'), ('n', 'J'), ('J', 'j'), ('x', 'B'), ('l', 'm'), ('m', 'y'), ('y', 'F'), ('o', 'C'), ('C', 'B')] },
    { "edge": ("q", "j"), "weight": 311, "expected": [('a', 'b'), ('a', 'i'), ('b', 'E'), ('k', 'f'), ('k', 'h'), ('I', 'h'), ('I', 'l'), ('E', 'w'), ('E', 'D'), ('c', 'u'), ('c', 'r'), ('r', 'm'), ('u', 'C'), ('u', 'e'), ('H', 'e'), ('H', 'p'), ('d', 'v'), ('d', 'p'), ('d', 't'), ('v', 'w'), ('z', 'o'), ('f', 'q'), ('q', 'j'), ('q', 'n'), ('g', 's'), ('g', 'A'), ('G', 'o'), ('A', 'x'), ('n', 'J'), ('x', 'B'), ('l', 'm'), ('m', 'y'), ('y', 'F'), ('o', 'C'), ('C', 'B')] },
    { "edge": ("k", "f"), "weight": 528, "expected": [('a', 'b'), ('a', 'i'), ('b', 'E'), ('k', 'f'), ('k', 'h'), ('I', 'h'), ('I', 'l'), ('E', 'w'), ('E', 'D'), ('c', 'u'), ('c', 'r'), ('r', 'm'), ('u', 'C'), ('u', 'e'), ('H', 'e'), ('H', 'p'), ('d', 'v'), ('d', 'p'), ('d', 't'), ('v', 'w'), ('z', 'o'), ('f', 'q'), ('q', 'n'), ('g', 's'), ('g', 'A'), ('G', 'o'), ('A', 'x'), ('n', 'J'), ('J', 'j'), ('x', 'B'), ('l', 'm'), ('m', 'y'), ('y', 'F'), ('o', 'C'), ('C', 'B')] },
    { "edge": ("G", "o"), "weight": 787, "expected": [('a', 'b'), ('a', 'i'), ('b', 'E'), ('k', 'f'), ('k', 'h'), ('I', 'h'), ('I', 'l'), ('E', 'w'), ('E', 'D'), ('c', 'u'), ('c', 'r'), ('r', 'm'), ('u', 'C'), ('u', 'e'), ('H', 'e'), ('H', 'p'), ('d', 'v'), ('d', 'p'), ('d', 't'), ('v', 'w'), ('z', 'o'), ('f', 'q'), ('q', 'n'), ('g', 's'), ('g', 'A'), ('G', 'o'), ('A', 'x'), ('n', 'J'), ('J', 'j'), ('x', 'B'), ('l', 'm'), ('m', 'y'), ('y', 'F'), ('o', 'C'), ('C', 'B')] }
]
# Graph consisting of 36 nodes
data[37]["graph"] = Graph(is_directed=False)
data[37]["graph"].add_edge("D", "f", 380)
data[37]["graph"].add_edge("D", "m", 1037)
data[37]["graph"].add_edge("E", "b", 1406)
data[37]["graph"].add_edge("E", "e", 1092)
data[37]["graph"].add_edge("F", "C", 1079)
data[37]["graph"].add_edge("F", "q", 1014)
data[37]["graph"].add_edge("G", "v", 1411)
data[37]["graph"].add_edge("G", "w", 889)
data[37]["graph"].add_edge("H", "B", 980)
data[37]["graph"].add_edge("H", "p", 1368)
data[37]["graph"].add_edge("I", "B", 386)
data[37]["graph"].add_edge("I", "l", 319)
data[37]["graph"].add_edge("J", "v", 331)
data[37]["graph"].add_edge("K", "C", 267)
data[37]["graph"].add_edge("a", "E", 929)
data[37]["graph"].add_edge("a", "o", 1228)
data[37]["graph"].add_edge("a", "z", 665)
data[37]["graph"].add_edge("b", "I", 846)
data[37]["graph"].add_edge("b", "K", 13)
data[37]["graph"].add_edge("c", "n", 372)
data[37]["graph"].add_edge("c", "r", 874)
data[37]["graph"].add_edge("c", "x", 1403)
data[37]["graph"].add_edge("d", "D", 1459)
data[37]["graph"].add_edge("d", "H", 1498)
data[37]["graph"].add_edge("d", "u", 207)
data[37]["graph"].add_edge("e", "m", 1359)
data[37]["graph"].add_edge("f", "g", 1388)
data[37]["graph"].add_edge("f", "y", 467)
data[37]["graph"].add_edge("g", "t", 768)
data[37]["graph"].add_edge("h", "F", 1530)
data[37]["graph"].add_edge("h", "p", 1330)
data[37]["graph"].add_edge("i", "C", 1517)
data[37]["graph"].add_edge("i", "s", 1314)
data[37]["graph"].add_edge("j", "A", 1080)
data[37]["graph"].add_edge("j", "k", 1290)
data[37]["graph"].add_edge("j", "q", 645)
data[37]["graph"].add_edge("k", "J", 810)
data[37]["graph"].add_edge("n", "e", 1235)
data[37]["graph"].add_edge("o", "G", 1435)
data[37]["graph"].add_edge("o", "g", 297)
data[37]["graph"].add_edge("p", "A", 1548)
data[37]["graph"].add_edge("q", "k", 736)
data[37]["graph"].add_edge("r", "B", 1305)
data[37]["graph"].add_edge("r", "i", 1413)
data[37]["graph"].add_edge("s", "v", 234)
data[37]["graph"].add_edge("t", "A", 1528)
data[37]["graph"].add_edge("t", "l", 832)
data[37]["graph"].add_edge("u", "J", 1633)
data[37]["graph"].add_edge("u", "m", 253)
data[37]["graph"].add_edge("x", "h", 299)
data[37]["graph"].add_edge("x", "w", 1493)
data[37]["graph"].add_edge("y", "s", 868)
data[37]["graph"].add_edge("y", "w", 506)
data[37]["graph"].add_edge("z", "l", 700)
data[37]["graph"].add_edge("z", "n", 657)
data[37]["mst"] = Graph(is_directed=False)
data[37]["mst"].add_edge("D", "f", weight=380)
data[37]["mst"].add_edge("D", "m", weight=1037)
data[37]["mst"].add_edge("E", "e", weight=1092)
data[37]["mst"].add_edge("F", "C", weight=1079)
data[37]["mst"].add_edge("F", "q", weight=1014)
data[37]["mst"].add_edge("G", "w", weight=889)
data[37]["mst"].add_edge("H", "B", weight=980)
data[37]["mst"].add_edge("H", "p", weight=1368)
data[37]["mst"].add_edge("I", "B", weight=386)
data[37]["mst"].add_edge("I", "l", weight=319)
data[37]["mst"].add_edge("J", "v", weight=331)
data[37]["mst"].add_edge("K", "C", weight=267)
data[37]["mst"].add_edge("a", "E", weight=929)
data[37]["mst"].add_edge("a", "z", weight=665)
data[37]["mst"].add_edge("b", "I", weight=846)
data[37]["mst"].add_edge("b", "K", weight=13)
data[37]["mst"].add_edge("c", "n", weight=372)
data[37]["mst"].add_edge("c", "r", weight=874)
data[37]["mst"].add_edge("d", "u", weight=207)
data[37]["mst"].add_edge("f", "y", weight=467)
data[37]["mst"].add_edge("g", "t", weight=768)
data[37]["mst"].add_edge("h", "p", weight=1330)
data[37]["mst"].add_edge("i", "s", weight=1314)
data[37]["mst"].add_edge("j", "A", weight=1080)
data[37]["mst"].add_edge("j", "q", weight=645)
data[37]["mst"].add_edge("k", "J", weight=810)
data[37]["mst"].add_edge("o", "g", weight=297)
data[37]["mst"].add_edge("q", "k", weight=736)
data[37]["mst"].add_edge("s", "v", weight=234)
data[37]["mst"].add_edge("t", "l", weight=832)
data[37]["mst"].add_edge("u", "m", weight=253)
data[37]["mst"].add_edge("x", "h", weight=299)
data[37]["mst"].add_edge("y", "s", weight=868)
data[37]["mst"].add_edge("y", "w", weight=506)
data[37]["mst"].add_edge("z", "l", weight=700)
data[37]["mst"].add_edge("z", "n", weight=657)
data[37]["solutions"] = [
    { "edge": ("E", "b"), "weight": 1407, "expected": [('a', 'z'), ('a', 'E'), ('z', 'n'), ('z', 'l'), ('o', 'g'), ('E', 'e'), ('b', 'K'), ('b', 'I'), ('I', 'l'), ('I', 'B'), ('K', 'C'), ('c', 'n'), ('c', 'r'), ('x', 'h'), ('d', 'u'), ('H', 'B'), ('H', 'p'), ('u', 'm'), ('D', 'f'), ('D', 'm'), ('f', 'y'), ('y', 'w'), ('y', 's'), ('g', 't'), ('t', 'l'), ('h', 'p'), ('F', 'q'), ('F', 'C'), ('i', 's'), ('s', 'v'), ('j', 'q'), ('j', 'A'), ('q', 'k'), ('k', 'J'), ('J', 'v'), ('G', 'w')] },
    { "edge": ("G", "v"), "weight": 505, "expected": [('a', 'z'), ('a', 'E'), ('z', 'n'), ('z', 'l'), ('o', 'g'), ('E', 'e'), ('b', 'K'), ('b', 'I'), ('I', 'l'), ('I', 'B'), ('K', 'C'), ('c', 'n'), ('c', 'r'), ('x', 'h'), ('d', 'u'), ('H', 'B'), ('H', 'p'), ('u', 'm'), ('D', 'f'), ('D', 'm'), ('f', 'y'), ('y', 'w'), ('y', 's'), ('g', 't'), ('t', 'l'), ('h', 'p'), ('F', 'q'), ('F', 'C'), ('i', 's'), ('s', 'v'), ('j', 'q'), ('j', 'A'), ('q', 'k'), ('k', 'J'), ('J', 'v'), ('G', 'v')] },
    { "edge": ("E", "e"), "weight": 1091, "expected": [('a', 'z'), ('a', 'E'), ('z', 'n'), ('z', 'l'), ('o', 'g'), ('E', 'e'), ('b', 'K'), ('b', 'I'), ('I', 'l'), ('I', 'B'), ('K', 'C'), ('c', 'n'), ('c', 'r'), ('x', 'h'), ('d', 'u'), ('H', 'B'), ('H', 'p'), ('u', 'm'), ('D', 'f'), ('D', 'm'), ('f', 'y'), ('y', 'w'), ('y', 's'), ('g', 't'), ('t', 'l'), ('h', 'p'), ('F', 'q'), ('F', 'C'), ('i', 's'), ('s', 'v'), ('j', 'q'), ('j', 'A'), ('q', 'k'), ('k', 'J'), ('J', 'v'), ('G', 'w')] },
    { "edge": ("H", "p"), "weight": 1369, "expected": [('a', 'z'), ('a', 'E'), ('z', 'n'), ('z', 'l'), ('o', 'g'), ('E', 'e'), ('b', 'K'), ('b', 'I'), ('I', 'l'), ('I', 'B'), ('K', 'C'), ('c', 'n'), ('c', 'r'), ('x', 'h'), ('d', 'u'), ('H', 'B'), ('H', 'p'), ('u', 'm'), ('D', 'f'), ('D', 'm'), ('f', 'y'), ('y', 'w'), ('y', 's'), ('g', 't'), ('t', 'l'), ('h', 'p'), ('F', 'q'), ('F', 'C'), ('i', 's'), ('s', 'v'), ('j', 'q'), ('j', 'A'), ('q', 'k'), ('k', 'J'), ('J', 'v'), ('G', 'w')] }
]
# Graph consisting of 37 nodes
data[38]["graph"] = Graph(is_directed=False)
data[38]["graph"].add_edge("A", "y", 4)
data[38]["graph"].add_edge("B", "i", 693)
data[38]["graph"].add_edge("B", "r", 989)
data[38]["graph"].add_edge("C", "H", 392)
data[38]["graph"].add_edge("D", "k", 1055)
data[38]["graph"].add_edge("D", "p", 1112)
data[38]["graph"].add_edge("E", "H", 673)
data[38]["graph"].add_edge("E", "z", 1029)
data[38]["graph"].add_edge("G", "F", 1298)
data[38]["graph"].add_edge("I", "F", 1275)
data[38]["graph"].add_edge("J", "r", 271)
data[38]["graph"].add_edge("J", "x", 1369)
data[38]["graph"].add_edge("K", "j", 239)
data[38]["graph"].add_edge("L", "C", 514)
data[38]["graph"].add_edge("L", "r", 216)
data[38]["graph"].add_edge("a", "f", 1566)
data[38]["graph"].add_edge("a", "m", 172)
data[38]["graph"].add_edge("a", "s", 401)
data[38]["graph"].add_edge("b", "D", 620)
data[38]["graph"].add_edge("b", "L", 46)
data[38]["graph"].add_edge("c", "l", 662)
data[38]["graph"].add_edge("c", "n", 1180)
data[38]["graph"].add_edge("c", "p", 127)
data[38]["graph"].add_edge("d", "h", 1578)
data[38]["graph"].add_edge("d", "w", 52)
data[38]["graph"].add_edge("e", "E", 1039)
data[38]["graph"].add_edge("e", "I", 1531)
data[38]["graph"].add_edge("e", "u", 1350)
data[38]["graph"].add_edge("f", "h", 1342)
data[38]["graph"].add_edge("f", "t", 660)
data[38]["graph"].add_edge("g", "A", 1503)
data[38]["graph"].add_edge("h", "B", 298)
data[38]["graph"].add_edge("i", "K", 204)
data[38]["graph"].add_edge("i", "z", 1409)
data[38]["graph"].add_edge("k", "G", 971)
data[38]["graph"].add_edge("k", "v", 1655)
data[38]["graph"].add_edge("l", "A", 1629)
data[38]["graph"].add_edge("l", "d", 397)
data[38]["graph"].add_edge("m", "g", 1472)
data[38]["graph"].add_edge("m", "j", 414)
data[38]["graph"].add_edge("n", "J", 182)
data[38]["graph"].add_edge("n", "x", 1099)
data[38]["graph"].add_edge("p", "v", 728)
data[38]["graph"].add_edge("q", "y", 902)
data[38]["graph"].add_edge("s", "K", 1100)
data[38]["graph"].add_edge("s", "b", 713)
data[38]["graph"].add_edge("t", "G", 291)
data[38]["graph"].add_edge("t", "o", 380)
data[38]["graph"].add_edge("u", "j", 1030)
data[38]["graph"].add_edge("u", "o", 1681)
data[38]["graph"].add_edge("v", "o", 316)
data[38]["graph"].add_edge("w", "g", 53)
data[38]["graph"].add_edge("w", "q", 250)
data[38]["graph"].add_edge("x", "C", 379)
data[38]["graph"].add_edge("y", "H", 1602)
data[38]["graph"].add_edge("z", "q", 774)
data[38]["mst"] = Graph(is_directed=False)
data[38]["mst"].add_edge("A", "y", weight=4)
data[38]["mst"].add_edge("B", "i", weight=693)
data[38]["mst"].add_edge("C", "H", weight=392)
data[38]["mst"].add_edge("E", "H", weight=673)
data[38]["mst"].add_edge("E", "z", weight=1029)
data[38]["mst"].add_edge("G", "F", weight=1298)
data[38]["mst"].add_edge("I", "F", weight=1275)
data[38]["mst"].add_edge("J", "r", weight=271)
data[38]["mst"].add_edge("K", "j", weight=239)
data[38]["mst"].add_edge("L", "C", weight=514)
data[38]["mst"].add_edge("L", "r", weight=216)
data[38]["mst"].add_edge("a", "m", weight=172)
data[38]["mst"].add_edge("a", "s", weight=401)
data[38]["mst"].add_edge("b", "D", weight=620)
data[38]["mst"].add_edge("b", "L", weight=46)
data[38]["mst"].add_edge("c", "l", weight=662)
data[38]["mst"].add_edge("c", "p", weight=127)
data[38]["mst"].add_edge("d", "w", weight=52)
data[38]["mst"].add_edge("e", "E", weight=1039)
data[38]["mst"].add_edge("f", "t", weight=660)
data[38]["mst"].add_edge("h", "B", weight=298)
data[38]["mst"].add_edge("i", "K", weight=204)
data[38]["mst"].add_edge("k", "G", weight=971)
data[38]["mst"].add_edge("l", "d", weight=397)
data[38]["mst"].add_edge("m", "j", weight=414)
data[38]["mst"].add_edge("n", "J", weight=182)
data[38]["mst"].add_edge("p", "v", weight=728)
data[38]["mst"].add_edge("q", "y", weight=902)
data[38]["mst"].add_edge("s", "b", weight=713)
data[38]["mst"].add_edge("t", "G", weight=291)
data[38]["mst"].add_edge("t", "o", weight=380)
data[38]["mst"].add_edge("u", "j", weight=1030)
data[38]["mst"].add_edge("v", "o", weight=316)
data[38]["mst"].add_edge("w", "g", weight=53)
data[38]["mst"].add_edge("w", "q", weight=250)
data[38]["mst"].add_edge("x", "C", weight=379)
data[38]["mst"].add_edge("z", "q", weight=774)
data[38]["solutions"] = [
    { "edge": ("a", "f"), "weight": 1567, "expected": [('a', 'm'), ('a', 's'), ('s', 'b'), ('m', 'j'), ('f', 't'), ('b', 'L'), ('b', 'D'), ('L', 'r'), ('L', 'C'), ('c', 'p'), ('c', 'l'), ('l', 'd'), ('n', 'J'), ('p', 'v'), ('d', 'w'), ('w', 'g'), ('w', 'q'), ('h', 'B'), ('e', 'E'), ('I', 'F'), ('u', 'j'), ('E', 'H'), ('E', 'z'), ('t', 'G'), ('t', 'o'), ('A', 'y'), ('B', 'i'), ('i', 'K'), ('z', 'q'), ('K', 'j'), ('k', 'G'), ('G', 'F'), ('v', 'o'), ('J', 'r'), ('x', 'C'), ('q', 'y'), ('C', 'H')] },
    { "edge": ("g", "A"), "weight": 413, "expected": [('a', 'm'), ('a', 's'), ('s', 'b'), ('m', 'j'), ('f', 't'), ('b', 'L'), ('b', 'D'), ('L', 'r'), ('L', 'C'), ('c', 'p'), ('c', 'l'), ('l', 'd'), ('n', 'J'), ('p', 'v'), ('d', 'w'), ('w', 'g'), ('w', 'q'), ('h', 'B'), ('e', 'E'), ('I', 'F'), ('u', 'j'), ('E', 'H'), ('E', 'z'), ('t', 'G'), ('t', 'o'), ('g', 'A'), ('A', 'y'), ('B', 'i'), ('i', 'K'), ('z', 'q'), ('K', 'j'), ('k', 'G'), ('G', 'F'), ('v', 'o'), ('J', 'r'), ('x', 'C'), ('C', 'H')] },
    { "edge": ("t", "G"), "weight": 290, "expected": [('a', 'm'), ('a', 's'), ('s', 'b'), ('m', 'j'), ('f', 't'), ('b', 'L'), ('b', 'D'), ('L', 'r'), ('L', 'C'), ('c', 'p'), ('c', 'l'), ('l', 'd'), ('n', 'J'), ('p', 'v'), ('d', 'w'), ('w', 'g'), ('w', 'q'), ('h', 'B'), ('e', 'E'), ('I', 'F'), ('u', 'j'), ('E', 'H'), ('E', 'z'), ('t', 'G'), ('t', 'o'), ('A', 'y'), ('B', 'i'), ('i', 'K'), ('z', 'q'), ('K', 'j'), ('k', 'G'), ('G', 'F'), ('v', 'o'), ('J', 'r'), ('x', 'C'), ('q', 'y'), ('C', 'H')] },
    { "edge": ("G", "F"), "weight": 1299, "expected": [('a', 'm'), ('a', 's'), ('s', 'b'), ('m', 'j'), ('f', 't'), ('b', 'L'), ('b', 'D'), ('L', 'r'), ('L', 'C'), ('c', 'p'), ('c', 'l'), ('l', 'd'), ('n', 'J'), ('p', 'v'), ('d', 'w'), ('w', 'g'), ('w', 'q'), ('h', 'B'), ('e', 'E'), ('I', 'F'), ('u', 'j'), ('E', 'H'), ('E', 'z'), ('t', 'G'), ('t', 'o'), ('A', 'y'), ('B', 'i'), ('i', 'K'), ('z', 'q'), ('K', 'j'), ('k', 'G'), ('G', 'F'), ('v', 'o'), ('J', 'r'), ('x', 'C'), ('q', 'y'), ('C', 'H')] }
]
# Graph consisting of 38 nodes
data[39]["graph"] = Graph(is_directed=False)
data[39]["graph"].add_edge("A", "e", 998)
data[39]["graph"].add_edge("B", "J", 57)
data[39]["graph"].add_edge("B", "L", 121)
data[39]["graph"].add_edge("C", "D", 578)
data[39]["graph"].add_edge("C", "K", 1170)
data[39]["graph"].add_edge("D", "l", 126)
data[39]["graph"].add_edge("E", "z", 1634)
data[39]["graph"].add_edge("F", "n", 67)
data[39]["graph"].add_edge("F", "s", 631)
data[39]["graph"].add_edge("G", "H", 959)
data[39]["graph"].add_edge("G", "J", 1272)
data[39]["graph"].add_edge("H", "k", 1283)
data[39]["graph"].add_edge("I", "r", 830)
data[39]["graph"].add_edge("I", "v", 376)
data[39]["graph"].add_edge("L", "K", 1488)
data[39]["graph"].add_edge("M", "K", 985)
data[39]["graph"].add_edge("a", "B", 1132)
data[39]["graph"].add_edge("a", "m", 1601)
data[39]["graph"].add_edge("a", "u", 612)
data[39]["graph"].add_edge("b", "h", 21)
data[39]["graph"].add_edge("b", "o", 1406)
data[39]["graph"].add_edge("c", "F", 702)
data[39]["graph"].add_edge("c", "p", 1091)
data[39]["graph"].add_edge("c", "q", 149)
data[39]["graph"].add_edge("d", "A", 198)
data[39]["graph"].add_edge("d", "y", 1093)
data[39]["graph"].add_edge("e", "C", 152)
data[39]["graph"].add_edge("e", "j", 1680)
data[39]["graph"].add_edge("f", "s", 1542)
data[39]["graph"].add_edge("f", "t", 1380)
data[39]["graph"].add_edge("g", "G", 1445)
data[39]["graph"].add_edge("g", "H", 210)
data[39]["graph"].add_edge("g", "I", 1155)
data[39]["graph"].add_edge("h", "f", 1595)
data[39]["graph"].add_edge("h", "t", 499)
data[39]["graph"].add_edge("i", "D", 455)
data[39]["graph"].add_edge("i", "v", 664)
data[39]["graph"].add_edge("j", "r", 1360)
data[39]["graph"].add_edge("j", "w", 1072)
data[39]["graph"].add_edge("k", "E", 865)
data[39]["graph"].add_edge("l", "x", 925)
data[39]["graph"].add_edge("m", "b", 334)
data[39]["graph"].add_edge("m", "d", 529)
data[39]["graph"].add_edge("n", "J", 1217)
data[39]["graph"].add_edge("o", "A", 1152)
data[39]["graph"].add_edge("o", "E", 1047)
data[39]["graph"].add_edge("p", "M", 1238)
data[39]["graph"].add_edge("p", "s", 1500)
data[39]["graph"].add_edge("q", "l", 750)
data[39]["graph"].add_edge("q", "y", 53)
data[39]["graph"].add_edge("r", "n", 27)
data[39]["graph"].add_edge("t", "i", 749)
data[39]["graph"].add_edge("u", "L", 724)
data[39]["graph"].add_edge("u", "k", 695)
data[39]["graph"].add_edge("v", "x", 1012)
data[39]["graph"].add_edge("w", "x", 317)
data[39]["graph"].add_edge("w", "z", 1575)
data[39]["graph"].add_edge("y", "z", 676)
data[39]["mst"] = Graph(is_directed=False)
data[39]["mst"].add_edge("B", "J", weight=57)
data[39]["mst"].add_edge("B", "L", weight=121)
data[39]["mst"].add_edge("C", "D", weight=578)
data[39]["mst"].add_edge("C", "K", weight=1170)
data[39]["mst"].add_edge("D", "l", weight=126)
data[39]["mst"].add_edge("F", "n", weight=67)
data[39]["mst"].add_edge("F", "s", weight=631)
data[39]["mst"].add_edge("G", "H", weight=959)
data[39]["mst"].add_edge("I", "v", weight=376)
data[39]["mst"].add_edge("M", "K", weight=985)
data[39]["mst"].add_edge("a", "u", weight=612)
data[39]["mst"].add_edge("b", "h", weight=21)
data[39]["mst"].add_edge("c", "F", weight=702)
data[39]["mst"].add_edge("c", "p", weight=1091)
data[39]["mst"].add_edge("c", "q", weight=149)
data[39]["mst"].add_edge("d", "A", weight=198)
data[39]["mst"].add_edge("e", "C", weight=152)
data[39]["mst"].add_edge("f", "t", weight=1380)
data[39]["mst"].add_edge("g", "H", weight=210)
data[39]["mst"].add_edge("g", "I", weight=1155)
data[39]["mst"].add_edge("h", "t", weight=499)
data[39]["mst"].add_edge("i", "D", weight=455)
data[39]["mst"].add_edge("i", "v", weight=664)
data[39]["mst"].add_edge("j", "w", weight=1072)
data[39]["mst"].add_edge("k", "E", weight=865)
data[39]["mst"].add_edge("l", "x", weight=925)
data[39]["mst"].add_edge("m", "b", weight=334)
data[39]["mst"].add_edge("m", "d", weight=529)
data[39]["mst"].add_edge("o", "A", weight=1152)
data[39]["mst"].add_edge("o", "E", weight=1047)
data[39]["mst"].add_edge("q", "l", weight=750)
data[39]["mst"].add_edge("q", "y", weight=53)
data[39]["mst"].add_edge("r", "n", weight=27)
data[39]["mst"].add_edge("t", "i", weight=749)
data[39]["mst"].add_edge("u", "L", weight=724)
data[39]["mst"].add_edge("u", "k", weight=695)
data[39]["mst"].add_edge("w", "x", weight=317)
data[39]["mst"].add_edge("y", "z", weight=676)
data[39]["solutions"] = [
    { "edge": ("b", "o"), "weight": 1407, "expected": [('a', 'u'), ('B', 'J'), ('B', 'L'), ('m', 'b'), ('m', 'd'), ('u', 'k'), ('u', 'L'), ('b', 'h'), ('o', 'E'), ('o', 'A'), ('h', 't'), ('c', 'q'), ('c', 'F'), ('c', 'p'), ('q', 'y'), ('q', 'l'), ('F', 'n'), ('F', 's'), ('d', 'A'), ('y', 'z'), ('e', 'C'), ('j', 'w'), ('C', 'D'), ('C', 'K'), ('f', 't'), ('t', 'i'), ('g', 'H'), ('g', 'I'), ('G', 'H'), ('I', 'v'), ('i', 'D'), ('i', 'v'), ('D', 'l'), ('r', 'n'), ('w', 'x'), ('k', 'E'), ('l', 'x'), ('M', 'K')] },
    { "edge": ("p", "s"), "weight": 1046, "expected": [('a', 'u'), ('B', 'J'), ('B', 'L'), ('m', 'b'), ('m', 'd'), ('u', 'k'), ('u', 'L'), ('b', 'h'), ('o', 'E'), ('o', 'A'), ('h', 't'), ('c', 'q'), ('c', 'F'), ('q', 'y'), ('q', 'l'), ('F', 'n'), ('F', 's'), ('p', 's'), ('d', 'A'), ('y', 'z'), ('e', 'C'), ('j', 'w'), ('C', 'D'), ('C', 'K'), ('f', 't'), ('t', 'i'), ('g', 'H'), ('g', 'I'), ('G', 'H'), ('I', 'v'), ('i', 'D'), ('i', 'v'), ('D', 'l'), ('r', 'n'), ('w', 'x'), ('k', 'E'), ('l', 'x'), ('M', 'K')] },
    { "edge": ("D", "l"), "weight": 125, "expected": [('a', 'u'), ('B', 'J'), ('B', 'L'), ('m', 'b'), ('m', 'd'), ('u', 'k'), ('u', 'L'), ('b', 'h'), ('o', 'E'), ('o', 'A'), ('h', 't'), ('c', 'q'), ('c', 'F'), ('c', 'p'), ('q', 'y'), ('q', 'l'), ('F', 'n'), ('F', 's'), ('d', 'A'), ('y', 'z'), ('e', 'C'), ('j', 'w'), ('C', 'D'), ('C', 'K'), ('f', 't'), ('t', 'i'), ('g', 'H'), ('g', 'I'), ('G', 'H'), ('I', 'v'), ('i', 'D'), ('i', 'v'), ('D', 'l'), ('r', 'n'), ('w', 'x'), ('k', 'E'), ('l', 'x'), ('M', 'K')] },
    { "edge": ("c", "p"), "weight": 1092, "expected": [('a', 'u'), ('B', 'J'), ('B', 'L'), ('m', 'b'), ('m', 'd'), ('u', 'k'), ('u', 'L'), ('b', 'h'), ('o', 'E'), ('o', 'A'), ('h', 't'), ('c', 'q'), ('c', 'F'), ('c', 'p'), ('q', 'y'), ('q', 'l'), ('F', 'n'), ('F', 's'), ('d', 'A'), ('y', 'z'), ('e', 'C'), ('j', 'w'), ('C', 'D'), ('C', 'K'), ('f', 't'), ('t', 'i'), ('g', 'H'), ('g', 'I'), ('G', 'H'), ('I', 'v'), ('i', 'D'), ('i', 'v'), ('D', 'l'), ('r', 'n'), ('w', 'x'), ('k', 'E'), ('l', 'x'), ('M', 'K')] }
]
# Graph consisting of 39 nodes
data[40]["graph"] = Graph(is_directed=False)
data[40]["graph"].add_edge("A", "F", 1445)
data[40]["graph"].add_edge("B", "J", 986)
data[40]["graph"].add_edge("C", "A", 460)
data[40]["graph"].add_edge("D", "F", 296)
data[40]["graph"].add_edge("D", "v", 995)
data[40]["graph"].add_edge("H", "G", 536)
data[40]["graph"].add_edge("H", "s", 377)
data[40]["graph"].add_edge("I", "l", 1406)
data[40]["graph"].add_edge("I", "r", 1333)
data[40]["graph"].add_edge("J", "G", 785)
data[40]["graph"].add_edge("K", "m", 1157)
data[40]["graph"].add_edge("K", "x", 1271)
data[40]["graph"].add_edge("L", "E", 1045)
data[40]["graph"].add_edge("L", "v", 456)
data[40]["graph"].add_edge("M", "E", 910)
data[40]["graph"].add_edge("M", "v", 360)
data[40]["graph"].add_edge("N", "e", 119)
data[40]["graph"].add_edge("N", "p", 865)
data[40]["graph"].add_edge("a", "I", 110)
data[40]["graph"].add_edge("a", "j", 1272)
data[40]["graph"].add_edge("a", "q", 1591)
data[40]["graph"].add_edge("b", "N", 529)
data[40]["graph"].add_edge("b", "r", 649)
data[40]["graph"].add_edge("b", "t", 1274)
data[40]["graph"].add_edge("c", "i", 26)
data[40]["graph"].add_edge("c", "o", 682)
data[40]["graph"].add_edge("c", "z", 1676)
data[40]["graph"].add_edge("d", "K", 131)
data[40]["graph"].add_edge("d", "M", 798)
data[40]["graph"].add_edge("d", "u", 1189)
data[40]["graph"].add_edge("e", "g", 874)
data[40]["graph"].add_edge("e", "w", 1023)
data[40]["graph"].add_edge("f", "k", 1574)
data[40]["graph"].add_edge("h", "L", 1605)
data[40]["graph"].add_edge("i", "l", 1190)
data[40]["graph"].add_edge("j", "D", 1046)
data[40]["graph"].add_edge("j", "t", 1212)
data[40]["graph"].add_edge("k", "B", 647)
data[40]["graph"].add_edge("k", "y", 833)
data[40]["graph"].add_edge("l", "y", 902)
data[40]["graph"].add_edge("m", "H", 1211)
data[40]["graph"].add_edge("n", "C", 1383)
data[40]["graph"].add_edge("n", "x", 973)
data[40]["graph"].add_edge("o", "f", 1237)
data[40]["graph"].add_edge("o", "g", 1296)
data[40]["graph"].add_edge("p", "E", 285)
data[40]["graph"].add_edge("q", "g", 897)
data[40]["graph"].add_edge("q", "i", 82)
data[40]["graph"].add_edge("r", "h", 1542)
data[40]["graph"].add_edge("s", "A", 695)
data[40]["graph"].add_edge("s", "F", 1322)
data[40]["graph"].add_edge("t", "h", 550)
data[40]["graph"].add_edge("u", "C", 803)
data[40]["graph"].add_edge("u", "n", 1075)
data[40]["graph"].add_edge("w", "f", 1469)
data[40]["graph"].add_edge("x", "p", 1256)
data[40]["graph"].add_edge("y", "m", 990)
data[40]["graph"].add_edge("z", "B", 748)
data[40]["graph"].add_edge("z", "w", 984)
data[40]["mst"] = Graph(is_directed=False)
data[40]["mst"].add_edge("B", "J", weight=986)
data[40]["mst"].add_edge("C", "A", weight=460)
data[40]["mst"].add_edge("D", "F", weight=296)
data[40]["mst"].add_edge("D", "v", weight=995)
data[40]["mst"].add_edge("H", "G", weight=536)
data[40]["mst"].add_edge("H", "s", weight=377)
data[40]["mst"].add_edge("J", "G", weight=785)
data[40]["mst"].add_edge("L", "v", weight=456)
data[40]["mst"].add_edge("M", "E", weight=910)
data[40]["mst"].add_edge("M", "v", weight=360)
data[40]["mst"].add_edge("N", "e", weight=119)
data[40]["mst"].add_edge("N", "p", weight=865)
data[40]["mst"].add_edge("a", "I", weight=110)
data[40]["mst"].add_edge("a", "j", weight=1272)
data[40]["mst"].add_edge("b", "N", weight=529)
data[40]["mst"].add_edge("b", "r", weight=649)
data[40]["mst"].add_edge("c", "i", weight=26)
data[40]["mst"].add_edge("c", "o", weight=682)
data[40]["mst"].add_edge("d", "K", weight=131)
data[40]["mst"].add_edge("d", "M", weight=798)
data[40]["mst"].add_edge("e", "g", weight=874)
data[40]["mst"].add_edge("e", "w", weight=1023)
data[40]["mst"].add_edge("j", "D", weight=1046)
data[40]["mst"].add_edge("j", "t", weight=1212)
data[40]["mst"].add_edge("k", "B", weight=647)
data[40]["mst"].add_edge("k", "y", weight=833)
data[40]["mst"].add_edge("l", "y", weight=902)
data[40]["mst"].add_edge("n", "x", weight=973)
data[40]["mst"].add_edge("o", "f", weight=1237)
data[40]["mst"].add_edge("p", "E", weight=285)
data[40]["mst"].add_edge("q", "g", weight=897)
data[40]["mst"].add_edge("q", "i", weight=82)
data[40]["mst"].add_edge("s", "A", weight=695)
data[40]["mst"].add_edge("t", "h", weight=550)
data[40]["mst"].add_edge("u", "C", weight=803)
data[40]["mst"].add_edge("u", "n", weight=1075)
data[40]["mst"].add_edge("y", "m", weight=990)
data[40]["mst"].add_edge("z", "B", weight=748)
data[40]["mst"].add_edge("z", "w", weight=984)
data[40]["solutions"] = [
    { "edge": ("b", "t"), "weight": 1275, "expected": [('a', 'I'), ('a', 'j'), ('q', 'i'), ('q', 'g'), ('j', 'D'), ('j', 't'), ('b', 'N'), ('b', 'r'), ('t', 'h'), ('N', 'e'), ('N', 'p'), ('c', 'i'), ('c', 'o'), ('z', 'B'), ('z', 'w'), ('o', 'f'), ('d', 'K'), ('d', 'M'), ('M', 'v'), ('M', 'E'), ('u', 'C'), ('u', 'n'), ('e', 'g'), ('e', 'w'), ('k', 'B'), ('k', 'y'), ('L', 'v'), ('l', 'y'), ('D', 'F'), ('D', 'v'), ('y', 'm'), ('B', 'J'), ('H', 's'), ('H', 'G'), ('n', 'x'), ('C', 'A'), ('p', 'E'), ('s', 'A'), ('J', 'G')] },
    { "edge": ("n", "C"), "weight": 359, "expected": [('a', 'I'), ('a', 'j'), ('q', 'i'), ('q', 'g'), ('j', 'D'), ('j', 't'), ('b', 'N'), ('b', 'r'), ('t', 'h'), ('N', 'e'), ('N', 'p'), ('c', 'i'), ('c', 'o'), ('z', 'B'), ('z', 'w'), ('o', 'f'), ('d', 'K'), ('d', 'M'), ('M', 'v'), ('M', 'E'), ('u', 'C'), ('e', 'g'), ('e', 'w'), ('k', 'B'), ('k', 'y'), ('L', 'v'), ('l', 'y'), ('D', 'F'), ('D', 'v'), ('y', 'm'), ('B', 'J'), ('H', 's'), ('H', 'G'), ('n', 'C'), ('n', 'x'), ('C', 'A'), ('p', 'E'), ('s', 'A'), ('J', 'G')] },
    { "edge": ("p", "E"), "weight": 284, "expected": [('a', 'I'), ('a', 'j'), ('q', 'i'), ('q', 'g'), ('j', 'D'), ('j', 't'), ('b', 'N'), ('b', 'r'), ('t', 'h'), ('N', 'e'), ('N', 'p'), ('c', 'i'), ('c', 'o'), ('z', 'B'), ('z', 'w'), ('o', 'f'), ('d', 'K'), ('d', 'M'), ('M', 'v'), ('M', 'E'), ('u', 'C'), ('u', 'n'), ('e', 'g'), ('e', 'w'), ('k', 'B'), ('k', 'y'), ('L', 'v'), ('l', 'y'), ('D', 'F'), ('D', 'v'), ('y', 'm'), ('B', 'J'), ('H', 's'), ('H', 'G'), ('n', 'x'), ('C', 'A'), ('p', 'E'), ('s', 'A'), ('J', 'G')] },
    { "edge": ("q", "g"), "weight": 898, "expected": [('a', 'I'), ('a', 'j'), ('q', 'i'), ('q', 'g'), ('j', 'D'), ('j', 't'), ('b', 'N'), ('b', 'r'), ('t', 'h'), ('N', 'e'), ('N', 'p'), ('c', 'i'), ('c', 'o'), ('z', 'B'), ('z', 'w'), ('o', 'f'), ('d', 'K'), ('d', 'M'), ('M', 'v'), ('M', 'E'), ('u', 'C'), ('u', 'n'), ('e', 'g'), ('e', 'w'), ('k', 'B'), ('k', 'y'), ('L', 'v'), ('l', 'y'), ('D', 'F'), ('D', 'v'), ('y', 'm'), ('B', 'J'), ('H', 's'), ('H', 'G'), ('n', 'x'), ('C', 'A'), ('p', 'E'), ('s', 'A'), ('J', 'G')] }
]
# Graph consisting of 40 nodes
data[41]["graph"] = Graph(is_directed=False)
data[41]["graph"].add_edge("A", "N", 1380)
data[41]["graph"].add_edge("A", "O", 1617)
data[41]["graph"].add_edge("B", "D", 1110)
data[41]["graph"].add_edge("B", "N", 571)
data[41]["graph"].add_edge("C", "w", 270)
data[41]["graph"].add_edge("C", "z", 493)
data[41]["graph"].add_edge("E", "m", 1639)
data[41]["graph"].add_edge("E", "r", 41)
data[41]["graph"].add_edge("G", "e", 1433)
data[41]["graph"].add_edge("G", "n", 54)
data[41]["graph"].add_edge("H", "D", 698)
data[41]["graph"].add_edge("H", "L", 1589)
data[41]["graph"].add_edge("I", "h", 1068)
data[41]["graph"].add_edge("I", "n", 903)
data[41]["graph"].add_edge("J", "F", 972)
data[41]["graph"].add_edge("K", "h", 21)
data[41]["graph"].add_edge("K", "o", 1298)
data[41]["graph"].add_edge("L", "z", 801)
data[41]["graph"].add_edge("M", "o", 1364)
data[41]["graph"].add_edge("M", "t", 62)
data[41]["graph"].add_edge("O", "F", 1681)
data[41]["graph"].add_edge("a", "C", 1071)
data[41]["graph"].add_edge("a", "M", 1128)
data[41]["graph"].add_edge("a", "l", 1675)
data[41]["graph"].add_edge("b", "I", 397)
data[41]["graph"].add_edge("b", "k", 475)
data[41]["graph"].add_edge("c", "E", 672)
data[41]["graph"].add_edge("c", "G", 577)
data[41]["graph"].add_edge("c", "g", 1664)
data[41]["graph"].add_edge("d", "i", 1248)
data[41]["graph"].add_edge("d", "x", 408)
data[41]["graph"].add_edge("e", "K", 559)
data[41]["graph"].add_edge("e", "f", 752)
data[41]["graph"].add_edge("f", "s", 1278)
data[41]["graph"].add_edge("f", "u", 1592)
data[41]["graph"].add_edge("g", "H", 111)
data[41]["graph"].add_edge("g", "d", 1296)
data[41]["graph"].add_edge("h", "r", 154)
data[41]["graph"].add_edge("i", "n", 1232)
data[41]["graph"].add_edge("i", "t", 1099)
data[41]["graph"].add_edge("j", "m", 1443)
data[41]["graph"].add_edge("k", "s", 1466)
data[41]["graph"].add_edge("k", "u", 1572)
data[41]["graph"].add_edge("l", "b", 3)
data[41]["graph"].add_edge("l", "j", 1343)
data[41]["graph"].add_edge("m", "w", 1134)
data[41]["graph"].add_edge("o", "J", 1051)
data[41]["graph"].add_edge("p", "B", 171)
data[41]["graph"].add_edge("p", "q", 707)
data[41]["graph"].add_edge("q", "y", 1583)
data[41]["graph"].add_edge("r", "y", 1174)
data[41]["graph"].add_edge("s", "j", 1190)
data[41]["graph"].add_edge("t", "v", 1261)
data[41]["graph"].add_edge("u", "A", 310)
data[41]["graph"].add_edge("v", "L", 485)
data[41]["graph"].add_edge("v", "O", 137)
data[41]["graph"].add_edge("w", "p", 330)
data[41]["graph"].add_edge("x", "D", 1117)
data[41]["graph"].add_edge("x", "q", 595)
data[41]["graph"].add_edge("y", "N", 1211)
data[41]["graph"].add_edge("z", "F", 1112)
data[41]["mst"] = Graph(is_directed=False)
data[41]["mst"].add_edge("A", "N", weight=1380)
data[41]["mst"].add_edge("B", "D", weight=1110)
data[41]["mst"].add_edge("B", "N", weight=571)
data[41]["mst"].add_edge("C", "w", weight=270)
data[41]["mst"].add_edge("C", "z", weight=493)
data[41]["mst"].add_edge("E", "r", weight=41)
data[41]["mst"].add_edge("G", "n", weight=54)
data[41]["mst"].add_edge("H", "D", weight=698)
data[41]["mst"].add_edge("I", "n", weight=903)
data[41]["mst"].add_edge("J", "F", weight=972)
data[41]["mst"].add_edge("K", "h", weight=21)
data[41]["mst"].add_edge("L", "z", weight=801)
data[41]["mst"].add_edge("M", "t", weight=62)
data[41]["mst"].add_edge("a", "C", weight=1071)
data[41]["mst"].add_edge("a", "M", weight=1128)
data[41]["mst"].add_edge("b", "I", weight=397)
data[41]["mst"].add_edge("b", "k", weight=475)
data[41]["mst"].add_edge("c", "E", weight=672)
data[41]["mst"].add_edge("c", "G", weight=577)
data[41]["mst"].add_edge("d", "x", weight=408)
data[41]["mst"].add_edge("e", "K", weight=559)
data[41]["mst"].add_edge("e", "f", weight=752)
data[41]["mst"].add_edge("f", "s", weight=1278)
data[41]["mst"].add_edge("g", "H", weight=111)
data[41]["mst"].add_edge("h", "r", weight=154)
data[41]["mst"].add_edge("i", "t", weight=1099)
data[41]["mst"].add_edge("l", "b", weight=3)
data[41]["mst"].add_edge("m", "w", weight=1134)
data[41]["mst"].add_edge("o", "J", weight=1051)
data[41]["mst"].add_edge("p", "B", weight=171)
data[41]["mst"].add_edge("p", "q", weight=707)
data[41]["mst"].add_edge("r", "y", weight=1174)
data[41]["mst"].add_edge("s", "j", weight=1190)
data[41]["mst"].add_edge("u", "A", weight=310)
data[41]["mst"].add_edge("v", "L", weight=485)
data[41]["mst"].add_edge("v", "O", weight=137)
data[41]["mst"].add_edge("w", "p", weight=330)
data[41]["mst"].add_edge("x", "q", weight=595)
data[41]["mst"].add_edge("y", "N", weight=1211)
data[41]["mst"].add_edge("z", "F", weight=1112)
data[41]["solutions"] = [
    { "edge": ("c", "g"), "weight": 1665, "expected": [('a', 'C'), ('a', 'M'), ('l', 'b'), ('C', 'w'), ('C', 'z'), ('M', 't'), ('b', 'I'), ('b', 'k'), ('I', 'n'), ('c', 'G'), ('c', 'E'), ('G', 'n'), ('g', 'H'), ('E', 'r'), ('d', 'x'), ('i', 't'), ('x', 'q'), ('e', 'K'), ('e', 'f'), ('K', 'h'), ('f', 's'), ('s', 'j'), ('u', 'A'), ('H', 'D'), ('h', 'r'), ('r', 'y'), ('m', 'w'), ('w', 'p'), ('o', 'J'), ('J', 'F'), ('p', 'B'), ('p', 'q'), ('B', 'N'), ('B', 'D'), ('y', 'N'), ('v', 'O'), ('v', 'L'), ('A', 'N'), ('L', 'z'), ('z', 'F')] },
    { "edge": ("k", "u"), "weight": 1050, "expected": [('a', 'C'), ('a', 'M'), ('l', 'b'), ('C', 'w'), ('C', 'z'), ('M', 't'), ('b', 'I'), ('b', 'k'), ('k', 'u'), ('I', 'n'), ('c', 'G'), ('c', 'E'), ('G', 'n'), ('g', 'H'), ('E', 'r'), ('d', 'x'), ('i', 't'), ('x', 'q'), ('e', 'K'), ('e', 'f'), ('K', 'h'), ('f', 's'), ('s', 'j'), ('u', 'A'), ('H', 'D'), ('h', 'r'), ('r', 'y'), ('m', 'w'), ('w', 'p'), ('o', 'J'), ('J', 'F'), ('p', 'B'), ('p', 'q'), ('B', 'N'), ('B', 'D'), ('y', 'N'), ('v', 'O'), ('v', 'L'), ('L', 'z'), ('z', 'F')] },
    { "edge": ("C", "z"), "weight": 492, "expected": [('a', 'C'), ('a', 'M'), ('l', 'b'), ('C', 'w'), ('C', 'z'), ('M', 't'), ('b', 'I'), ('b', 'k'), ('I', 'n'), ('c', 'G'), ('c', 'E'), ('G', 'n'), ('g', 'H'), ('E', 'r'), ('d', 'x'), ('i', 't'), ('x', 'q'), ('e', 'K'), ('e', 'f'), ('K', 'h'), ('f', 's'), ('s', 'j'), ('u', 'A'), ('H', 'D'), ('h', 'r'), ('r', 'y'), ('m', 'w'), ('w', 'p'), ('o', 'J'), ('J', 'F'), ('p', 'B'), ('p', 'q'), ('B', 'N'), ('B', 'D'), ('y', 'N'), ('v', 'O'), ('v', 'L'), ('A', 'N'), ('L', 'z'), ('z', 'F')] },
    { "edge": ("v", "L"), "weight": 486, "expected": [('a', 'C'), ('a', 'M'), ('l', 'b'), ('C', 'w'), ('C', 'z'), ('M', 't'), ('b', 'I'), ('b', 'k'), ('I', 'n'), ('c', 'G'), ('c', 'E'), ('G', 'n'), ('g', 'H'), ('E', 'r'), ('d', 'x'), ('i', 't'), ('x', 'q'), ('e', 'K'), ('e', 'f'), ('K', 'h'), ('f', 's'), ('s', 'j'), ('u', 'A'), ('H', 'D'), ('h', 'r'), ('r', 'y'), ('m', 'w'), ('w', 'p'), ('o', 'J'), ('J', 'F'), ('p', 'B'), ('p', 'q'), ('B', 'N'), ('B', 'D'), ('y', 'N'), ('v', 'O'), ('v', 'L'), ('A', 'N'), ('L', 'z'), ('z', 'F')] }
]